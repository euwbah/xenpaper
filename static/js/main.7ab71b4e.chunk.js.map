{"version":3,"sources":["../../xenpaper-ui/src/AppWrapper.tsx","../../xenpaper-ui/src/component/IconToggle.tsx","../../xenpaper-ui/src/component/Text.tsx","../../xenpaper-ui/src/component/Codearea.tsx","../../xenpaper-ui/src/component/ErrorMessage.tsx","../../xenpaper-ui/src/component/LoaderPane.tsx","../../xenpaper-ui/src/component/Char.tsx","../../xenpaper-ui/src/hooks/useAnimationFrame.ts","../../xenpaper-ui/src/layout/Layout.ts","../../xenpaper-ui/src/assets/xenpaper-logo-512x512.png","../../xenpaper-ui/src/Sidebars.tsx","../../mosc/src/mosc.ts","../../xenpaper-ui/src/PitchRuler.tsx","../../xenpaper-ui/src/data/grammar.ts","../../xenpaper-ui/src/data/grammar-to-chars.ts","../../xenpaper-ui/src/data/process-grammar.ts","../../xenpaper-ui/src/hooks/useHash.ts","../../xenpaper-ui/src/hooks/useWindowLoaded.ts","../../sound-engine-tonejs/src/sound-engine-tonejs.ts","../../xenpaper-ui/src/Xenpaper.tsx","reportWebVitals.ts","index.tsx"],"names":["GlobalStyle","createGlobalStyle","theme","colors","background","normal","light","text","placeholder","focus","highlights","delimiter","pitch","chord","setterGroup","setter","scaleGroup","scale","comment","commentStart","unknown","error","errorMessage","fonts","mono","copy","widths","sm","AppWrapper","props","children","rel","href","clipIn","keyframes","clipOut","colorIn","colorOut","Boundary","styled","button","hoverBackground","large","Icon","div","show","IconToggle","React","memo","state","paths","onClick","loaded","Object","keys","map","pathState","viewBox","d","index","Text","span","textStyle","typography","space","colorSystem","Codearea","value","onChange","charElements","freeze","content","color","style","fontStyle","Outer","fontSize","disabled","Inner","Textarea","autoCapitalize","autoComplete","autoCorrect","spellCheck","Highlight","aria-hidden","textarea","pre","fadeIn","ErrorMessage","LoaderPane","height","css","Char","ch","charData","soundEngine","useState","active","setActive","cb","deps","frame","useRef","last","performance","now","init","animate","time","current","delta","requestAnimationFrame","useEffect","cancelAnimationFrame","useAnimationFrame","playing","position","playTime","start","end","undefined","CharSpan","className","styledProps","compose","layout","flexbox","grid","border","Box","Flex","Flink","a","Footer","px","py","as","target","SidebarInfo","onSetTune","setSidebar","pad","H","B","pt","Ex","tune","C","display","SidebarShare","url","urlEmbed","iframeCode","copiedLink","setCopiedLink","copiedIframe","setCopiedIframe","ShareInput","flexShrink","ml","onCopy","TryButton","EmbedIframe","src","frameBorder","iframe","input","attrs","readOnly","Sidebar","title","desc","wide","TextPanel","width","flexDirection","minHeight","top","right","pr","cross","none","LogoArea","Hsize","lineHeight","alignItems","mr","alt","logo","Logo","p","flexGrow","h2","Eg","E","centsToRatio","cents","octave","octaveDivisionToRatio","steps","stepsInOctave","octaveSize","Math","pow","ratioToOctaveDivision","ratio","log","sortByTime","items","slice","sort","b","tempoTimeToMs","bpm1","bpm2","duration","u","v","timeToMs","tempoChanges","push","bpm","bpmEnd","ms","tempoItems","filter","item","type","forEach","tempo","all","lastChange","length","nextTempo","lerp","tempoChange","i","findTempoRangeForTime","SoundEngine","scoreMs","events","Set","note","loop","params","this","callback","add","delete","useStrictMode","ReactKonva","Stage","Layer","Group","Rect","Line","hzToPan","hz","log2","panToHz","pan","panToCents","pxToPan","viewPan","viewZoom","hzInRange","lowHz","highHz","getGradientColorFromNote","matched","label","match","hsl","hue","floor","Number","PitchRuler","rulerState","onClear","useCallback","set","draft","notes","clear","flexWrap","pb","render","form","Label","useCheckbox","Button","useInput","plots","useValue","plot","e","min","max","step","PitchRulerCanvas","useDimensions","dimensionsRef","rootHz","notesActive","colourMode","colourModeThreshold","colourModeSoft","visibleRange","noteSetWidth","getY","panToPx","getColor","compare","Array","from","values","startsWith","replace","proxNotes","threshold","hard","noteCents","distance","abs","round","getColorFromNoteProximity","dragStartState","dragging","setDragging","handleMouseDown","evt","preventDefault","startPan","startZoom","startDrag","clientY","handleMouseMove","dragState","nowDrag","onMouseUp","window","addEventListener","removeEventListener","handleWheel","deltaY","handleTouchStart","handleTouchMove","backgroundColor","cursor","ref","onMouseDown","onMouseMove","onWheel","onTouchStart","onTouchMove","collect","x","NoteSet","visibleNotes","y","stroke","strokeWidth","points","fill","align","ROOT_GRID_POSITIONS","RootGrid","lines","dash","CENT_GRID_POSITIONS","CentsGrid","node","fn","Node","meta","pos","sumLen","nodes","reduce","len","Semicolon","Colon","BarLine","Whitespace","OctaveModifier","chars","split","PitchCents","PitchOctaveDivision","numerator","denominator","slash","octaveDenom","PitchOctaveDivision2","PitchRatio","PitchDegree","degree","PitchHz","Pitch","All","Optional","Any","args","PitchGroup","Star","elements","Hold","Tail","Rest","Note","tail","RatioChordPitch","RatioChordPitchGroup","Chord","pitches","RatioChord","EdoScale","divisions","ScaleOctaveMarker","PitchGroupScalePrefix","prefix","PitchGroupScale","isArray","pitchGroupScalePrefix","scaleOctaveMarker","RatioChordScale","Scale","SetScale","SetRoot","SetBpmValue","SetBpm","SetBmsValue","bms","SetBms","SetSubdivisionValue","subdivision","SetSubdivision","SetOscValue","osc","SetOsc","SetEnvValue","s","r","SetEnv","SetRulerRange","low","high","SetRulerPlot","SetRuler","SetPrimes","primesPitches","Setter","SetterGroup","setters","Comment","Sequence","ParamEmbed","Param","ParamGroup","XenpaperGrammar","parts","paramGroup","find","part","sequence","parser","Parser","colorMap","Map","extract","data","parent","withinTime","get","key","grammarToChars","limit","name","Error","LIST_OF_PRIMES","primeFactorize","n","factors","every","power","realizeRatio","num","denom","context","num_factors","denom_factors","console","warn","primesTuning","pitchToRatio","octaveMulti","pitchDegreeToRatio","edoToRatios","edoSize","ratios","pitchDegreeWrap","wrappedDegree","pitchToHz","tailToTime","timeEnd","ratioToCentsLabel","ratioToCents","ratioInEquaves","ratioWrap","toFixed","pitchToLabel","centsLabel","scaleLabels","edoToLabels","labels","ENV_VALUES","times","chordToMosc","timeProps","arr","pitchTypes","firstRatioPitch","firstDenominator","ratioPitchTypes","addRatioPitchType","colons","lastNumerator","concat","rulerStateCaptureRootHz","initial","processGrammar","grammar","grammarSequence","INITIAL_ENV","moscItems","initialRulerState","noteToMosc","rest","setterToMosc","newPlot","msEnd","setterToRulerState","setPrimes","filteredPitches","setScale","degreePitches","pop","addRatio","thisTimeToMs","score","lengthTime","hashify","newHash","encodeURIComponent","reverseString","str","reverse","join","useHash","initialHash","hash","decodeURIComponent","unhashify","location","substr","localStorage","getItem","setHash","onHashChange","_setHash","newHashEncoded","history","replaceState","setItem","windowLoadPromise","Promise","resolve","handleLoad","flatMap","mapper","out","OSC_PARTIAL_SUFFIXES","OSC_TYPES_EXPANDED","base","OSC_TYPES","suffix","SoundEngineTonejs","_started","_endMs","_loopEndMs","_activeNoteEvents","synth","Tone","oscillator","volume","envelope","attack","sustain","decay","release","chain","seconds","onEnd","releaseAll","noteMs","_triggerEvent","on","stop","startMs","endMs","setLoopActive","setLoopStart","setLoopEnd","loopStart","loopEnd","cancel","schedule","triggerAttackRelease","paramMs","includes","setAutoFreeze","enableMapSet","parse","unparsed","parsed","message","XenpaperGrammarParser","param","lengthMs","scoreToMs","setScore","errorAt","lineNumber","colNumber","lineCount","colCount","getMsAtLine","line","counted","tuneSplit","chr","PLAY_PATHS","paused","Xenpaper","setLoaded","document","ready","useWindowLoaded","XenpaperApp","tuneForm","useDendriform","embed","useDerive","newValue","hashified","branch","useChange","parsedForm","selectedLine","looping","lowPan","highPan","useRulerState","onNote","id","handleSetPlayback","play","gotoMs","pause","handleTogglePlayback","handleToggleLoop","event","ctrlKey","metaKey","keyCode","shiftKey","redo","undo","sidebarState","toggleSidebarInfo","toggleSidebarShare","toggleSidebarRuler","codepaneContainerProps","playPause","undoRedo","useHistory","canUndo","canRedo","SideButton","sidebarToggles","sidebar","code","CodePanel","htmlTitle","SetHtmlTitle","openOnXenpaper","EditOnXenpaperButton","EmbedLayout","NormalLayout","Toolbar","mt","mb","Hr","my","pl","overflow","inputProps","tuneChars","charDataArray","hasPlayStartButtons","some","playStartLine","createPlayStart","PlayStart","stopPropagation","Helmet","property","multiline","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","getElementById"],"mappings":"wQAKMA,EAAcC,YAAH,g2DA4HXC,EAAQ,CACVC,OAnCmB,CACnBC,WAAY,CACRC,OAAQ,UACRC,MAAO,WAEXC,KAAM,CACFC,YAAa,WAEjBC,MAAO,UACPC,WAAY,CACRC,UAAW,UACXC,MAAO,UACPC,MAAO,UACPC,YAAa,UACbC,OAAQ,UACRC,WAAY,UACZC,MAAO,UACPC,QAAS,UACTC,aAAc,UACdC,QAAS,UACTC,MAAO,UACPC,aAAc,YAelBC,MAXU,CACVC,KAAK,wBACLC,KAAK,wBAULC,OAPW,CACXC,GAAI,UAaD,SAASC,EAAWC,GACvB,IAAOC,EAAYD,EAAZC,SACP,OAAO,qCACH,sBAAMC,IAAI,aAAaC,KAAK,8BAC5B,sBAAMA,KAAK,4FAA4FD,IAAI,eAC3G,sBAAMC,KAAK,4EAA4ED,IAAI,eAC3F,eAAC,IAAD,CAAe7B,MAAOA,EAAtB,UACI,cAACF,EAAD,IACC8B,QChJb,I,8DAAMG,GAASC,YAAH,uTAcNC,GAAUD,YAAH,oRAUPE,GAAUF,YAAH,mIAcPG,GAAWH,YAAH,+FAgBRI,GAAWC,IAAOC,OAAV,gaAemB,SAAAX,GAAK,OAAIA,EAAM3B,MAAMC,OAAOM,SAGvD,SAAAoB,GAAK,OAAIA,EAAMY,gBAAN,+CACaZ,EAAM3B,MAAMC,OAAOC,WAAWE,MAD3C,kBAIT,SAAAuB,GAAK,OAAIA,EAAMa,OAAN,qCAA6Cb,EAAM3B,MAAMwB,OAAOC,GAAhE,sFAYTgB,GAAOJ,IAAOK,IAAV,sXAOO,SAAAf,GAAK,OAAIA,EAAMgB,KAAOZ,GAASE,MAK3B,SAAAN,GAAK,OAAIA,EAAMgB,KAAOT,GAAUC,MAQ/C,SAAAR,GAAK,OAAIA,EAAMa,OAAN,qCAA6Cb,EAAM3B,MAAMwB,OAAOC,GAAhE,sFAiBFmB,GAA6CC,IAAMC,MAAK,SAACnB,GAClE,IAAOoB,EAAgFpB,EAAhFoB,MAAOC,EAAyErB,EAAzEqB,MAAOC,EAAkEtB,EAAlEsB,QAArB,EAAuFtB,EAAzDuB,cAA9B,WAAuFvB,EAA1CY,uBAA7C,WAAuFZ,EAAjBa,aAAtE,SAEA,OAAO,cAACJ,GAAD,CAAUa,QAAS,kBAAMA,GAAWA,EAAQF,IAAQR,gBAAiBA,EAAiBC,MAAOA,EAA7F,SACFW,OAAOC,KAAKJ,GAAOK,KAAI,SAACC,GACrB,OAAO,cAACb,GAAD,CAAsBE,KAAMO,GAAUH,IAAUO,EAAWd,MAAOA,EAAlE,SACH,qBAAKe,QAAQ,YAAb,SACKP,EAAMM,GAAWD,KAAI,SAACG,EAAGC,GAAJ,OAAc,sBAAkBD,EAAGA,GAAVC,SAFrCH,W,SClIjBI,GAAOrB,IAAOsB,KAAV,+DACXC,KACAC,KACAC,KACAC,MCKOC,GAAW,SAACrC,GACrB,IAAOsC,EAAyCtC,EAAzCsC,MAAOC,EAAkCvC,EAAlCuC,SAAUC,EAAwBxC,EAAxBwC,aAAcC,EAAUzC,EAAVyC,OAEhCC,EAAoB,KAAVJ,EACV,eAACP,GAAD,CAAMY,MAAM,mBAAmBC,MAAO,CAACC,UAAW,UAAlD,gCAEE,uBAAM,0BAER,qCAAGL,EAAa,uBAAM,0BAE5B,OAAO,cAACM,GAAD,CAAOC,SAAU,CAAC,SAAU,UAAWC,SAAUP,EAAjD,SACH,eAACQ,GAAD,WACI,cAACC,GAAD,CACIZ,MAAOA,EACPC,SAAUA,EACVY,eAAe,MACfC,aAAa,MACbC,YAAY,MACZC,WAAW,QACXN,SAAUP,IAEd,cAACc,GAAD,CAAWC,cAAY,OAAOf,OAAQA,EAAtC,SAA+CC,UAUrDI,GAAQpC,IAAOK,IAAV,qfAGLkB,KACAC,MAiB0B,SAAAlC,GAAK,OAAIA,EAAM3B,MAAMC,OAAOM,SAItD,SAAAoB,GAAK,OAAIA,EAAMgD,SAAN,8FAIP,MAGFC,GAAQvC,IAAOK,IAAV,yNAULmC,GAAWxC,IAAO+C,SAAV,07BA+CRF,GAAY7C,IAAOgD,IAAV,ooBAqBO,SAAA1D,GAAK,OAAIA,EAAMyC,OAAS,OAAS,UCvJjDkB,GAAStD,YAAH,6KAiBCuD,GAAelD,IAAOK,IAAV,qIAIR4C,ICpBXA,GAAStD,YAAH,4FAgBCwD,GAAanD,IAAOK,IAAV,wEACT,SAAAf,GAAK,OAAIA,EAAM8D,UAEvB,SAAA9D,GAAK,OAAIA,EAAMuB,OAASwC,YAAf,8DAAgCJ,IAAhC,MCVFK,GAAO9C,IAAMC,MAAK,SAAcnB,GACzC,IAAOiE,EAA6BjE,EAA7BiE,GAAIC,EAAyBlE,EAAzBkE,SAAUC,EAAenE,EAAfmE,YAErB,EAA4BC,oBAAkB,GAA9C,mBAAOC,EAAP,KAAeC,EAAf,KAeA,OC1B6B,SAACC,EAAcC,GAC5C,IAAMC,EAAQC,iBAAe,GACvBC,EAAOD,iBAAeE,YAAYC,OAClCC,EAAOJ,iBAAeE,YAAYC,OAElCE,EAAU,SAAVA,IACF,IAAMF,EAAMD,YAAYC,MAClBG,GAAQH,EAAMC,EAAKG,SAAW,IAC9BC,GAASL,EAAMF,EAAKM,SAAW,IACrCV,EAAGS,EAAME,GACTP,EAAKM,QAAUJ,EACfJ,EAAMQ,QAAUE,sBAAsBJ,IAG1CK,qBAAU,WAEN,OADAX,EAAMQ,QAAUE,sBAAsBJ,GAC/B,kBAAMM,qBAAqBZ,EAAMQ,YACzCT,GDJHc,EAAkB,WAAO,IAAD,EACdN,EAAOb,EAAYoB,UAAYpB,EAAYqB,YAAc,EAC/D,mBAAqBtB,QAArB,IAAqBA,OAArB,EAAqBA,EAAUuB,gBAA/B,QAA2C,GAA3C,mBAAOC,EAAP,KAAcC,EAAd,KAQArB,GANyB,IAAVU,QACEY,IAAVF,QACQE,IAARD,GACAD,GAASV,GACTW,EAAMX,KAGd,CAACf,EAAIC,IAED,cAAC2B,GAAD,CAAUC,UAAWzB,EAAS,SAAW,GAAI1B,MAAK,OAAEuB,QAAF,IAAEA,OAAF,EAAEA,EAAUvB,MAA9D,SAAsEsB,OAQ3E4B,GAAWnF,IAAOsB,KAAV,+KACD,SAAAhC,GAAK,OAAIA,EAAM3B,MAAMC,OAAOO,WAAWmB,EAAM2C,OAAS,cACtC,SAAA3C,GAAK,MAAoB,UAAhBA,EAAM2C,MAAoB,OAAS,QE1BnEoD,GAAcC,aAChB7D,KACAQ,KACAsD,KACAC,KACAC,KACA5H,KACA6H,KACAZ,MAGSa,GAAM3F,IAAOK,IAAV,oCACVgF,IAGOO,GAAO5F,IAAOK,IAAV,wDAEXgF,IC/BS,OAA0B,kD,SCcnCQ,GAAQ7F,IAAO8F,EAAV,kPACE,SAACxG,GAAD,OAAWA,EAAM3B,MAAMC,OAAOO,WAAWU,WAezCkH,GAAS/F,aAAO,SAACV,GAC1B,OACI,cAACqG,GAAD,yBAAKK,GAAI,EAAGC,GAAI,GAAO3G,GAAvB,aACI,eAAC+B,GAAD,CAAM6E,GAAG,MAAMjE,MAAM,mBAArB,UACI,cAAC4D,GAAD,CAAOpG,KAAK,IAAZ,sBAAiC,IACjC,cAACoG,GAAD,CACIM,OAAO,SACP1G,KAAK,qDAFT,sBAKS,IAPb,aAQe,IACX,cAACoG,GAAD,CAAOM,OAAO,SAAS1G,KAAK,0BAA5B,2BAES,IAXb,QAYU,IACN,cAACoG,GAAD,CAAOM,OAAO,SAAS1G,KAAK,kCAA5B,wBAbJ,IAgBM,IACF,cAACoG,GAAD,CAAOM,OAAO,SAAS1G,KAAK,uBAA5B,mBAjBJ,IAoBM,IACF,cAACoG,GAAD,CAAOM,OAAO,SAAS1G,KAAK,4BAA5B,oBArBJ,IAwBM,IACF,cAACoG,GAAD,CACIM,OAAO,SACP1G,KAAK,uCAFT,sBAzBJ,IA+BM,IACF,cAACoG,GAAD,CAAOM,OAAO,SAAS1G,KAAK,iCAA5B,+BAES,IAlCb,MAmCQ,IACJ,cAACoG,GAAD,CAAOM,OAAO,SAAS1G,KAAK,yBAA5B,wBApCJ,YAHUO,CAAH,2EAgDA,SAACV,GAAD,OAAWA,EAAM3B,MAAMqB,MAAME,QAQnCkH,GAAc,SAAC9G,GACxB,IAAQ+G,EAA0B/G,EAA1B+G,UAAWC,EAAehH,EAAfgH,WACnB,OACI,eAAC,GAAD,CAASA,WAAYA,EAAYC,KAAG,EAApC,UACI,cAACC,GAAD,2BACA,eAACC,GAAD,kFAEQ,IAFR,iBAIA,cAACd,GAAD,CAAKe,GAAI,EAAT,SACI,cAACF,GAAD,sBAEJ,eAACC,GAAD,6FAGI,cAACE,GAAD,CAAIC,KAAK,WAAW3E,MAAM,QAAQoE,UAAWA,OAEjD,eAACI,GAAD,wDAC8C,cAACI,GAAD,kBAD9C,sCAE2B,cAACA,GAAD,kBAF3B,IAGI,cAACF,GAAD,CACIC,KAAK,mBACL3E,MAAM,QACNoE,UAAWA,OAGnB,eAACI,GAAD,yCAC+B,cAACI,GAAD,gBAD/B,gFAGI,cAACF,GAAD,CACIC,KAAK,uBACL3E,MAAM,QACNoE,UAAWA,OAGnB,eAACI,GAAD,gDAEI,uBAFJ,yCAEgD,cAACI,GAAD,oBAFhD,IAGI,uBAHJ,eAGsB,cAACA,GAAD,0BAHtB,IAII,uBAJJ,cAIqB,cAACA,GAAD,mBAJrB,IAKI,uBALJ,+BAKsC,eAACA,GAAD,gBAAM,KAAN,QALtC,IAMI,uBANJ,4DAMoE,IAChE,eAACA,GAAD,eAAK,KAAL,UACA,uBARJ,0BAQiC,cAACA,GAAD,oBAC7B,cAACF,GAAD,CACIC,KAAM,gDACN3E,MAAM,QACNoE,UAAWA,OAGnB,eAACI,GAAD,uDAC6C,cAACI,GAAD,UAAI,MADjD,2CAEgC,cAACA,GAAD,gBAFhC,gDAGsB,cAACA,GAAD,gBAHtB,6CAKI,cAACF,GAAD,CACIC,KAAM,6BACN3E,MAAM,QACNoE,UAAWA,OAGnB,eAACI,GAAD,4CACkC,cAACI,GAAD,gBADlC,QAC+C,cAACA,GAAD,gBAD/C,qCAGI,cAACF,GAAD,CACIC,KAAK,yCACL3E,MAAM,QACNoE,UAAWA,OAGnB,eAACI,GAAD,kEACyD,IACrD,cAACI,GAAD,oBACA,cAACF,GAAD,CAAIC,KAAK,cAAc3E,MAAM,QAAQoE,UAAWA,OAEpD,cAACV,GAAD,CAAKe,GAAI,EAAT,SACI,cAACF,GAAD,yBAEJ,eAACC,GAAD,0CACgC,cAACI,GAAD,gBADhC,0BAEI,cAACF,GAAD,CACIC,KACI,uEAEJ3E,MAAM,QACNoE,UAAWA,OAGnB,cAACV,GAAD,CAAKe,GAAI,EAAT,SACI,cAACF,GAAD,uBAEJ,eAACC,GAAD,yEACgE,IAC5D,cAACI,GAAD,UAAI,MAFR,QAEqB,cAACA,GAAD,UAAI,MAFzB,2HAI2B,cAACA,GAAD,oBAJ3B,IAKI,cAACF,GAAD,CACIC,KAAK,iCACL3E,MAAM,QACNoE,UAAWA,OAGnB,eAACI,GAAD,wEAC+D,IAC1D,MAFL,8BAEsC,cAACI,GAAD,oBAFtC,IAGI,cAACF,GAAD,CACIC,KAAK,mBACL3E,MAAM,QACNoE,UAAWA,OAGnB,eAACI,GAAD,4DAEI,cAACE,GAAD,CACIC,KAAM,mDACN3E,MAAM,QACNoE,UAAWA,OAGnB,eAACI,GAAD,0FAEe,cAACI,GAAD,UAAI,MAFnB,qCAE8D,IAC1D,cAACA,GAAD,kBACA,cAACF,GAAD,CACIC,KAAM,yCACN3E,MAAM,QACNoE,UAAWA,OAGnB,eAACI,GAAD,iDAEI,cAACE,GAAD,CACIC,KAAM,qCACN3E,MAAM,QACNoE,UAAWA,OAGnB,eAACI,GAAD,oEAC2D,IACvD,cAACI,GAAD,UAAI,OAFR,8CAE6D,IACzD,cAACA,GAAD,mBAHJ,mBAG+B,cAACA,GAAD,sBAH/B,IAII,cAACF,GAAD,CACIC,KAAM,qBACN3E,MAAM,QACNoE,UAAWA,OAGnB,eAACI,GAAD,kJAII,cAACE,GAAD,CACIC,KAAM,8CACN3E,MAAM,QACNoE,UAAWA,OAGnB,eAACI,GAAD,qCAC2B,cAACI,GAAD,UAAI,OAD/B,QAC6C,cAACA,GAAD,UAAI,MADjD,IAEI,cAACF,GAAD,CACIC,KAAM,4CACN3E,MAAM,QACNoE,UAAWA,OAGnB,eAACI,GAAD,kHAEwC,cAACI,GAAD,UAAI,WAF5C,2EAGiE,IAC7D,cAACA,GAAD,UAAI,aACJ,cAACF,GAAD,CACIC,KAAM,uBACN3E,MAAM,QACNoE,UAAWA,OAGnB,eAACI,GAAD,8HAGI,cAACE,GAAD,CACIC,KAAM,uBACN3E,MAAM,QACNoE,UAAWA,OAGnB,eAACI,GAAD,iEAEI,cAACE,GAAD,CACIC,KAAM,yBACN3E,MAAM,QACNoE,UAAWA,OAGnB,cAACV,GAAD,CAAKe,GAAI,EAAT,SACI,cAACF,GAAD,wBAEJ,eAACC,GAAD,oHAE6C,cAACI,GAAD,wBAF7C,MAEiE,IAC7D,cAACA,GAAD,yBAHJ,4BAG8C,cAACA,GAAD,gBAH9C,QAG2D,cAACA,GAAD,gBAH3D,0IAMc,cAACA,GAAD,qCAGd,cAAClB,GAAD,CAAKe,GAAI,EAAT,SACI,cAACF,GAAD,uBAEJ,eAACC,GAAD,0DACgD,cAACI,GAAD,wBADhD,iBAEgB,cAACA,GAAD,wBACZ,cAACF,GAAD,CACIC,KAAK,wBACL3E,MAAM,QACNoE,UAAWA,OAGnB,eAACI,GAAD,+DACsD,IAClD,cAACI,GAAD,wBAFJ,IAGI,cAACF,GAAD,CACIC,KAAK,kBACL3E,MAAM,QACNoE,UAAWA,OAGnB,eAACI,GAAD,wEAC+D,IAC3D,cAACI,GAAD,wBAFJ,oCAEqD,cAACA,GAAD,oBAFrD,UAGS,cAACA,GAAD,kBAHT,OAGuB,cAACA,GAAD,oBAHvB,qDAIwB,cAACA,GAAD,sBACpB,cAACF,GAAD,CACIC,KAAK,0CACL3E,MAAM,QACNoE,UAAWA,OAGnB,cAACV,GAAD,CAAKe,GAAI,EAAT,SACI,cAACF,GAAD,sBAEJ,eAACC,GAAD,uEAC8D,IAC1D,cAACI,GAAD,wBAFJ,iBAEkC,cAACA,GAAD,6BAC9B,cAACF,GAAD,CACIC,KACI,6DAEJ3E,MAAM,QACNoE,UAAWA,OAGnB,eAACI,GAAD,+BACqB,cAACI,GAAD,mBADrB,KACkC,cAACA,GAAD,uBADlC,KACmD,cAACA,GAAD,qBADnD,OACqE,IACjE,cAACA,GAAD,uBAFJ,iDAEkE,IAC9D,cAACA,GAAD,iBAHJ,KAGe,cAACA,GAAD,iBAHf,MAG2B,cAACA,GAAD,kBAH3B,uDAIyB,cAACA,GAAD,gBAJzB,OAIqC,cAACA,GAAD,iBAJrC,8CAMI,cAACF,GAAD,CACIC,KACI,mEAEJ3E,MAAM,QACNoE,UAAWA,OAGnB,eAACI,GAAD,mEAC0D,IACtD,cAACI,GAAD,wBAFJ,sFAGsC,cAACA,GAAD,gBAHtC,wBAGoE,IAChE,cAACA,GAAD,gBAJJ,+BAIwC,cAACA,GAAD,yBACpC,cAACF,GAAD,CACIC,KAAM,uCACN3E,MAAM,QACNoE,UAAWA,OAGnB,eAACI,GAAD,sEAC6D,IACzD,cAACZ,GAAD,CAAOM,OAAO,SAAS1G,KAAK,4BAA5B,oBAFJ,OAQA,cAACkG,GAAD,CAAKe,GAAI,EAAT,SACI,cAACF,GAAD,8BAEJ,eAACC,GAAD,mDACyC,cAACI,GAAD,kBADzC,QACwD,cAACA,GAAD,oBADxD,kBAEI,cAACA,GAAD,mCAFJ,SAGU,cAACA,GAAD,gBAHV,qCAII,cAACA,GAAD,gBAJJ,yCAKI,cAACA,GAAD,gBALJ,6FAOA,eAACJ,GAAD,iHAII,cAACE,GAAD,CACIC,KAAM,gDACN3E,MAAM,QACNoE,UAAWA,OAGnB,eAACI,GAAD,yEACgE,IAC5D,cAACZ,GAAD,CAAOM,OAAO,SAAS1G,KAAK,8BAA5B,mBAFJ,2GAKgD,cAACoH,GAAD,kCALhD,gBAQA,eAACJ,GAAD,oCAC0B,cAACI,GAAD,kBAD1B,8JAII,cAACF,GAAD,CACIC,KAAM,mDACN3E,MAAM,QACNoE,UAAWA,OAGnB,eAACI,GAAD,sIAKI,cAACE,GAAD,CACIC,KAAM,oHACN3E,MAAM,QACNoE,UAAWA,OAGnB,eAACI,GAAD,uCAC6B,cAACZ,GAAD,CAAOM,OAAO,SAAS1G,KAAK,8DAA5B,6BAD7B,uBAMA,cAACkG,GAAD,CAAKe,GAAI,EAAT,SACI,cAACF,GAAD,sBAEJ,cAACC,GAAD,gLAKA,eAACA,GAAD,0DACgD,cAACI,GAAD,qBADhD,wHAII,cAACF,GAAD,CACIC,KAAM,sBACN3E,MAAM,QACNoE,UAAWA,OAGnB,cAACV,GAAD,CAAKe,GAAI,EAAT,SACI,cAACF,GAAD,yCAEJ,eAACC,GAAD,mFAEc,IACV,cAACZ,GAAD,CACIM,OAAO,SACP1G,KAAK,mDAFT,qCAKS,IARb,8CAWA,cAACkG,GAAD,CAAKmB,QAAS,CAAC,QAAS,QAAS,QAASJ,GAAI,EAA9C,SACI,cAACX,GAAD,UAYHgB,GAAe,SAACzH,GACzB,IAAQgH,EAA8BhH,EAA9BgH,WAAYU,EAAkB1H,EAAlB0H,IAAKC,EAAa3H,EAAb2H,SAEnBC,EAAU,gDAA4CD,EAA5C,gDAEhB,EAAoCvD,oBAAkB,GAAtD,mBAAOyD,EAAP,KAAmBC,EAAnB,KACA,EAAwC1D,oBAAkB,GAA1D,mBAAO2D,EAAP,KAAqBC,EAArB,KAEA,OACI,eAAC,GAAD,CAAShB,WAAYA,EAAYC,KAAG,EAApC,UACI,eAACZ,GAAD,WACI,cAACa,GAAD,yBACA,eAACZ,GAAD,WACI,cAAC2B,GAAD,CAAY3F,MAAOoF,IACnB,cAACrB,GAAD,CAAK6B,WAAW,IAAIC,GAAI,EAAxB,SACI,cAAC,mBAAD,CACIzJ,KAAMgJ,EACNU,OAAQ,kBAAMN,GAAc,IAFhC,SAII,cAACO,GAAD,UACKR,EAAa,SAAW,mBAM7C,eAACxB,GAAD,CAAKe,GAAI,EAAT,UACI,cAACF,GAAD,oBACA,eAACZ,GAAD,WACI,cAAC2B,GAAD,CAAY3F,MAAOsF,IACnB,cAACvB,GAAD,CAAK6B,WAAW,IAAIC,GAAI,EAAxB,SACI,cAAC,mBAAD,CACIzJ,KAAMgJ,EACNU,OAAQ,kBAAMJ,GAAgB,IAFlC,SAII,cAACK,GAAD,UACKN,EAAe,SAAW,gBAK3C,cAAC1B,GAAD,CAAKe,GAAI,EAAT,SACI,cAACkB,GAAD,CAEIC,IAAKZ,EACLa,YAAY,KAFPb,YAUvBW,GAAc5H,IAAO+H,OAAV,8CAIXR,GAAavH,IAAOgI,MAAMC,OAAM,iBAAO,CAAEC,UAAU,KAAtClI,CAAH,kLAEQ,SAACV,GAAD,OAAWA,EAAM3B,MAAMC,OAAOC,WAAWC,UAC9C,SAACwB,GAAD,OAAWA,EAAM3B,MAAMqB,MAAMC,QAGlC,SAACK,GAAD,OACFA,EAAM3B,MAAMC,OAAOO,WAAWmB,EAAM2C,OAAS,cAa5CkG,GAAU,SAAC7I,GACpB,IAAQgH,EAAiDhH,EAAjDgH,WAAY/G,EAAqCD,EAArCC,SAAU6I,EAA2B9I,EAA3B8I,MAAOC,EAAoB/I,EAApB+I,KAAM9B,EAAcjH,EAAdiH,IAAK+B,EAAShJ,EAATgJ,KAChD,OACI,eAACC,GAAD,CACIC,MAAO,CAAC,OAAQ,QAAS,QAASF,EAAO,MAAQ,OACjDG,cAAc,SACdjB,WAAW,IACXkB,UAAU,IACVtF,OAAQ,CAAC,OAAQ,QALrB,UAOI,cAACuC,GAAD,CACIb,SAAU,CAAC,WAAY,SACvB6D,IAAK,EACLC,MAAO,EACPlC,GAAI,EACJmC,GAAI,EALR,SAOI,cAACtI,GAAD,CACIG,MAAM,QACNC,MAAO,CACHmI,MAAO,CACH,gCACA,iCAEJC,KAAM,IAEVnI,QAAS,kBAAM0F,EAAW,SAC1BzF,QAAM,MAGd,eAACmI,GAAD,WACKZ,GAAS,cAACa,GAAD,UAAQb,IACjBC,GACG,cAAChH,GAAD,CACI6E,GAAG,MACHjE,MAAM,mBACNC,MAAO,CAAEC,UAAW,SAAU+G,WAAY,UAH9C,SAKKb,KAGPD,GACE,eAACxC,GAAD,CAAMuD,WAAW,SAAjB,UACI,cAACxD,GAAD,CAAKyD,GAAI,EAAGZ,MAAM,OAAO9B,GAAI,EAA7B,SACI,qBAAK2C,IAAI,gBAAgBxB,IAAKyB,GAAMd,MAAM,WAE9C,eAAC7C,GAAD,WACI,cAAC4D,GAAD,uBACA,cAAClI,GAAD,CACI6E,GAAG,MACHjE,MAAM,mBACNC,MAAO,CACHC,UAAW,SACX+G,WAAY,UALpB,8CAUA,cAAC7H,GAAD,CACI6E,GAAG,MACHjE,MAAM,mBACNC,MAAO,CACHC,UAAW,SACX+G,WAAY,UALpB,0EAehB,cAACvD,GAAD,CAAK6D,EAAGjD,EAAM,EAAI,EAAGkD,SAAS,IAA9B,SACKlK,QAMXgJ,GAAYvI,YAAO4F,GAAP5F,CAAH,oZACS,SAACV,GAAD,OAAWA,EAAM3B,MAAMC,OAAOC,WAAWE,SAC9C,SAACuB,GAAD,OAAWA,EAAM3B,MAAMqB,MAAME,QAqB1C8J,GAAWhJ,YAAO2F,GAAP3F,CAAH,wFACU,SAACV,GAAD,OAAWA,EAAM3B,MAAMC,OAAOC,WAAWC,UAI3DyL,GAAOvJ,YAAO2F,GAAP3F,CAAH,wGAMJyG,GAAIzG,IAAOK,IAAV,sDAIDmG,GAAIxG,IAAO0J,GAAV,8EAKDT,GAAQjJ,IAAO0J,GAAV,iFAKL7C,GAAI7G,IAAOsB,KAAV,qGACY,SAAChC,GAAD,OAAWA,EAAM3B,MAAMqB,MAAMC,QACxB,SAACK,GAAD,OAAWA,EAAM3B,MAAMC,OAAOC,WAAWC,UAW3D6I,GAAK3G,aAAO,SAACV,GAGf,OACI,eAACsG,GAAD,CAAMR,UAAW9F,EAAM8F,UAAvB,UACI,cAACuE,GAAD,oBACA,cAACC,GAAD,CAAGvH,SAAU,CAAC,SAAU,UAAWJ,MAAO3C,EAAM2C,MAAhD,SACK3C,EAAMsH,OAEX,cAACjB,GAAD,CAAK6B,WAAW,IAAhB,SACI,cAACG,GAAD,CAAW/G,QAAS,kBAAMtB,EAAM+G,UAAU/G,EAAMsH,OAAhD,yBAVL5G,CAAH,mJAiBW,SAACV,GAAD,OAAWA,EAAM3B,MAAMqB,MAAMC,QAGxB,SAACK,GAAD,OAAWA,EAAM3B,MAAMC,OAAOC,WAAWC,UAI3D6J,GAAY3H,IAAOC,OAAV,iVAKS,SAACX,GAAD,OAAWA,EAAM3B,MAAMC,OAAOO,WAAWO,SACpD,SAACY,GAAD,OAAWA,EAAM3B,MAAMC,OAAOC,WAAWC,UAchD6L,GAAK3J,IAAOK,IAAV,gJAEK,SAACf,GAAD,OAAWA,EAAM3B,MAAMC,OAAOI,KAAKC,eAU1C2L,GAAI5J,IAAOgD,IAAV,2PAEDzB,KACAC,MAGO,SAAClC,GAAD,OACLA,EAAM3B,MAAMC,OAAOO,WAAWmB,EAAM2C,OAAS,c,wEC5qBxC4H,GAAe,SAACC,GAA+C,IAAhCC,EAA+B,uDAAd,EACzD,OAAOC,GAAsBF,EAAO,KAAM,EAAGC,IAGpCC,GAAwB,SAACC,EAAeC,EAAuBC,GAAoD,IAAhCJ,EAA+B,uDAAd,EAC7G,OAAOK,KAAKC,IAAIF,GAAaF,EAASF,EAASG,GAAkBA,IAOxDI,GAAwB,SAACC,EAAeL,EAAuBC,GAAoD,IAAhCJ,EAA+B,uDAAd,EAC7G,OAAQK,KAAKI,IAAID,GAASH,KAAKI,IAAIL,GAAcD,EAAkBH,EAASG,GAGnEO,GAAa,SAA2BC,GACjD,OAAOA,EAAMC,QAAQC,MAAK,SAAC9E,EAAG+E,GAC1B,OAAG/E,EAAExB,KAAOuG,EAAEvG,MAAc,EACzBwB,EAAExB,KAAOuG,EAAEvG,KAAa,EACpB,MAgBTwG,GAAgB,SAACC,EAAcC,EAAcC,GAC/C,IAAIC,EAAIH,EAAO,GACXI,EAAIH,EAAO,GAEf,OAAGE,IAAMC,EADDF,EACeE,EAAI,IACpB,EAFCF,GAEQE,EAAID,IAAMC,EAAIA,EAAID,EAAIA,GAAK,KAmBlCE,GAAW,SAACV,GAErB,IAAMW,EAA8B,GACpCA,EAAaC,KAAK,CACdC,IAAK,GACLC,OAAQ,GACRlH,KAAM,EACNmH,GAAI,IAGR,IAAMC,EAA0BhB,EAAMiB,QAAO,SAACC,GAAD,MAAqD,UAAdA,EAAKC,QAiBzF,OAfApB,GAAWiB,GAAYI,SAAQ,SAACC,EAAkB3K,EAAe4K,GAC7D,IAAMC,EAAaZ,EAAaA,EAAaa,OAAS,GAChDC,EAAiCH,EAAI5K,EAAQ,GAE7CqK,EAAKX,GAAcmB,EAAWV,IAAKU,EAAWT,OAAQO,EAAMzH,KAAO2H,EAAW3H,MAAQ2H,EAAWR,GACjGD,EAAUW,GAAaA,EAAUC,KAAQD,EAAUZ,IAAMQ,EAAMR,IAErEF,EAAaC,KAAK,CACdC,IAAKQ,EAAMR,IACXC,SACAlH,KAAMyH,EAAMzH,KACZmH,UAID,SAACnH,GACJ,IAAM+H,EArCgB,SAAChB,EAA6B/G,GACxD,IAAI,IAAIgI,EAAIjB,EAAaa,OAAS,EAAGI,GAAK,EAAGA,IACzC,GAAGhI,GAAQ+G,EAAaiB,GAAGhI,KACvB,OAAO+G,EAAaiB,GAG5B,OAAOjB,EAAa,GA+BiBkB,CAAsBlB,EAAc/G,GACrE,OAAOwG,GAAcuB,EAAYd,IAAKc,EAAYb,OAAQlH,EAAO+H,EAAY/H,MAAQ+H,EAAYZ,KAoD5Fe,GAAb,kDAEIC,aAFJ,OAmCIC,OAAS,CACLzH,IAAK,IAAI0H,IACTC,KAAM,IAAID,KArClB,4CAII,WACI,OAAO,IALf,qBAQI,WACI,OAAO,IATf,sBAYI,WACI,OAAO,IAbf,yBAgBI,WACI,OAAO,IAjBf,yDAoBI,sBAAA7G,EAAA,0FApBJ,gHAsBI,sBAAAA,EAAA,0FAtBJ,iHAwBI,WAAa2F,GAAb,SAAA3F,EAAA,0FAxBJ,4EA0BI,SAAQ+G,MA1BZ,2BA2BI,SAAcA,MA3BlB,0BA4BI,cA5BJ,wBA6BI,cA7BJ,6DA+BI,WAAeJ,GAAf,SAAA3G,EAAA,0FA/BJ,kFAwCI,SAAc+F,GAA+B,IAAD,uBAAbiB,EAAa,iCAAbA,EAAa,kBAExCC,KAAKL,OAAOb,GAAMC,SAAQ,SAAAjI,GAAE,OAAIA,EAAE,WAAF,EAAMiJ,QA1C9C,mBA6CI,SAAME,GAAwE,IAAD,OAEzE,OADAD,KAAKL,OAAOzH,IAAIgI,IAAID,GACb,WACH,EAAKN,OAAOzH,IAAIiI,OAAOF,MAhDnC,oBAoDI,SAAOA,GAAyE,IAAD,OAE3E,OADAD,KAAKL,OAAOE,KAAKK,IAAID,GACd,WACH,EAAKN,OAAOE,KAAKM,OAAOF,QAvDpC,KCnMAG,0BAAc,GACd,OAAgDC,GAAzCC,GAAP,GAAOA,MAAOC,GAAd,GAAcA,MAAaC,IAA3B,GAAqBC,KAArB,GAA2BD,OAAOlM,GAAlC,GAAkCA,KAAMoM,GAAxC,GAAwCA,KAmBlCC,GAAU,SAACC,GAAD,OAAwBvD,KAAKwD,KAAKD,EAH7B,KAKfE,GAAU,SAACC,GAAD,OALK,GAKoB1D,KAAKC,IAAI,EAAGyD,IAE/CC,GAAa,SAACD,GAAD,OAA+B,KAANA,GAMtCE,GAAU,SAAChI,EAAYiI,EAAiBC,EAAkB9K,GAC5D,OAAO6K,GAAYjI,EAAe,GAAT5C,GAAiBA,EAAS8K,GAGjDC,GAAY,SAACR,EAAD,GAAmD,IAAD,mBAApCS,EAAoC,KAA7BC,EAA6B,KAChE,OAAOV,GAAMS,GAAST,GAAMU,GAM1BC,GAA2B,SAAC1B,GAC9B,IAAM2B,EAAU3B,EAAK4B,MAAMC,MAAM,aACjC,IAAIF,EACA,OAAOG,KAAI,EAAG,IAAK,IAEvB,IAAMC,EAAMvE,KAAKwE,MAAMC,OAAON,EAAQ,IAAM,KAAO,IAAM,KACzD,OAAOG,KAAIC,EAAK,IAAK,KAyDlB,SAASG,GAAWxP,GACvB,IAAOyP,EAAczP,EAAdyP,WAEDC,EAAUC,uBAAY,WACxBF,EAAWG,KAAI,SAAAC,GACXA,EAAMC,MAAMC,aAEjB,IAEH,OAAO,eAACzJ,GAAD,CAAM6C,cAAc,SAASvG,MAAO,CAACkB,OAAQ,QAA7C,UACH,eAACwC,GAAD,CAAMc,GAAI,EAAGV,GAAI,EAAGsJ,SAAS,OAA7B,UACI,eAAC1J,GAAD,CAAM4B,WAAY,EAAG+H,GAAI,EAAzB,UACI,cAAC5J,GAAD,CAAKyD,GAAI,EAAT,SACK2F,EAAWS,OAAO,WAAW,SAAAC,GAAI,OAC9B,eAACC,GAAD,WACI,cAAC/J,GAAD,CAAKO,GAAG,OAAOkD,GAAI,EAAnB,qBACA,mCAAOyC,KAAK,YAAe8D,aAAYF,aAInD,cAAC9J,GAAD,CAAKyD,GAAI,EAAT,SACI,cAACwG,GAAD,CAAQhP,QAASoO,EAAjB,wBAGR,cAACpJ,GAAD,CAAM4B,WAAY,EAAG+H,GAAI,EAAzB,SACKR,EAAWS,OAAO,cAAc,SAAAC,GAAI,OAAI,qCACrC,cAAC9J,GAAD,CAAKyD,GAAI,EAAT,SACI,eAACsG,GAAD,WACI,cAAC/J,GAAD,CAAKO,GAAG,OAAOkD,GAAI,EAAnB,oBACA,mDAAYyG,aAASJ,IAArB,cACI,wBAAQ7N,MAAM,WAAd,sBACA,wBAAQA,MAAM,YAAd,gCACCmN,EAAWS,OAAO,SAAS,SAAAM,GAAK,aAAI,oCAChC,UAACA,EAAMC,kBAAP,QAAqB,IAAI/O,KAAI,SAACgP,EAAM1D,GAAP,OAC1B,yBAAgB1K,MAAK,kBAAa0K,GAAlC,+BAA0DA,EAAE,IAA/CA,oBAMZ,aAApBmD,EAAKM,YAA6B,qCAC/B,cAACpK,GAAD,CAAKyD,GAAI,EAAT,SACK2F,EAAWS,OAAO,uBAAuB,SAAAC,GAAI,OAC1C,eAACC,GAAD,WACI,cAAC/J,GAAD,CAAKO,GAAG,OAAOkD,GAAI,EAAnB,uBACA,uBACIyC,KAAK,SACLjK,MAAK,UAAK6N,EAAKM,YACflO,SAAU,SAACoO,GAAD,OAAOR,EAAKP,IAAIL,OAAOoB,EAAE9J,OAAOvE,SAC1CsO,IAAI,IACJC,IAAI,MACJC,KAAK,cAKrB,cAACzK,GAAD,CAAKyD,GAAI,EAAT,SACK2F,EAAWS,OAAO,kBAAkB,SAAAC,GAAI,OACrC,eAACC,GAAD,WACI,cAAC/J,GAAD,CAAKO,GAAG,OAAOkD,GAAI,EAAnB,kBACA,mCAAOyC,KAAK,YAAe8D,aAAYF,2BAQnE,cAACY,GAAD,eAAsB/Q,OAU9B,SAAS+Q,GAAiB/Q,GACtB,MAAiDgR,eAAjD,mBAAOC,EAAP,gBAAuB/H,aAAvB,MAA+B,EAA/B,MAAkCpF,cAAlC,MAA2C,EAA3C,EAEM2L,EAAazP,EAAMyP,WAAWgB,WAEhC9B,EAUAc,EAVAd,QACAC,EASAa,EATAb,SACAsC,EAQAzB,EARAyB,OACArG,EAOA4E,EAPA5E,WAJJ,EAWI4E,EANAe,aALJ,MAKY,GALZ,EAMIV,EAKAL,EALAK,MACAqB,EAIA1B,EAJA0B,YACAC,EAGA3B,EAHA2B,WACAC,EAEA5B,EAFA4B,oBACAC,EACA7B,EADA6B,eAGEC,EAAgC,CAClChD,GAAQG,GAAQ5K,EAAQ6K,EAASC,EAAU9K,IAC3CyK,GAAQG,GAAQ,EAAGC,EAASC,EAAU9K,KAIpC0N,GAAgBtI,EAAQ,KADhBsH,EAAM5D,OAAS,GAOvB6E,EAAO9B,uBAAY,SAACtB,GACtB,OA1LQ,SAACG,EAAaG,EAAiBC,EAAkB9K,GAC7D,MAAgB,GAATA,GAAiB0K,EAAMG,GAAW7K,EAAS8K,EAyLvC8C,CAAQtD,GAAQC,GAAKM,EAASC,EAAU9K,KAChD,CAAC6K,EAASC,EAAU9K,IAEjB6N,EAAWhC,uBAAY,SAACrC,GAC1B,GAAkB,aAAf8D,EACC,OAAOpC,GAAyB1B,GAGpC,IAAIsE,EAAwB,GAC5B,GAAkB,cAAfR,EACCQ,EAAUC,MAAMC,KAAKhC,EAAMiC,eACxB,GAAGX,EAAWY,WAAW,YAAa,CAAC,IAAD,EACnClQ,EAAQyN,OAAO6B,EAAWa,QAAQ,WAAW,KACnDL,EAAO,UAAGpB,EAAM1O,UAAT,QAAmB,GAG9B,OAlL0B,SAACwL,EAAkB4E,EAAyBC,EAAmBC,GAC7F,IAAMC,EAAY5D,GAAWL,GAAQd,EAAKe,KACtCiE,EAAWxH,KAAK8F,IAAL,MAAA9F,KAAI,aACZoH,EACExQ,KAAI,SAAA4L,GAAI,OAAImB,GAAWL,GAAQd,EAAKe,QACpC3M,KAAI,SAAA8I,GAAK,OAAIM,KAAKyH,IAAIF,EAAY7H,QACvC2H,EAMJ,OAJGC,IACCE,EAAWA,EAAW,EAAI,IAAOA,GAG9BlD,KAAItE,KAAK0H,MAAM,IAA+B,GAAxB1H,KAAK8F,IAAI0B,EAAU,IAAW,IAAKxH,KAAK0H,MAAwC,GAAlC1H,KAAK+F,IAAI,EAAe,GAAXyB,EAAgB,GAAU,KAsKvGG,CACHnF,EACAsE,EACAP,GACCC,KAEN,CAACF,EAAYC,EAAqBC,EAAgBxB,EAAOU,IAMtDkC,EAAiBhO,iBAA4B,MACnD,EAAgCN,oBAAkB,GAAlD,mBAAOuO,EAAP,KAAiBC,EAAjB,KAEMC,EAAkBlD,uBAAY,YAAY,IAAVmD,EAAS,EAATA,IAClCA,EAAIC,iBACJL,EAAezN,QAAU,CACrB+N,SAAUrE,EACVsE,UAAWrE,EACXsE,UAAWxE,GAAQoE,EAAIK,QAASxE,EAASC,EAAU9K,IAEvD8O,GAAY,KACb,CAACjE,EAASC,EAAU9K,IAEjBsP,EAAkBzD,uBAAY,YAAY,IAAVmD,EAAS,EAATA,IAClCA,EAAIC,iBACJ,IAAMM,EAAYX,EAAezN,QACjC,GAAGoO,EAAW,CACV,IAAMC,EAAU5E,GAAQoE,EAAIK,QAASE,EAAUL,SAAUK,EAAUJ,UAAWnP,GAE9E9D,EAAMyP,WAAWG,KAAI,SAAAC,GACjBA,EAAMlB,QAAU0E,EAAUL,SAAWM,EAAUD,EAAUH,gBAGlE,CAACpP,IAEJsB,qBAAU,WACN,IAAMmO,EAAY,WACdb,EAAezN,QAAU,KACzB2N,GAAY,IAIhB,OADAY,OAAOC,iBAAiB,UAAWF,GAC5B,kBAAMC,OAAOE,oBAAoB,UAAWH,MACpD,IAEH,IAAMI,EAAchE,uBAAY,YAAY,IAAVmD,EAAS,EAATA,IAC9BA,EAAIC,iBACJ/S,EAAMyP,WAAWG,KAAI,SAAAC,GACjBA,EAAMjB,UAAYkE,EAAIc,OAAS,EApQxB,IAoQyCd,EAAIc,OAAS,EAAI,EApQ1D,IAoQyE,OAErF,IAEGC,EAAmBlE,uBAAY,YAAW,EAATmD,IAC/BC,mBAEL,IAEGe,EAAkBnE,uBAAY,YAAW,EAATmD,IAC9BC,mBAEL,IAcGnQ,GAZiB+M,uBAAY,YAAW,EAATmD,IAC7BC,mBAEL,IASW,CACVjP,OAAQ,OACRoF,MAAO,OACP6K,gBAAiB,UACjBC,OAAQrB,EAAW,WAAa,SAGpC,OAAO,qBAAKsB,IAAKhD,EAAerO,MAAOA,EAAhC,SACH,cAACmL,GAAD,CACI7E,MAAOA,EACPpF,OAAQA,EACRoQ,YAAarB,EACbsB,YAAaf,EACbgB,QAAST,EACTU,aAAcR,EACdS,YAAaR,EAPjB,SASI,eAAC9F,GAAD,WACKkD,GAAUrG,GACP,cAAC,GAAD,CACIqG,OAAQA,EACRrG,WAAYA,EACZ4G,KAAMA,EACNvI,MAAOA,EACPqI,aAAcA,IAGrBL,GAAUrG,GACP,cAAC,GAAD,CACIqG,OAAQA,EACRrG,WAAYA,EACZ4G,KAAMA,EACNvI,MAAOA,EACPqI,aAAcA,IAGrB9B,EAAW8E,SACR,cAAC,GAAD,CACIzE,MAAO+B,MAAMC,KAAKhC,EAAMiC,UACxBN,KAAMA,EACNvI,MAAOsI,EACPgD,EAAG,EACHjD,aAAcA,EACdI,SAAUA,KAGhBnB,GAAS,IAAI9O,KAAI,SAACgP,EAAM5O,GACtB,OAAO,cAAC,GAAD,CAEHgO,MAAOY,EACPe,KAAMA,EACNvI,MAAOsI,EACPgD,EAAGhD,GAAgB1P,EAAQ,GAC3ByP,aAAcA,EACdI,SAAUA,GANL7P,MASb,cAAC,GAAD,CACIgO,MAAO+B,MAAMC,KAAKX,EAAYY,UAC9BN,KAAMA,EACN9O,MAAM,UACNuG,MAAOsI,EACPgD,EAAG,EACHjD,aAAcA,WAmBlC,IAAMkD,GAAUvT,IAAMC,MAAK,SAAiBnB,GACxC,IACIkJ,EAMAlJ,EANAkJ,MACA4G,EAKA9P,EALA8P,MAFJ,EAOI9P,EAJA2R,gBAHJ,MAGe3C,GAHf,EAIIyC,EAGAzR,EAHAyR,KACA+C,EAEAxU,EAFAwU,EACAjD,EACAvR,EADAuR,aAGEmD,EAAe5E,EAAMzD,QAAO,SAAAiB,GAAI,OAAIuB,GAAUvB,EAAKe,GAAIkD,MAE7D,OAAO,mCACFmD,EAAahT,KAAI,SAAC4L,EAAMxL,GAAW,IAAD,EACzBa,EAAK,UAAG3C,EAAM2C,aAAT,QAAkBgP,EAASrE,GACtC,OAAO,eAACW,GAAD,CAAmBuG,EAAGA,EAAGG,EAAGlD,EAAKnE,EAAKe,IAAtC,UACH,cAACF,GAAD,CACIyG,OAAQjS,EACRkS,YAAa,EACbC,OAAQ,CAAC,EAAG,EAAG5L,EAAO,KAE1B,cAAC,GAAD,CACIxK,KAAM4O,EAAK4B,MACX6F,KAAMpS,EACNqS,MAAM,SACN9L,MAAOA,EACPyL,GAAI,OAXO7S,WAkBzBsO,GAAQ1P,IAAOwO,MAAV,sDAILoB,GAAS5P,IAAOC,OAAV,8UAKY,SAAAX,GAAK,OAAIA,EAAM3B,MAAMC,OAAOO,WAAWU,WAClD,SAAAS,GAAK,OAAIA,EAAM3B,MAAMC,OAAOC,WAAWC,UAoB9CyW,GAAsB,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,GAAG,GAAG,GAAG,GAE9CC,GAAWhU,IAAMC,MAAK,SAAkBnB,GAC1C,IAAOyR,EAAiDzR,EAAjDyR,KAAMP,EAA2ClR,EAA3CkR,OAAQrG,EAAmC7K,EAAnC6K,WAAY3B,EAAuBlJ,EAAvBkJ,MAAOqI,EAAgBvR,EAAhBuR,aAElC4D,EAAQF,GACTvT,KAAI,SAAAsL,GAAC,MAAI,CAACA,EAAGkE,EAASpG,KAAKC,IAAIF,EAAWmC,OAC1CX,QAAO,gBAAGgC,EAAH,2BAAWQ,GAAUR,EAAIkD,MAErC,OAAO,mCACF4D,EAAMzT,KAAI,YAAc,IAAD,mBAAXsL,EAAW,KAARqB,EAAQ,KACdsG,EAAIlD,EAAKpD,GACf,OAAO,eAACJ,GAAD,CAAe0G,EAAGA,EAAlB,UACH,cAACxG,GAAD,CACIyG,OAAQxF,KAAI,IAAK,GAAwB,IAAnB,EAAItE,KAAKyH,IAAIvF,KACnC6H,YAAa,EACbC,OAAQ,CAAC,EAAG,EAAG5L,EAAQ,GAAI,GAC3BkM,KAAM,CAAC,EAAE,KAEb,cAAC,GAAD,CACI1W,KAAI,UAAK2P,EAAL,MACJ0G,KAAM3F,KAAI,IAAK,GAAwB,IAAnB,EAAItE,KAAKyH,IAAIvF,KACjCgI,MAAM,OACN9L,MAAO,GACPsL,EAAGtL,EAAQ,GACXyL,GAAI,MAbO3H,WAoBzBqI,GAAsB,CAAC,EAAE,GAAG,GAU5BC,GAAYpU,IAAMC,MAAK,SAAmBnB,GAC5C,IAAOyR,EAAiDzR,EAAjDyR,KAAMP,EAA2ClR,EAA3CkR,OAAQrG,EAAmC7K,EAAnC6K,WAAY3B,EAAuBlJ,EAAvBkJ,MAAOqI,EAAgBvR,EAAhBuR,aAElC4D,EAAkC,GAWxC,OATAE,GAAoB7I,SAAQ,SAAA/B,GACxB,IAAI,IAAIuC,EAAI,IAAKA,EAAiB,IAAbnC,EAAkBmC,GAAG,IAAK,CAC3C,IAAMqB,EAAK6C,EAAS3G,GAAayC,EAAGvC,GACjCoE,GAAUR,EAAIkD,IACb4D,EAAMnJ,KAAK,CAACgB,EAAGqB,EAAI5D,QAKxB,mCACF0K,EAAMzT,KAAI,YAA0B,IAAD,mBAAvB8I,EAAuB,KAAhB6D,EAAgB,KAAZ5D,EAAY,KAC1BkK,EAAIlD,EAAKpD,GACf,OAAO,eAACJ,GAAD,CAAgB0G,EAAGA,EAAnB,UACH,cAACxG,GAAD,CACIyG,OAAQxF,KAAI,IAAK,GAA6B,IAAxB,EAAItE,KAAKyH,IAAI9H,KACnCoK,YAAa,EACbC,OAAQ,CAAC,EAAG,EAAG5L,EAAQ,GAAI,KAE/B,cAAC,GAAD,CACIxK,KAAI,UAAK8L,EAAL,KACJuK,KAAM3F,KAAI,IAAK,GAA6B,IAAxB,EAAItE,KAAKyH,IAAI9H,KACjCuK,MAAM,OACN9L,MAAO,GACPsL,EAAGtL,EAAQ,GACXyL,GAAI,MAZOtG,W,SCzf/B,SAASkH,GAA6BhJ,EAAc4C,EAAsBqG,GACtE,OAAOC,aAAKtG,GAAO,SAAC7M,EAAgBoT,GAChC,OAAO,yBACHnJ,OACAzN,WAAW,GACR0W,EAAGlT,IAHV,IAIIqT,IAAKD,EAAKC,SAKtB,IAAMC,GAAS,SAACC,GAAD,OAA+BA,EAAMC,QAAO,SAACC,EAAaR,GAAd,OAAiCQ,EAAMR,EAAKQ,MAAK,IAMtGjX,GAAY,SAAC,GAAD,MAAuB,CACrCA,WAAW,EACXiX,IAFc,oBAEJnJ,SAODoJ,GAAYT,GACrB,YACA,YACAzW,IAGSmX,GAAQV,GACjB,QACA,YACAzW,IAGSoX,GAAUX,GACnB,UACA,KACA,iBAAO,CACHQ,IAAK,EACLjX,WAAW,MAONqX,GAAaZ,GACtB,aACA,aACA,kBAAmB,CACfQ,IADJ,oBACoBnJ,OAChB9N,WAAW,MAYNsX,GAAiBb,GAC1B,iBACA,eACA,gBAAEc,EAAF,0BAAc,CACV5L,OAAS4L,EAAMC,MAAM,KAAK1J,OAAS,EAAsC,GAA/ByJ,EAAMC,MAAM,KAAK1J,OAAS,IAAWyJ,EAAMC,MAAM,KAAK1J,OAAS,GACzGmJ,IAAKM,EAAMzJ,WAQN2J,GAAahB,GACtB,aACA,uBACA,gBAAE/K,EAAF,0BAAc,CACVA,MAAO+E,OAAO/E,GACduL,IAAKvL,EAAMoC,OAAS,MAUf4J,GAAsBjB,GAC/B,sBACA,uCACA,mCAAEkB,EAAF,KAAaC,EAAb,YAA0B7L,OAA1B,MAAuC,GAAvC,SAA2C8L,OAA3C,MAAmD,GAAnD,SAAuDC,OAAvD,MAAqE,GAArE,QAA8E,CAC1EH,UAAWlH,OAAOkH,GAClBC,YAAanH,OAAOmH,GACpB7L,WAAY0E,OAAO1E,GAAc,GAAK0E,OAAOqH,GAAe,GAC5Db,IAAKU,EAAU7J,OAAS8J,EAAY9J,OAAS/B,EAAW+B,OAAS,EAAI+J,EAAM/J,WAItEiK,GAAuBtB,GAChC,sBACA,uBACA,mCAAEkB,EAAF,KAAaC,EAAb,WAA+B,CAC3BD,UAAWlH,OAAOkH,GAClBC,YAAanH,OAAOmH,GACpB7L,WAAY,EACZkL,IAAKU,EAAU7J,OAAS8J,EAAY9J,OAAS,MASxCkK,GAAavB,GACtB,aACA,qBACA,mCAAEkB,EAAF,KAAaC,EAAb,WAA+B,CAC3BD,UAAWlH,OAAOkH,GAClBC,YAAanH,OAAOmH,GACpBX,IAAKU,EAAU7J,OAAS8J,EAAY9J,OAAS,MAQxCmK,GAAcxB,GACvB,cACA,YACA,gBAAEyB,EAAF,0BAAe,CACXA,OAAQzH,OAAOyH,GACfjB,IAAKiB,EAAOpK,WAQPqK,GAAU1B,GACnB,UACA,yBACA,gBAAElH,EAAF,0BAAqB,CACjBA,GAAIkB,OAAOlB,GACX0H,IAAK1H,EAAGzB,OAAS,MASZsK,GAAQ3B,GACjB,QACA4B,aAAIC,aAAShB,IAAiBiB,aAAId,GAAYU,GAAST,GAAqBK,GAAsBC,GAAYC,MAC9G,SAACO,GACG,GAAmB,IAAhBA,EAAK1K,OAAc,CAClB,IAAOtK,EAAP,YAAgBgV,EAAhB,MACA,MAAO,CACHhV,QACAyT,IAAKzT,EAAMyT,KAGnB,kBAAwBuB,EAAxB,GAAO7M,EAAP,KAAenI,EAAf,KACA,MAAO,CACHA,QACAmI,SACAsL,IAAKtL,EAAOsL,IAAMzT,EAAMyT,QAQvBwB,GAAa9B,aACtB0B,aAAID,GAAOM,aAAKL,aAAIhB,GAAYe,OAChC,SAACO,GAAD,OAAuBA,KAWdC,GAAOnC,GAChB,OACA,eACA,gBAAEjT,EAAF,0BAAc,CACVsK,OAAQtK,EAAM2P,QAAQ,QAAS,IAAIrF,OACnCmJ,IAAKzT,EAAMsK,WAMN+K,GAAON,aAAIK,IAMXE,GAAOrC,GAChB,OACA4B,aAAI,UACJ,gBAAE7U,EAAF,0BAA2B,CACvBsK,OAAQtK,EAAMsK,OACdmJ,IAAKzT,EAAMsK,WASNiL,GAAOtC,GAChB,OACA4B,aAAID,GAAOE,aAASO,MACpB,mCAAE5Y,EAAF,KAAS+Y,EAAT,WAA4C,CACxC/Y,QACA+Y,OACA/B,IAAKhX,EAAMgX,KAAO+B,EAAOA,EAAK/B,IAAM,OAY/BgC,GAAkBxC,GAC3B,kBACA,YACA,gBAAExW,EAAF,0BAAwB,CACpBA,MAAOwQ,OAAOxQ,GACdgX,IAAKhX,EAAM6N,WAMNoL,GAAuBvC,aAChC0B,aAAIY,GAAiB9B,GAAOmB,aAASnB,IAAQ8B,GAAiBP,aAAKL,aAAIlB,GAAOmB,aAASnB,IAAS8B,OAChG,SAACN,GAAD,OAAwCA,KAQ/BQ,GAAQ1C,GACjB,QACA4B,aAAI,IAAKE,aAAIW,GAAsBT,IAAa,IAAKH,aAASO,MAC9D,mCAAEO,EAAF,KAAWJ,EAAX,WAAsB,CAClBI,UACAJ,OACA/B,IAAKH,GAAOsC,IAAYJ,EAAOA,EAAK/B,IAAM,GAAK,MAS1CoC,GAAa5C,GACtB,aACA4B,aAAIa,GAAsBZ,aAASO,MACnC,mCAAEO,EAAF,KAAWJ,EAAX,WAAsB,CAClBI,UACAJ,OACA/B,IAAKH,GAAOsC,IAAYJ,EAAOA,EAAK/B,IAAM,OAarCqC,GAAW7C,GACpB,WACA,6BACA,mCAAE8C,EAAF,KAAaxN,EAAb,YAAyB8L,OAAzB,MAAiC,GAAjC,SAAqCD,OAArC,MAAmD,GAAnD,QAA8F,CAC1F2B,UAAW9I,OAAO8I,GAElBxN,WAA2B,MAAfA,EAAqB,EAAI0E,OAAO1E,GAAc0E,OAAOmH,GAAe,GAChFX,IAAKsC,EAAUzL,OAAS/B,EAAW+B,OAAS,EAAI+J,EAAM/J,WAMjD0L,GAAoB/C,GAC7B,oBACA,KACA,iBAAO,CACHQ,IAAK,MAQAwC,GAAwBhD,GACjC,wBACA,eACA,mCAAEiD,EAAF,KAAUrW,EAAV,WAAyC,CACrCqW,SACAzC,IAAKyC,EAAO5L,QAAUzK,EAAQA,EAAMyK,OAAS,OAUxC6L,GAAkBlD,GAC3B,kBACA4B,aAAIC,aAASmB,IAAwBhB,GAAYH,aAASkB,MAC1D,SAACb,GAEG,MAA4D5F,MAAM6G,QAAQjB,EAAS,IAAvB,MACrD7R,GADqD,oBACvC6R,IACfA,EAFN,mBAAOkB,EAAP,KAA8BT,EAA9B,KAAuCU,EAAvC,KAIA,MAAO,CACHD,wBACAT,UACAU,oBACA7C,KAAM4C,EAAwBA,EAAsB5C,IAAM,GAAKH,GAAOsC,IAAYU,EAAoBA,EAAkB7C,IAAM,OAU7H8C,GAAkBtD,GAC3B,kBACA4B,aAAIa,GAAsBZ,aAASkB,MACnC,mCAAEJ,EAAF,KAAWU,EAAX,WAAuF,CACnFV,UACAU,oBACA7C,IAAKH,GAAOsC,IAAYU,EAAoBA,EAAkB7C,IAAM,OAQ/D+C,GAAQzB,aAAIe,GAAUS,GAAiBJ,IAMvCM,GAAWxD,GACpB,WACA4B,aAAI,IAAK2B,GAAO,MAChB,gBAAE1Z,EAAF,0BAAc,CACVA,QACA2W,IAAK3W,EAAM2W,IAAM,MAQZiD,GAAUzD,GACnB,UACA4B,aAAI,KAAMD,GAAO,MACjB,gBAAEnY,EAAF,0BAAc,CACVA,QACAgX,IAAKhX,EAAMgX,IAAM,MAcZkD,GAAc1D,GACvB,cACA,kBACA,gBAAEtJ,EAAF,0BAAsB,CAClBA,IAAKsD,OAAOtD,GACZ8J,IAAK9J,EAAIW,WAYJsM,GAAS3D,GAClB,SACA4B,aAAI,aAAc8B,KAClB,mCAAET,EAAF,KAAUlW,EAAV,WAAiD,CAC7C2J,IAAK3J,EAAM2J,IACX8J,IAAKyC,EAAO5L,OAAStK,EAAMyT,QAUtBoD,GAAc5D,GACvB,cACA,kBACA,gBAAE6D,EAAF,0BAAsB,CAClBA,IAAK7J,OAAO6J,GACZrD,IAAKqD,EAAIxM,WAYJyM,GAAS9D,GAClB,SACA4B,aAAI,aAAcgC,KAClB,mCAAEX,EAAF,KAAUlW,EAAV,WAAiD,CAC7C8W,IAAK9W,EAAM8W,IACXrD,IAAKyC,EAAO5L,OAAStK,EAAMyT,QAatBuD,GAAsB/D,GAC/B,sBACA,qBACA,mCAAEgE,EAAF,YAAe5C,OAAf,MAAuB,GAAvB,SAA2BD,OAA3B,MAAyC,GAAzC,QAA4E,CACxE6C,YAAahK,OAAOgK,GACpB7C,YAAaA,EAAcnH,OAAOmH,QAAe9Q,EACjDmQ,IAAKwD,EAAY3M,OAAS+J,EAAM/J,WAS3B4M,GAAiBjE,GAC1B,iBACA4B,aAAI,gBAAiBmC,KACrB,mCAAEd,EAAF,KAAWlW,EAAX,WAAkE,CAC9DiX,YAAajX,EAAMiX,YACnB7C,YAAapU,EAAMoU,YACnBX,IAAKyC,EAAO5L,OAAStK,EAAMyT,QAUtB0D,GAAclE,GACvB,cACA,gBACA,gBAAEmE,EAAF,0BAAsB,CAClBA,MACA3D,IAAK2D,EAAI9M,WAQJ+M,GAASpE,GAClB,SACA4B,aAAI,aAAcsC,KAClB,mCAAEjB,EAAF,KAAUlW,EAAV,WAAiD,CAC7CoX,IAAKpX,EAAMoX,IACX3D,IAAKyC,EAAO5L,OAAStK,EAAMyT,QAatB6D,GAAcrE,GACvB,cACA,mCACA,mCAAE7I,EAAF,KAAOlG,EAAP,KAAU3E,EAAV,KAAagY,EAAb,KAAgBC,EAAhB,WAAkE,CAC9DtT,EAAG+I,OAAO/I,GACV3E,EAAG0N,OAAO1N,GACVgY,EAAGtK,OAAOsK,GACVC,EAAGvK,OAAOuK,GACV/D,IAAKrJ,EAAIE,WAWJmN,GAASxE,GAClB,SACA4B,aAAI,aAAcyC,KAClB,mCAAEpB,EAAF,KAAUlW,EAAV,WAAiD,CAC7CkE,EAAGlE,EAAMkE,EACT3E,EAAGS,EAAMT,EACTgY,EAAGvX,EAAMuX,EACTC,EAAGxX,EAAMwX,EACT/D,IAAKyC,EAAO5L,OAAStK,EAAMyT,QAWtBiE,GAAgBzE,GACzB,gBACA4B,aAAI,SAAUD,GAAO,IAAKA,KAC1B,mCAAEsB,EAAF,KAAUyB,EAAV,KAAeC,EAAf,WAA0D,CACtDD,MACAC,OACAnE,IAAKyC,EAAO5L,OAAS,EAAIqN,EAAIlE,IAAMmE,EAAKnE,QAMnCoE,GAAe5E,GACxB,eACA,QACA,iBAAO,CACHQ,IAAK,MAMAqE,GAAW/C,aAAI2C,GAAeG,IAS9BE,GAAY9E,GACrB,YACA4B,aAAI,gBAAiBI,KACrB,mCAAEiB,EAAF,KAAU8B,EAAV,WAAwD,CACpDA,gBACAvE,IAAKyC,EAAO5L,OAASgJ,GAAO0E,OASvBC,GAASlD,aAAI6B,GAAQG,GAAQG,GAAgBG,GAAQI,GAAQK,GAAUC,IAMvEG,GAAcjF,GACvB,cACA4B,aAAI,IAAKoD,GAAQ/C,aAAKL,aAAInB,GAAWuE,KAAU,MAC/C,SAACE,GAAD,MAA4B,CACxBA,UACA1E,IAAKH,GAAO6E,GAAW,MAYlBC,GAAUnF,GACnB,UACA,cACA,gBAAElW,EAAF,0BAAgB,CACZA,UACA0W,IAAK1W,EAAQuN,OAAS,MAcjB+N,GAAWpF,GACpB,WACAiC,aAAKH,aAAIqD,GAASvC,GAAYN,GAAMI,GAAOL,GAAM4C,GAAazB,GAAUC,GAAS9C,GAASC,MAC1F,SAAC/K,GAAD,MAAiC,CAC7BA,QACA2K,IAAKH,GAAOxK,OAUPwP,GAAarF,GACtB,aACA,SACA,iBAAO,CACHQ,IAAK,MAMA8E,GAAQxD,aAAIuD,IAMZE,GAAavF,GACtB,aACA4B,aAAI0D,GAAOrD,aAAKL,aAAInB,GAAW6E,KAAS,MACxC,SAACrN,GAAD,MAA0B,CACtBA,SACAuI,IAAKH,GAAOpI,GAAU,MAQjBuN,GAAkBxF,GAC3B,kBACA4B,aAAIC,aAAS0D,IAAa1D,aAASuD,MACnC,SAACK,GACG,IAAMC,EAAaD,EAAME,MAAK,SAAAC,GAAI,MAAkB,eAAdA,EAAK5O,QACrC6O,EAAWJ,EAAME,MAAK,SAAAC,GAAI,MAAkB,aAAdA,EAAK5O,QACzC,MAAO,CACH6O,WACAH,aACAlF,IAAKqF,EAAWA,EAASrF,IAAM,MAKrCsF,GAASC,aAAOP,ICttBhBQ,GAAW,IAAIC,IAA2B,CAC5C,CAAC,YAAY,aACb,CAAC,QAAQ,aAOT,CAAC,QAAQ,SACT,CAAC,kBAAkB,SACnB,CAAC,QAAQ,SACT,CAAC,mBAAmB,SAEpB,CAAC,OAAO,SACR,CAAC,OAAO,aACR,CAAC,UAAU,aACX,CAAC,aAAa,aACd,CAAC,WAAW,SACZ,CAAC,kBAAkB,SACnB,CAAC,wBAAwB,SACzB,CAAC,6BAA6B,SAC9B,CAAC,kBAAkB,SACnB,CAAC,kCAAkC,SACnC,CAAC,wBAAwB,SACzB,CAAC,oBAAoB,SACrB,CAAC,WAAW,cACZ,CAAC,UAAU,cACX,CAAC,gBAAgB,SACjB,CAAC,SAAS,UACV,CAAC,SAAS,UACV,CAAC,iBAAiB,UAClB,CAAC,SAAS,UACV,CAAC,SAAS,UACV,CAAC,YAAa,UACd,CAAC,eAAe,UAChB,CAAC,gBAAgB,UACjB,CAAC,sBAAsB,UACvB,CAAC,cAAc,eACf,CAAC,wBAAwB,eACzB,CAAC,UAAU,aAITC,GAAU,SAAVA,EAAWpF,EAAmBqF,EAAWC,EAAgBC,GAC3D,GAAG/J,MAAM6G,QAAQgD,GACbA,EAAKlP,SAAQ,SAAAlK,GAAK,OAAImZ,EAAQpF,EAAO/T,EAAOqZ,EAAQC,WAGxD,GAAGF,aAAgBla,OAAnB,CACI,IAAMmB,EAAQ4Y,GAASM,IAAT,UAAgBF,EAAhB,YAA0BD,EAAKnP,QAAWgP,GAASM,IAAIH,EAAKnP,MACpEvH,EAAI,OAAG4W,QAAH,IAAGA,IAAcF,EAAK1W,KAEhC,GAAuB,kBAAb0W,EAAK/F,KAAwC,kBAAb+F,EAAK3F,KAAoBpT,EAC/D,IAAI,IAAIqK,EAAI,EAAGA,EAAI0O,EAAK3F,IAAK/I,IACzBqJ,EAAMqF,EAAK/F,IAAM3I,GAAK,CAClBrK,MAAkB,YAAVA,GAA6B,IAANqK,EAAW,eAAiBrK,EAC3D8C,SAAUT,GAItBxD,OAAOC,KAAKia,GAAMlP,SAAQ,SAAAsP,GACtBL,EAAQpF,EAAOqF,EAAKI,GAAMJ,EAAKnP,KAAMvH,aAMpC+W,GAAiB,SAAC,GAAyC,IAAxCX,EAAuC,EAAvCA,SAC5B,IAAIA,EAAU,MAAO,GACrB,IAAOhQ,EAASgQ,EAAThQ,MACDiL,EAAoB,GAE1B,OADAoF,GAAQpF,EAAOjL,EAAO,IACfiL,GCxCL2F,GAAQ,SAACC,EAAc3Z,EAAesO,EAAaC,GACrD,GAAIvO,EAAQsO,GAAOtO,EAAQuO,EACvB,MAAM,IAAIqL,MAAJ,UACCD,EADD,4BACyBrL,EADzB,gBACoCC,EADpC,iBACgDvO,KASxD6Z,GAA2B,CAC7B,EAAG,EAAG,EAAG,EAAG,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GACxF,GAAI,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IACzjG,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAClH,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAClH,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAClH,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAClH,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAClH,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAClH,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAClH,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAClH,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAClH,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAClH,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAClH,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAClH,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAClH,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAClH,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAClH,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAClH,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAClH,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAClH,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAClH,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAClH,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAClH,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAClH,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAClH,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAClH,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAClH,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAClH,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAClH,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAClH,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAClH,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAClH,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAClH,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAClH,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAClH,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAClH,KAAM,KAAM,KAAM,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","file":"static/js/main.7ab71b4e.chunk.js","sourcesContent":["import React from 'react';\n\nimport {ThemeProvider, createGlobalStyle} from 'styled-components';\nimport type {HighlightColor} from './data/grammar-to-chars';\n\nconst GlobalStyle = createGlobalStyle`\n    html, body, div, span, applet, object, iframe,\n    h1, h2, h3, h4, h5, h6, p, blockquote, pre,\n    a, abbr, acronym, address, big, cite, code,\n    del, dfn, em, img, ins, kbd, q, s, samp,\n    small, strike, strong, sub, sup, tt, var,\n    b, u, i, center,\n    dl, dt, dd, ol, ul, li,\n    fieldset, form, label, legend,\n    table, caption, tbody, tfoot, thead, tr, th, td,\n    article, aside, canvas, details, embed,\n    figure, figcaption, footer, header, hgroup,\n    menu, nav, output, ruby, section, summary,\n    time, mark, audio, video {\n        margin: 0;\n        padding: 0;\n        border: 0;\n        font-size: 100%;\n        font: inherit;\n        vertical-align: baseline;\n    }\n    article, aside, details, figcaption, figure,\n    footer, header, hgroup, menu, nav, section {\n        display: block;\n    }\n    body {\n        line-height: 1;\n    }\n    ol, ul {\n        list-style: none;\n    }\n    blockquote, q {\n        quotes: none;\n    }\n    blockquote:before, blockquote:after,\n    q:before, q:after {\n        content: '';\n        content: none;\n    }\n    table {\n        border-collapse: collapse;\n        border-spacing: 0;\n    }\n    * {\n        box-sizing: border-box;\n    }\n\n    html {\n        font-family: 'DM Mono', sans-serif;\n        height: 100%;\n        line-height: 1.5em;\n        position: relative;\n        -webkit-font-smoothing: antialiased;\n        -moz-osx-font-smoothing: grayscale;\n        background-color: #0e151b;\n        color: #ffffff;\n        font-size: 16px;\n    }\n\n    body {\n        font-weight: 400;\n        height: 100%;\n        line-height: 1.5em;\n        overflow-x: hidden;\n        text-rendering: optimizelegibility;\n\n        &[aria-hidden='true'] {\n            overflow: hidden;\n        }\n    }\n\n    #root {\n        height: 100%;\n    }\n`;\n\nexport type Colors = {\n    background: {\n        normal: string;\n        light: string;\n    };\n    text: {\n        placeholder: string;\n    };\n    focus: string;\n    highlights: {\n        [k in HighlightColor]: string;\n    }\n};\n\nconst colors: Colors = {\n    background: {\n        normal: '#0e151b',\n        light: '#18232d'\n    },\n    text: {\n        placeholder: '#198c8c'\n    },\n    focus: '#115d5d',\n    highlights: {\n        delimiter: '#198c8c',\n        pitch: '#22cece',\n        chord: '#22cece',\n        setterGroup: '#821361',\n        setter: '#d61ba4',\n        scaleGroup: '#94472f',\n        scale: '#ff541e',\n        comment: '#ffffff',\n        commentStart: '#198c8c',\n        unknown: '#a490b3',\n        error: '#cc0000',\n        errorMessage: '#cc0000'\n    }\n};\n\nconst fonts = {\n    mono: `'DM Mono', sans-serif`,\n    copy: `'Nunito', sans-serif`\n};\n\nconst widths = {\n    sm: '640px'\n};\n\nconst theme = {\n    colors,\n    fonts,\n    widths\n};\n\ntype Props = {\n    children: React.ReactNode\n};\n\nexport function AppWrapper(props: Props): React.ReactElement {\n    const {children} = props;\n    return <>\n        <link rel=\"preconnect\" href=\"https://fonts.gstatic.com\" />\n        <link href=\"https://fonts.googleapis.com/css2?family=DM+Mono:ital,wght@0,400;0,500;1,400&display=swap\" rel=\"stylesheet\" />\n        <link href=\"https://fonts.googleapis.com/css2?family=Nunito:wght@300;400&display=swap\" rel=\"stylesheet\" />\n        <ThemeProvider theme={theme}>\n            <GlobalStyle />\n            {children}\n        </ThemeProvider>\n    </>;\n}\n","import React from 'react';\nimport styled, {keyframes} from 'styled-components';\n\nconst clipIn = keyframes`\n  0% {\n    clip-path: polygon(0% 0%, 0% 0%, 100% 100%, 100% 100%, 100% 100%, 0% 0%);\n  }\n\n  20% {\n    clip-path: polygon(0% 0%, 0% 0%, 100% 100%, 100% 100%, 100% 100%, 0% 0%);\n  }\n\n  100% {\n    clip-path: polygon(0% 0%, 100% 0%, 100% 0%, 100% 100%, 0% 100%, 0% 100%);\n  }\n`;\n\nconst clipOut = keyframes`\n  0% {\n    clip-path: polygon(0% 0%, 100% 0%, 100% 100%, 0% 100%, 0% 0%, 100% 100%, 100% 100%, 100% 100%, 0% 0%);\n  }\n\n  100% {\n    clip-path: polygon(100% 0%, 100% 0%, 100% 100%, 0% 100%, 0% 100%, 0% 100%, 100% 100%, 100% 0%, 100% 0%);\n  }\n`;\n\nconst colorIn = keyframes`\n  0% {\n    fill: #115d5d;\n  }\n\n  20% {\n    fill: #115d5d;\n  }\n\n  100% {\n    fill: #fff;\n  }\n`;\n\nconst colorOut = keyframes`\n  0% {\n    fill: #fff;\n  }\n\n  100% {\n    fill: #115d5d;\n  }\n`;\n\ntype ButtonProps = {\n    onClick: () => any;\n    hoverBackground?: boolean;\n    large: boolean;\n};\n\nconst Boundary = styled.button<ButtonProps>`\n    border: none;\n    display: block;\n    height: 3rem;\n    width: 3rem;\n    padding: 1rem .5rem;\n    cursor: pointer;\n    background-color: rgba(0,0,0,0);\n    position: relative;\n    outline: none;\n\n    transition: border-color .2s ease-out;\n    border-left: 3px solid transparent;\n\n    &:focus, &:active {\n        border-left: 3px solid ${props => props.theme.colors.focus};\n    }\n\n    ${props => props.hoverBackground ? `&:hover {\n        background-color: ${props.theme.colors.background.light};\n    }` : ``}\n\n    ${props => props.large && `@media all and (min-width: ${props.theme.widths.sm}) {\n        height: 4rem;\n        width: 5rem;\n        padding: 1rem;\n    }`}\n`;\n\ntype IconProps = {\n    show: boolean;\n    large: boolean;\n};\n\nconst Icon = styled.div<IconProps>`\n    position: absolute;\n    top: 0;\n    left: 0;\n    height: 3rem;\n    width: 2rem;\n    padding: 1rem .5rem;\n    animation: ${props => props.show ? clipIn : clipOut} .3s ease-out forwards;\n    margin-left: .5rem;\n\n    path {\n        fill: #fff;\n        animation: ${props => props.show ? colorIn : colorOut} .3s ease-out forwards;\n    }\n\n    opacity: .9;\n    &:hover {\n        opacity: 1;\n    }\n\n    ${props => props.large && `@media all and (min-width: ${props.theme.widths.sm}) {\n        height: 4rem;\n        width: 4rem;\n        padding: 1rem;\n    }`}\n`;\n\ntype Props = {\n    state: string;\n    paths: {[key: string]: string[]};\n    onClick?: (state: string) => any;\n    loaded?: boolean;\n    hoverBackground?: boolean;\n    large?: boolean;\n};\n\n// eslint-disable-next-line react/display-name\nexport const IconToggle: React.FunctionComponent<Props> = React.memo((props: Props): React.ReactElement => {\n    const {state, paths, onClick, loaded = true, hoverBackground = false, large = false} = props;\n\n    return <Boundary onClick={() => onClick && onClick(state)} hoverBackground={hoverBackground} large={large}>\n        {Object.keys(paths).map((pathState: string) => {\n            return <Icon key={pathState} show={loaded && state === pathState} large={large}>\n                <svg viewBox=\"0 0 12 12\">\n                    {paths[pathState].map((d, index) => <path key={index} d={d} />)}\n                </svg>\n            </Icon>;\n        })}\n    </Boundary>;\n});\n\n","import styled from 'styled-components';\nimport {space, textStyle, typography, color as colorSystem} from 'styled-system';\n\nexport const Text = styled.span`\n    ${textStyle}\n    ${typography}\n    ${space}\n    ${colorSystem}\n`;\n","import React from 'react';\nimport styled from 'styled-components';\nimport {Text} from '../component/Text';\nimport {textStyle, typography} from 'styled-system';\n\ntype Props = {\n    value: string;\n    onChange: (e: React.ChangeEvent<HTMLTextAreaElement>) => void;\n    charElements: React.ReactNode;\n    freeze: boolean;\n};\n\nexport const Codearea = (props: Props): React.ReactElement => {\n    const {value, onChange, charElements, freeze} = props;\n\n    const content = value === ''\n        ? <Text color=\"text.placeholder\" style={{fontStyle: \"italic\"}}>\n            Type your tune here\n            <br /><br />\n        </Text>\n        : <>{charElements}<br /><br /></>;\n\n    return <Outer fontSize={[\"1.1rem\", \"1.4rem\"]} disabled={freeze}>\n        <Inner>\n            <Textarea\n                value={value}\n                onChange={onChange}\n                autoCapitalize=\"off\"\n                autoComplete=\"off\"\n                autoCorrect=\"off\"\n                spellCheck=\"false\"\n                disabled={freeze}\n            />\n            <Highlight aria-hidden=\"true\" freeze={freeze}>{content}</Highlight>\n        </Inner>\n    </Outer>;\n};\n\ntype OuterProps = {\n    fontSize: unknown;\n    disabled: boolean;\n};\n\nconst Outer = styled.div<OuterProps>`\n    height: 100%;\n    overflow: auto;\n    ${textStyle}\n    ${typography}\n    line-height: 1.4em;\n    position: relative;\n\n    &:before {\n        content: \"\";\n        display: block;\n        width: 3px;\n        height: 4rem;\n        background-color: transparent;\n        transition: background-color .2s ease-out;\n        position: absolute;\n        top: 12px;\n    }\n\n    &:focus-within {\n        &:before {\n            background-color: ${props => props.theme.colors.focus};\n        }\n    }\n\n    ${props => props.disabled ? `\n        cursor: default;\n        user-select: none;\n        pointer-events: none;\n    ` : ''}\n`;\n\nconst Inner = styled.div`\n    position: relative;\n    text-align: left;\n    box-sizing: border-box;\n    padding: 0px;\n    overflow: hidden;\n    font-variant-ligatures: common-ligatures;\n    min-height: 100%;\n`;\n\nconst Textarea = styled.textarea`\n    margin: 0;\n    border: 0;\n    background: none;\n    box-sizing: inherit;\n    display: inherit;\n    font-family: inherit;\n    font-size: inherit;\n    font-style: inherit;\n    font-variant-ligatures: inherit;\n    font-weight: inherit;\n    letter-spacing: inherit;\n    line-height: inherit;\n    tab-size: inherit;\n    text-indent: inherit;\n    text-rendering: inherit;\n    text-transform: inherit;\n    white-space: pre-wrap;\n    word-break: keep-all;\n    overflow-wrap: break-word;\n    position: absolute;\n    top: 0;\n    left: 0;\n    height: 100%;\n    width: 100%;\n    resize: none;\n    color: inherit;\n    overflow: hidden;\n    -webkit-text-fill-color: transparent;\n    -webkit-font-smoothing: antialiased;\n    padding: 1rem 1rem 1rem 2rem;\n    outline: 0;\n\n    &::selection {\n        background: #22cece;\n    }\n\n    &:disabled {\n        user-select: none;\n        opacity: 0;\n    }\n`;\n\ntype HighlightProps = {\n    freeze: boolean;\n};\n\nconst Highlight = styled.pre<HighlightProps>`\n    margin: 0px;\n    border: 0px;\n    background: none;\n    box-sizing: inherit;\n    display: inherit;\n    font-family: inherit;\n    font-size: inherit;\n    font-style: inherit;\n    font-variant-ligatures: inherit;\n    font-weight: inherit;\n    letter-spacing: inherit;\n    line-height: inherit;\n    tab-size: inherit;\n    text-indent: inherit;\n    text-rendering: inherit;\n    text-transform: inherit;\n    white-space: pre-wrap;\n    word-break: keep-all;\n    overflow-wrap: break-word;\n    position: relative;\n    pointer-events: ${props => props.freeze ? 'auto' : 'none'};\n    padding: 1rem 1rem 1rem 2rem;\n    user-select: none;\n`;\n","import styled, {keyframes} from 'styled-components';\n\nconst fadeIn = keyframes`\n  0% {\n    opacity: 0;\n    top: 1rem;\n  }\n\n  85% {\n    opacity: 0;\n    top: 1rem;\n  }\n\n  100% {\n    opacity: 1;\n    top: 0rem;\n  }\n`;\n\nexport const ErrorMessage = styled.div`\n    position: relative;\n    top: 0;\n    padding-left: 1rem;\n    animation: ${fadeIn} .7s ease-out forwards;\n`;\n","import type React from 'react';\nimport styled, {css, keyframes} from 'styled-components';\n\nconst fadeIn = keyframes`\n  from {\n    opacity: 0;\n  }\n\n  to {\n    opacity: 1;\n  }\n`;\n\ninterface Props {\n    readonly loaded: boolean;\n    readonly height: string;\n    readonly children: React.ReactNode;\n}\n\nexport const LoaderPane = styled.div<Props>`\n    height: ${props => props.height};\n    opacity: 0;\n    ${props => props.loaded ? css`animation: ${fadeIn} .1s ease-out forwards;` : ``}\n`;\n","import React, {useState} from 'react';\nimport styled from 'styled-components';\nimport type {HighlightColor, CharData} from '../data/grammar-to-chars';\nimport {useAnimationFrame} from '../hooks/useAnimationFrame';\nimport type {SoundEngine} from '@xenpaper/mosc';\n\ntype CharProps = {\n    ch: string;\n    charData?: CharData;\n    soundEngine: SoundEngine;\n};\n\nexport const Char = React.memo(function Char(props: CharProps): React.ReactElement {\n    const {ch, charData, soundEngine} = props;\n\n    const [active, setActive] = useState<boolean>(false);\n\n    useAnimationFrame(() => {\n        const time = soundEngine.playing() ? soundEngine.position() : -1;\n        const [start, end] = charData?.playTime ?? [];\n\n        const active = time !== -1\n            && start !== undefined\n            && end !== undefined\n            && start <= time\n            && end > time;\n\n        setActive(active);\n    }, [ch, charData]);\n\n    return <CharSpan className={active ? 'active' : ''} color={charData?.color}>{ch}</CharSpan>;\n});\n\ntype CharSpanProps = {\n    readonly color?: HighlightColor;\n    readonly children: React.ReactNode;\n};\n\nconst CharSpan = styled.span<CharSpanProps>`\n    color: ${props => props.theme.colors.highlights[props.color || 'unknown']};\n    transition: color 0.2s ${props => props.color === 'error' ? '0.5s' : '0s'} ease-out;\n\n    &.active {\n        transition: color 0s 0s linear;\n        color: #fff;\n    }\n`;\n","import {useEffect, useRef} from \"react\";\n\ntype Callback = (time: number, delta: number) => any;\n\nexport const useAnimationFrame = (cb: Callback, deps: any[]): void => {\n    const frame = useRef<number>(0);\n    const last = useRef<number>(performance.now());\n    const init = useRef<number>(performance.now());\n\n    const animate = () => {\n        const now = performance.now();\n        const time = (now - init.current) / 1000;\n        const delta = (now - last.current) / 1000;\n        cb(time, delta);\n        last.current = now;\n        frame.current = requestAnimationFrame(animate);\n    };\n\n    useEffect(() => {\n        frame.current = requestAnimationFrame(animate);\n        return () => cancelAnimationFrame(frame.current);\n    }, deps);\n};\n","import styled from 'styled-components';\n\nimport {\n    space,\n    color,\n    layout,\n    flexbox,\n    grid,\n    background,\n    border,\n    position,\n    compose\n} from 'styled-system';\n\nconst styledProps = compose(\n    space,\n    color,\n    layout,\n    flexbox,\n    grid,\n    background,\n    border,\n    position\n);\n\nexport const Box = styled.div<any>`\n    ${styledProps}\n`;\n\nexport const Flex = styled.div<any>`\n    display: flex;\n    ${styledProps}\n`;\n","export default __webpack_public_path__ + \"static/media/xenpaper-logo-512x512.19f23cff.png\";","import React, { useState } from \"react\";\nimport { IconToggle } from \"./component/IconToggle\";\nimport { Text } from \"./component/Text\";\nimport { Box, Flex } from \"./layout/Layout\";\nimport styled from \"styled-components\";\nimport { textStyle, typography } from \"styled-system\";\n// eslint-disable-next-line @typescript-eslint/ban-ts-comment\n// @ts-ignore\nimport logo from \"./assets/xenpaper-logo-512x512.png\";\n\nimport type { SidebarState } from \"./Xenpaper\";\nimport { CopyToClipboard } from \"react-copy-to-clipboard\";\nimport { octaveDivisionToRatio } from '../../mosc/src/mosc';\n\nconst Flink = styled.a`\n    color: ${(props) => props.theme.colors.highlights.unknown};\n    text-decoration: none;\n    font-style: normal;\n\n    &:hover,\n    &:focus {\n        color: #fff;\n        text-decoration: underline;\n    }\n\n    &:active {\n        color: #fff;\n    }\n`;\n\nexport const Footer = styled((props) => {\n    return (\n        <Box px={3} py={2} {...props}>\n            <Text as=\"div\" color=\"text.placeholder\">\n                <Flink href=\"#\">Xenpaper</Flink>{\" \"}\n                <Flink\n                    target=\"_blank\"\n                    href=\"https://github.com/dxinteractive/xenpaper/releases\"\n                >\n                    (v1.7.1)\n                </Flink>{\" \"}\n                is made by{\" \"}\n                <Flink target=\"_blank\" href=\"https://damienclarke.me\">\n                    Damien Clarke\n                </Flink>{\" \"}\n                using{\" \"}\n                <Flink target=\"_blank\" href=\"https://www.typescriptlang.org/\">\n                    typescript\n                </Flink>\n                ,{\" \"}\n                <Flink target=\"_blank\" href=\"https://reactjs.org/\">\n                    react\n                </Flink>\n                ,{\" \"}\n                <Flink target=\"_blank\" href=\"https://tonejs.github.io/\">\n                    tonejs\n                </Flink>\n                ,{\" \"}\n                <Flink\n                    target=\"_blank\"\n                    href=\"https://github.com/dmaevsky/rd-parse\"\n                >\n                    rd-parse\n                </Flink>\n                ,{\" \"}\n                <Flink target=\"_blank\" href=\"https://styled-components.com/\">\n                    styled-components\n                </Flink>{\" \"}\n                and{\" \"}\n                <Flink target=\"_blank\" href=\"https://dendriform.xyz\">\n                    dendriform\n                </Flink>\n                .\n            </Text>\n        </Box>\n    );\n})`\n    font-size: 0.9rem;\n    font-family: ${(props) => props.theme.fonts.copy};\n`;\n\ntype SidebarInfoProps = {\n    onSetTune: (tune: string) => void;\n    setSidebar: (open: SidebarState) => void;\n};\n\nexport const SidebarInfo = (props: SidebarInfoProps): React.ReactElement => {\n    const { onSetTune, setSidebar } = props;\n    return (\n        <Sidebar setSidebar={setSidebar} pad>\n            <H>How it works</H>\n            <B>\n                Create tunes by typing in the text area. Press play to hear what\n                you{\"'\"}ve written.{/*, or press <C>Ctrl / Cmd + Enter</C>.*/}\n            </B>\n            <Box pt={4}>\n                <H>Notes</H>\n            </Box>\n            <B>\n                Typing a number will create a note. Notes can be separated by\n                spaces or commas.\n                <Ex tune=\"0 4 7 12\" color=\"pitch\" onSetTune={onSetTune} />\n            </B>\n            <B>\n                Notes can be held for longer with hyphens <C>---</C>, and rests\n                can be added with dots <C>...</C>.\n                <Ex\n                    tune=\"0.2.3...3-2-0--.\"\n                    color=\"pitch\"\n                    onSetTune={onSetTune}\n                />\n            </B>\n            <B>\n                Spaces, new lines and bars <C>|</C> can be placed anywhere\n                between notes. Bars can also be placed during a note.\n                <Ex\n                    tune=\"0 8 7-|0 8 7-|-5 4--\"\n                    color=\"pitch\"\n                    onSetTune={onSetTune}\n                />\n            </B>\n            <B>\n                Notes can be written in many ways.\n                <br />- as scale degrees starting from zero <C>0,2,4</C>,\n                <br />- as ratios <C>3/2,5/4,1/1</C>,\n                <br />- as cents <C>702c</C>,\n                <br />- as divisions of an octave <C>11{\"\\\\\"}19</C>,\n                <br />- as divisions of an octave with a specific size (e.g. 3){\" \"}\n                <C>5{\"\\\\\"}13o3</C>\n                <br />- as cycles per second <C>432Hz</C>\n                <Ex\n                    tune={\"0 7 1/1 3/2 0c 702c\\n0\\\\19 11\\\\19 220Hz 330Hz\"}\n                    color=\"pitch\"\n                    onSetTune={onSetTune}\n                />\n            </B>\n            <B>\n                Notes can be shifted up or down octaves. <C>{\"'\"}</C> shifts the\n                following note up 1 octave, <C>\"</C> shifts the following note\n                up 2 octaves, and <C>`</C> shifts the following note down an\n                octave.\n                <Ex\n                    tune={\"0-3-'0-'3-\\\"0-'\\\"0-`0-``0-\"}\n                    color=\"pitch\"\n                    onSetTune={onSetTune}\n                />\n            </B>\n            <B>\n                Chords can be played by using <C>[</C> and <C>]</C> around a\n                comma-separated pitches.\n                <Ex\n                    tune=\"[3,7]-[5,8]-[0,3,7]--.[1/1,6/5,3/2]--.\"\n                    color=\"pitch\"\n                    onSetTune={onSetTune}\n                />\n            </B>\n            <B>\n                Chords can also be played using colon-notated ratios{\" \"}\n                <C>4:5:6</C>\n                <Ex tune=\"10:12:15---\" color=\"pitch\" onSetTune={onSetTune} />\n            </B>\n            <Box pt={4}>\n                <H>Comments</H>\n            </Box>\n            <B>\n                Comments can be added using <C>#</C> at the start of a line\n                <Ex\n                    tune={\n                        \"# a 7th chord\\n[0,4,7,10]--..\\n\\n# a harmonic 7th chord\\n4:5:6:7--..\"\n                    }\n                    color=\"pitch\"\n                    onSetTune={onSetTune}\n                />\n            </B>\n            <Box pt={4}>\n                <H>Scales</H>\n            </Box>\n            <B>\n                The scale can be changed at any time. A scale is denoted by{\" \"}\n                <C>{\"{\"}</C> and <C>{\"}\"}</C>. These dictate what pitches any\n                subsequent scale degrees correspond to. The default is 12 equal\n                divisons of the octave <C>12edo</C>.\n                <Ex\n                    tune=\"[0,4,7]--- {31edo}[0,10,18]---\"\n                    color=\"pitch\"\n                    onSetTune={onSetTune}\n                />\n            </B>\n            <B>\n                Equal division equave size can be changed by replacing the{\" \"}\n                {'\"o\"'} with a number or fraction <C>13ed3</C>.\n                <Ex\n                    tune=\"{13ed3}0 1 2 3 4\"\n                    color=\"pitch\"\n                    onSetTune={onSetTune}\n                />\n            </B>\n            <B>\n                Scales can be comprised of individual pitches.\n                <Ex\n                    tune={\"{1/1 9/8 5/4 4/3 3/2 5/3 15/8}\\n0 1 2 3 4 5 6 7-\"}\n                    color=\"pitch\"\n                    onSetTune={onSetTune}\n                />\n            </B>\n            <B>\n                Scales comprised of individual pitches can also set their equave\n                size using <C>{\"'\"}</C> after the last pitch. Defaults to{\" \"}\n                <C>2/1</C>\n                <Ex\n                    tune={\"{1/1 5/4 4/3 3/2'}\\n0 1 2 3 4 5 6 7 8-\"}\n                    color=\"pitch\"\n                    onSetTune={onSetTune}\n                />\n            </B>\n            <B>\n                Scales can use colon-notated ratios\n                <Ex\n                    tune={\"{12:14:16:18:21}\\n0 1 2 3 4 5 6 7-\"}\n                    color=\"pitch\"\n                    onSetTune={onSetTune}\n                />\n            </B>\n            <B>\n                Harmonic series segments can be specified by using the{\" \"}\n                <C>{\"::\"}</C> symbol inside a colon-notated ratio scale.{\" \"}\n                <C>4::7</C> is the same as <C>4:5:6:7</C>.\n                <Ex\n                    tune={\"{4::7}\\n0 1 2 3 4-\"}\n                    color=\"pitch\"\n                    onSetTune={onSetTune}\n                />\n            </B>\n            <B>\n                Scales can also reference the scale degrees at the moment they\n                are encountered. This can be useful for creating a subset of a\n                scale.\n                <Ex\n                    tune={\"{19edo}{0 3 6 8 11 14 17}\\n0 1 2 3 4 5 6 7-\"}\n                    color=\"pitch\"\n                    onSetTune={onSetTune}\n                />\n            </B>\n            <B>\n                Modes can be set using <C>{\"{m\"}</C> and <C>{\"}\"}</C>.\n                <Ex\n                    tune={\"{12edo}{m2 1 2 2 1 2 2}\\n0 1 2 3 4 5 6 7-\"}\n                    color=\"pitch\"\n                    onSetTune={onSetTune}\n                />\n            </B>\n            <B>\n                All pitch values other than cycles-per-second are relative to a\n                root note. This can be changed with <C>{\"{r...}\"}</C>. It can be\n                given any pitch value to use as the new root. It defaults to{\" \"}\n                <C>{\"{r440Hz}\"}</C>\n                <Ex\n                    tune={\"0 2 4-{r432Hz}0 2 4-\"}\n                    color=\"pitch\"\n                    onSetTune={onSetTune}\n                />\n            </B>\n            <B>\n                As each change to the root pitch is relative to the current\n                root, multiple roots can be chained after each other\n                <Ex\n                    tune={\"4 0-{r2}4 0-{r2}4 0-\"}\n                    color=\"pitch\"\n                    onSetTune={onSetTune}\n                />\n            </B>\n            <B>\n                This can also be used to switch octaves for a time.\n                <Ex\n                    tune={\"4 0-{r'0}4 0-{r`0}4 0-\"}\n                    color=\"pitch\"\n                    onSetTune={onSetTune}\n                />\n            </B>\n            <Box pt={4}>\n                <H>Setters</H>\n            </Box>\n            <B>\n                Setters are a type of statement that are used to set various\n                parameters as a tune progresses, such as <C>(bpm:100)</C> or{\" \"}\n                <C>(osc:sine)</C>. A setter is denoted by <C>(</C> and <C>)</C>,\n                and can be placed anywhere between notes or on new lines.\n                Multiple setters can be combined into a single statement using a\n                semicolon <C>(bpm:100; osc:sine)</C>\n            </B>\n\n            <Box pt={4}>\n                <H>Timing</H>\n            </Box>\n            <B>\n                Tempo can be changed using the tempo setter <C>(bpm:...)</C>.\n                Defaults to <C>(bpm:120)</C>\n                <Ex\n                    tune=\"(bpm:200)7 5 4 2 0...\"\n                    color=\"pitch\"\n                    onSetTune={onSetTune}\n                />\n            </B>\n            <B>\n                Tempo can also be set using milliseconds per beat{\" \"}\n                <C>(bms:...)</C>.\n                <Ex\n                    tune=\"(bms:1000)3 2 0\"\n                    color=\"pitch\"\n                    onSetTune={onSetTune}\n                />\n            </B>\n            <B>\n                Divisions of the beat can be set using the division setter{\" \"}\n                <C>(div:...)</C>. These can also be shortened to <C>(...)</C>,\n                like <C>(4)</C> or <C>(1/4)</C>. Defaults to 2 divisions per\n                beat (eighth notes) <C>(div:2)</C>\n                <Ex\n                    tune=\"0 2 3 7(3)0 2 3 7(4)0 2 3 7(1/2)0 2 3 7\"\n                    color=\"pitch\"\n                    onSetTune={onSetTune}\n                />\n            </B>\n            <Box pt={4}>\n                <H>Sound</H>\n            </Box>\n            <B>\n                The oscillator can be changed using the oscillator setter{\" \"}\n                <C>(osc:...)</C>. Defaults to <C>(osc:triangle)</C>\n                <Ex\n                    tune={\n                        \"(osc:sine)0 4 7.\\n(osc:sawtooth)0 4 7.\\n(osc:square)0 4 7.\"\n                    }\n                    color=\"pitch\"\n                    onSetTune={onSetTune}\n                />\n            </B>\n            <B>\n                Valid values are <C>sine</C>, <C>sawtooth</C>, <C>square</C> and{\" \"}\n                <C>triangle</C>. Any of these can be optionally prefixed with{\" \"}\n                <C>fm</C>, <C>am</C>or <C>fat</C>. Any of these can be suffixed\n                with an integer from <C>1</C> to <C>32</C> to indicate the\n                number of partials to use.\n                <Ex\n                    tune={\n                        \"(osc:fmsine)0 4 7.\\n(osc:fatsquare)0 4 7.\\n(osc:sawtooth5)0 4 7.\"\n                    }\n                    color=\"pitch\"\n                    onSetTune={onSetTune}\n                />\n            </B>\n            <B>\n                The envelope can be changed using the envelope setter{\" \"}\n                <C>(env:...)</C>. This accepts 4 digits corresponding to attack,\n                decay, sustain and release, where <C>0</C> is fast / small, and{\" \"}\n                <C>9</C> is slow / big. Defaults to <C>(env:2856)</C>\n                <Ex\n                    tune={\"(env:0158)0-.....\\n(env:6860)0---...\"}\n                    color=\"pitch\"\n                    onSetTune={onSetTune}\n                />\n            </B>\n            <B>\n                All oscillator and envelope options are made possible by{\" \"}\n                <Flink target=\"_blank\" href=\"https://tonejs.github.io/\">\n                    tonejs\n                </Flink>\n                .\n            </B>\n\n            <Box pt={4}>\n                <H>Retune primes</H>\n            </Box>\n            <B>\n                You can retune how notes/chords like <C>5/4</C> and <C>4:5:7</C> are tuned with\n                <C>(primes: a b c d...)</C>\n                where <C>a</C> represents the tuning of prime 2,\n                <C>b</C> represents the tuning of the prime 3,\n                <C>c</C> represents the tuning of the prime 5, and so on. Any pitch representation can be used.\n            </B>\n            <B>\n                This example simply configures the default tuning of just intonation ratios,\n                so nothing is changed:\n\n                <Ex\n                    tune={\"(primes: 2/1 3/1 5/1 7/1) 1/1 9/8 5/4 4/3 3/2\"}\n                    color=\"pitch\"\n                    onSetTune={onSetTune}\n                />\n            </B>\n            <B>\n                Tuning by primes involves representing a 'just' ratio as a {\" \"}\n                <Flink target=\"_blank\" href=\"https://en.xen.wiki/w/Monzo\">\n                    Monzo\n                </Flink> (i.e. decomposed into prime factors), and substituting the\n                custom prime tunings in place of the normal <C>2/1 3/1 5/1 7/1 ...</C>\n                intervals.\n            </B>\n            <B>\n                This example sets the <C>2/1</C> prime to 4 steps of 12 edo, so now octave\n                ratios now sound as though they were tempered major thirds. Undefined primes\n                will default to being justly-tuned:\n                <Ex\n                    tune={\"(primes: 4\\\\12) 1/1 2/1 4/1 8/1 16/1 3/1 3/2 3/4\"}\n                    color=\"pitch\"\n                    onSetTune={onSetTune}\n                />\n            </B>\n            <B>\n                This feature is useful for changing the temperaments/tuning of the\n                entire piece without\n                having to rewrite all the notes:\n\n                <Ex\n                    tune={\"(1/4)\\n4:5:6:7 # Just\\n(primes: 12 19 28 34)4:5:6:7 # 12edo\\n(primes: 22\\\\22 35\\\\22 51\\\\22 62\\\\22)4:5:6:7 # 22edo\"}\n                    color=\"pitch\"\n                    onSetTune={onSetTune}\n                />\n            </B>\n            <B>\n                For more info, check out <Flink target=\"_blank\" href=\"https://en.xen.wiki/w/Vals_and_tuning_space#Vals_and_monzos\">\n                    Vals and Monzos\n                </Flink> on the xen wiki.\n            </B>\n\n            <Box pt={4}>\n                <H>Ruler</H>\n            </Box>\n            <B>\n                The Ruler button displays a pitch ruler. Played notes will\n                appear on it. Click and drag to pan, use the mouse wheel to\n                zoom. Touch devices are not yet supported.\n            </B>\n            <B>\n                The current scale can be plotted by calling <C>(plot)</C>.\n                Calling it multiple times will render multiple scales. To see\n                this demo, you must click Ruler after you click Demo.\n                <Ex\n                    tune={\"(plot){19edo}(plot)\"}\n                    color=\"pitch\"\n                    onSetTune={onSetTune}\n                />\n            </B>\n            <Box pt={4}>\n                <H>Bugs and future features</H>\n            </Box>\n            <B>\n                Find anything broken, or have some ideas you want to share?\n                Visit the{\" \"}\n                <Flink\n                    target=\"_blank\"\n                    href=\"https://github.com/dxinteractive/xenpaper/issues\"\n                >\n                    issue tracker on github\n                </Flink>{\" \"}\n                to file bugs or discuss future features.\n            </B>\n            <Box display={[\"block\", \"block\", \"none\"]} pt={4}>\n                <Footer />\n            </Box>\n        </Sidebar>\n    );\n};\n\ntype SidebarShareProps = {\n    setSidebar: (open: SidebarState) => void;\n    url: string;\n    urlEmbed: string;\n};\n\nexport const SidebarShare = (props: SidebarShareProps): React.ReactElement => {\n    const { setSidebar, url, urlEmbed } = props;\n\n    const iframeCode = `<iframe width=\"560\" height=\"315\" src=\"${urlEmbed}\" title=\"Xenpaper\" frameborder=\"0\"></iframe>`;\n\n    const [copiedLink, setCopiedLink] = useState<boolean>(false);\n    const [copiedIframe, setCopiedIframe] = useState<boolean>(false);\n\n    return (\n        <Sidebar setSidebar={setSidebar} pad>\n            <Box>\n                <H>Share link</H>\n                <Flex>\n                    <ShareInput value={url} />\n                    <Box flexShrink=\"0\" ml={3}>\n                        <CopyToClipboard\n                            text={url}\n                            onCopy={() => setCopiedLink(true)}\n                        >\n                            <TryButton>\n                                {copiedLink ? \"Copied\" : \"Copy\"}\n                            </TryButton>\n                        </CopyToClipboard>\n                    </Box>\n                </Flex>\n            </Box>\n            <Box pt={4}>\n                <H>Embed</H>\n                <Flex>\n                    <ShareInput value={iframeCode} />\n                    <Box flexShrink=\"0\" ml={3}>\n                        <CopyToClipboard\n                            text={url}\n                            onCopy={() => setCopiedIframe(true)}\n                        >\n                            <TryButton>\n                                {copiedIframe ? \"Copied\" : \"Copy\"}\n                            </TryButton>\n                        </CopyToClipboard>\n                    </Box>\n                </Flex>\n                <Box pt={3}>\n                    <EmbedIframe\n                        key={urlEmbed}\n                        src={urlEmbed}\n                        frameBorder=\"0\"\n                    />\n                </Box>\n            </Box>\n        </Sidebar>\n    );\n};\n\nconst EmbedIframe = styled.iframe`\n    width: 100%;\n`;\n\nconst ShareInput = styled.input.attrs(() => ({ readOnly: true }))`\n    width: 100%;\n    background-color: ${(props) => props.theme.colors.background.normal};\n    font-family: ${(props) => props.theme.fonts.mono};\n    color: #ffffff;\n    padding: 0.25rem;\n    border: ${(props) =>\n            props.theme.colors.highlights[props.color || \"unknown\"]}\n        1px solid;\n`;\n\ntype SidebarProps = {\n    setSidebar: (open: SidebarState) => void;\n    children: React.ReactNode;\n    title?: string;\n    desc?: string;\n    pad?: boolean;\n    wide?: boolean;\n};\n\nexport const Sidebar = (props: SidebarProps): React.ReactElement => {\n    const { setSidebar, children, title, desc, pad, wide } = props;\n    return (\n        <TextPanel\n            width={[\"auto\", \"20rem\", \"30rem\", wide ? \"55%\" : \"40%\"]}\n            flexDirection=\"column\"\n            flexShrink=\"0\"\n            minHeight=\"0\"\n            height={[\"66vh\", \"auto\"]}\n        >\n            <Box\n                position={[\"absolute\", \"fixed\"]}\n                top={0}\n                right={0}\n                pt={3}\n                pr={3}\n            >\n                <IconToggle\n                    state=\"cross\"\n                    paths={{\n                        cross: [\n                            \"M 1 0 L 12 11 L 11 12 L 0 1 Z\",\n                            \"M 1 12 L 12 1 L 11 0 L 0 11 Z\",\n                        ],\n                        none: [],\n                    }}\n                    onClick={() => setSidebar(\"none\")}\n                    loaded\n                />\n            </Box>\n            <LogoArea>\n                {title && <Hsize>{title}</Hsize>}\n                {desc && (\n                    <Text\n                        as=\"div\"\n                        color=\"text.placeholder\"\n                        style={{ fontStyle: \"italic\", lineHeight: \"1.3rem\" }}\n                    >\n                        {desc}\n                    </Text>\n                )}\n                {!title && (\n                    <Flex alignItems=\"center\">\n                        <Box mr={4} width=\"5rem\" pt={2}>\n                            <img alt=\"Xenpaper logo\" src={logo} width=\"100%\" />\n                        </Box>\n                        <Box>\n                            <Logo>xenpaper</Logo>\n                            <Text\n                                as=\"div\"\n                                color=\"text.placeholder\"\n                                style={{\n                                    fontStyle: \"italic\",\n                                    lineHeight: \"1.3rem\",\n                                }}\n                            >\n                                Text-based microtonal sequencer.\n                            </Text>\n                            <Text\n                                as=\"div\"\n                                color=\"text.placeholder\"\n                                style={{\n                                    fontStyle: \"italic\",\n                                    lineHeight: \"1.3rem\",\n                                }}\n                            >\n                                Write down musical ideas and share the link\n                                around.\n                            </Text>\n                        </Box>\n                    </Flex>\n                )}\n            </LogoArea>\n            <Box p={pad ? 4 : 0} flexGrow=\"1\">\n                {children}\n            </Box>\n        </TextPanel>\n    );\n};\n\nconst TextPanel = styled(Flex)`\n    background-color: ${(props) => props.theme.colors.background.light};\n    font-family: ${(props) => props.theme.fonts.copy};\n    position: relative;\n    animation: 0.3s ease-out onShow;\n    position: relative;\n    overflow: auto;\n\n    opacity: 1;\n    top: 0;\n\n    @keyframes onShow {\n        0% {\n            opacity: 0;\n            top: 0.25rem;\n        }\n        100% {\n            opacity: 1;\n            top: 0;\n        }\n    }\n`;\n\nconst LogoArea = styled(Box)`\n    background-color: ${(props) => props.theme.colors.background.normal};\n    padding: 2rem 2rem 1.5rem;\n`;\n\nconst Logo = styled(Box)`\n    font-size: 2.5rem;\n    line-height: 2rem;\n    margin-bottom: 0.5rem;\n`;\n\nconst B = styled.div`\n    margin-bottom: 2rem;\n`;\n\nconst H = styled.h2`\n    font-size: 1.5rem;\n    margin-bottom: 1rem;\n`;\n\nconst Hsize = styled.h2`\n    font-size: 1.5rem;\n    margin-bottom: 0.25rem;\n`;\n\nconst C = styled.span`\n    font-family: ${(props) => props.theme.fonts.mono};\n    background-color: ${(props) => props.theme.colors.background.normal};\n    padding: 0.1rem;\n`;\n\ntype ExProps = {\n    tune: string;\n    onSetTune: (tune: string) => void;\n    color: string;\n    className?: string;\n};\n\nconst Ex = styled((props: ExProps): React.ReactElement => {\n    // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n    // @ts-ignore\n    return (\n        <Flex className={props.className}>\n            <Eg>e.g. </Eg>\n            <E fontSize={[\"1.1rem\", \"1.4rem\"]} color={props.color}>\n                {props.tune}\n            </E>\n            <Box flexShrink=\"0\">\n                <TryButton onClick={() => props.onSetTune(props.tune)}>\n                    Demo\n                </TryButton>\n            </Box>\n        </Flex>\n    );\n})`\n    font-family: ${(props) => props.theme.fonts.mono};\n    padding: 0.5rem;\n    margin-top: 1rem;\n    background-color: ${(props) => props.theme.colors.background.normal};\n    line-height: 2em;\n`;\n\nconst TryButton = styled.button`\n    border: none;\n    display: block;\n    padding: 0.5rem;\n    cursor: pointer;\n    background-color: ${(props) => props.theme.colors.highlights.scale};\n    color: ${(props) => props.theme.colors.background.normal};\n    position: relative;\n    outline: none;\n    opacity: 0.7;\n\n    transition: opacity 0.2s ease-out;\n\n    &:hover,\n    &:focus,\n    &:active {\n        opacity: 1;\n    }\n`;\n\nconst Eg = styled.div`\n    font-style: italic;\n    color: ${(props) => props.theme.colors.text.placeholder};\n    padding-left: 0.6rem;\n    padding-right: 1rem;\n    flex-shrink: 0;\n`;\n\ntype EProps = {\n    fontSize: unknown;\n};\n\nconst E = styled.pre<EProps>`\n    flex-grow: 1;\n    ${textStyle}\n    ${typography}\n    line-height: 1.4em;\n    font-style: normal;\n    color: ${(props) =>\n        props.theme.colors.highlights[props.color || \"unknown\"]};\n    word-wrap: break-word;\n    white-space: pre-wrap;\n    flex-shrink: 1;\n    width: 0;\n    padding-right: 0.5rem;\n`;\n","//\n// types\n//\n\nexport type MoscNote = {\n    type: 'NOTE_TIME';\n    time: number;\n    timeEnd: number;\n    hz: number;\n    label: string;\n};\n\nexport type MoscNoteMs = {\n    type: 'NOTE_MS';\n    ms: number;\n    msEnd: number;\n    hz: number;\n    label: string;\n};\n\nexport type MoscParam = {\n    type: 'PARAM_TIME';\n    time: number;\n    value: any;\n};\n\nexport type MoscParamMs = {\n    type: 'PARAM_MS';\n    ms: number;\n    value: any;\n};\n\nexport type MoscTempo = {\n    type: 'TEMPO';\n    time: number;\n    bpm: number;\n    lerp: boolean;\n};\n\nexport type MoscEnd = {\n    type: 'END_TIME';\n    time: number;\n};\n\nexport type MoscEndMs = {\n    type: 'END_MS';\n    ms: number;\n};\n\nexport type MoscItem = MoscNote|MoscTempo|MoscParam|MoscEnd;\n\nexport type MoscScore = {\n    sequence: MoscItem[];\n    lengthTime: number;\n};\n\nexport type MoscItemMs = MoscNoteMs|MoscParamMs|MoscEndMs;\n\nexport type MoscScoreMs = {\n    sequence: MoscItemMs[];\n    lengthMs: number;\n};\n\n//\n// utils\n//\n\nexport const centsToRatio = (cents: number, octave: number = 0): number => {\n    return octaveDivisionToRatio(cents, 1200, 2, octave);\n};\n\nexport const octaveDivisionToRatio = (steps: number, stepsInOctave: number, octaveSize: number, octave: number = 0): number => {\n    return Math.pow(octaveSize, (steps + (octave * stepsInOctave)) / stepsInOctave);\n};\n\nexport const ratioToCents = (ratio: number, octave: number = 0): number => {\n    return ratioToOctaveDivision(ratio, 1200, 2, octave);\n};\n\nexport const ratioToOctaveDivision = (ratio: number, stepsInOctave: number, octaveSize: number, octave: number = 0): number => {\n    return (Math.log(ratio) / Math.log(octaveSize) * stepsInOctave) - (octave * stepsInOctave);\n};\n\nexport const sortByTime = <T extends {time: number}>(items: T[]): T[] => {\n    return items.slice().sort((a, b) => {\n        if(a.time < b.time) return -1;\n        if(a.time > b.time) return 1;\n        return 0;\n    });\n};\n\nexport const sortByMs = (items: Array<MoscNoteMs>): Array<MoscNoteMs> => {\n    return items.slice().sort((a, b) => {\n        if(a.ms < b.ms) return -1;\n        if(a.ms > b.ms) return 1;\n        return 0;\n    });\n};\n\n//\n// time-based to ms-based conversion\n//\n\nconst tempoTimeToMs = (bpm1: number, bpm2: number, duration: number): number => {\n    let u = bpm1 / 60;\n    let v = bpm2 / 60;\n    let s = duration;\n    if(u === v) return s / v * 1000;\n    return 2 * s * (v - u) / (v * v - u * u) * 1000;\n};\n\ntype TempoChange = {\n    bpm: number;\n    bpmEnd: number;\n    time: number;\n    ms: number;\n};\n\nconst findTempoRangeForTime = (tempoChanges: TempoChange[], time: number): TempoChange => {\n    for(let i = tempoChanges.length - 1; i >= 0; i--) {\n        if(time >= tempoChanges[i].time) {\n            return tempoChanges[i];\n        }\n    }\n    return tempoChanges[0];\n};\n\nexport const timeToMs = (items: MoscItem[]): ((time: number) => number) => {\n\n    const tempoChanges: TempoChange[] = [];\n    tempoChanges.push({\n        bpm: 60,\n        bpmEnd: 60,\n        time: 0,\n        ms: 0\n    });\n\n    const tempoItems: MoscTempo[] = items.filter((item: MoscItem): item is MoscTempo => item.type === 'TEMPO');\n\n    sortByTime(tempoItems).forEach((tempo: MoscTempo, index: number, all: MoscTempo[]) => {\n        const lastChange = tempoChanges[tempoChanges.length - 1] as TempoChange;\n        const nextTempo: MoscTempo|undefined = all[index + 1];\n\n        const ms = tempoTimeToMs(lastChange.bpm, lastChange.bpmEnd, tempo.time - lastChange.time) + lastChange.ms;\n        const bpmEnd = (nextTempo && nextTempo.lerp) ? nextTempo.bpm : tempo.bpm;\n\n        tempoChanges.push({\n            bpm: tempo.bpm,\n            bpmEnd,\n            time: tempo.time,\n            ms\n        });\n    });\n\n    return (time: number): number => {\n        const tempoChange: TempoChange = findTempoRangeForTime(tempoChanges, time);\n        return tempoTimeToMs(tempoChange.bpm, tempoChange.bpmEnd, time - tempoChange.time) + tempoChange.ms;\n    };\n};\n\nexport const scoreToMs = (score: MoscScore): MoscScoreMs => {\n    const thisTimeToMs = timeToMs(score.sequence);\n\n    const sequence: MoscItemMs[] = sortByTime(score.sequence)\n        .map((item: MoscItem): MoscItemMs|undefined => {\n            if(item.type === 'NOTE_TIME') {\n                const note = item as MoscNote;\n                return {\n                    type: 'NOTE_MS',\n                    hz: note.hz,\n                    label: note.label,\n                    ms: thisTimeToMs(note.time),\n                    msEnd: thisTimeToMs(note.timeEnd)\n                };\n            }\n            if(item.type === 'PARAM_TIME') {\n                const param = item as MoscParam;\n                return {\n                    type: 'PARAM_MS',\n                    value: param.value,\n                    ms: thisTimeToMs(param.time)\n                };\n            }\n            if(item.type === 'END_TIME') {\n                const end = item as MoscEnd;\n                return {\n                    type: 'END_MS',\n                    ms: thisTimeToMs(end.time)\n                };\n            }\n            return undefined;\n        })\n        .filter((item): item is MoscItemMs => !!item);\n\n    return {\n        sequence,\n        lengthMs: thisTimeToMs(score.lengthTime)\n    };\n};\n\n//\n// soud engine base class\n//\n\ntype SoundEngineEndEventCallback = () => void;\ntype SoundEngineNoteEventCallback = (noteMs: MoscNoteMs, on: boolean) => void;\ntype SoundEngineEventCallbackCancel = () => void;\n\nexport class SoundEngine {\n\n    scoreMs?: MoscScoreMs;\n\n    playing(): boolean {\n        return false;\n    }\n\n    looping(): boolean {\n        return false;\n    }\n\n    position(): number {\n        return 0;\n    }\n\n    endPosition(): number {\n        return 0;\n    }\n\n    async play(): Promise<void> {}\n\n    async pause(): Promise<void> {}\n\n    async gotoMs(ms: number): Promise<void> {}\n\n    setLoop(loop: boolean, startMs: number = 0, endMs: number = 0): void {}\n    setLoopActive(loop: boolean): void {}\n    setLoopStart(ms: number = 0): void {}\n    setLoopEnd(ms: number = 0): void {}\n\n    async setScore(scoreMs: MoscScoreMs): Promise<void> {}\n\n    // events\n\n    events = {\n        end: new Set<SoundEngineEndEventCallback>(),\n        note: new Set<SoundEngineNoteEventCallback>()\n    };\n\n    _triggerEvent(type: string, ...params: any) {\n        // @ts-ignore\n        this.events[type].forEach(cb => cb(...params));\n    }\n\n    onEnd(callback: SoundEngineEndEventCallback): SoundEngineEventCallbackCancel {\n        this.events.end.add(callback);\n        return () => {\n            this.events.end.delete(callback);\n        };\n    }\n\n    onNote(callback: SoundEngineNoteEventCallback): SoundEngineEventCallbackCancel {\n        this.events.note.add(callback);\n        return () => {\n            this.events.note.delete(callback);\n        };\n    }\n}\n","import React, {useCallback, useEffect, useRef, useState} from 'react';\nimport useDimensions from 'react-use-dimensions';\nimport * as ReactKonva from 'react-konva';\nimport {useStrictMode} from 'react-konva';\nimport {useDendriform, useCheckbox, useInput} from 'dendriform';\nimport type {Dendriform} from 'dendriform';\nimport type {MoscNoteMs} from '@xenpaper/mosc';\nimport {Box, Flex} from './layout/Layout';\nimport styled from 'styled-components';\nimport hsl from 'hsl-to-hex';\n\nimport {centsToRatio} from '@xenpaper/mosc';\n\nuseStrictMode(true);\nconst {Stage, Layer, Rect, Group, Text, Line} = ReactKonva as any;\n\nexport type RulerState = {\n    notes: Map<string,MoscNoteMs>;\n    notesActive: Map<string,MoscNoteMs>;\n    collect: boolean;\n    viewPan: number;\n    viewZoom: number;\n    colourMode: string;\n    colourModeThreshold: number;\n    colourModeSoft: boolean;\n    rootHz?: number;\n    octaveSize?: number;\n    plots?: MoscNoteMs[][];\n};\n\nconst LOW_HZ_LIMIT = 20;\nconst ZOOM_SPEED = 1.1;\n\nconst hzToPan = (hz: number): number => Math.log2(hz / LOW_HZ_LIMIT);\n\nconst panToHz = (pan: number): number => Math.pow(2, pan) * LOW_HZ_LIMIT;\n\nconst panToCents = (pan: number): number => pan * 1200;\n\nconst panToPx = (pan: number, viewPan: number, viewZoom: number, height: number): number => {\n    return height * 0.5 - ((pan - viewPan) * height / viewZoom);\n};\n\nconst pxToPan = (px: number, viewPan: number, viewZoom: number, height: number): number => {\n    return viewPan - ((px - (height * 0.5)) / height * viewZoom);\n};\n\nconst hzInRange = (hz: number, [lowHz, highHz]: [number,number]) => {\n    return hz >= lowHz && hz <= highHz;\n};\n\n// this is so completely stupid\n// and doesnt even work with non 2x octave sizes\n// but i'm done with this\nconst getGradientColorFromNote = (note: MoscNoteMs): string => {\n    const matched = note.label.match(/([\\d.]+)c/);\n    if(!matched) {\n        return hsl(0, 100, 66);\n    }\n    const hue = Math.floor(Number(matched[1]) / 1200 * 360 + 180);\n    return hsl(hue, 100, 66);\n};\n\nconst getColorFromNoteProximity = (note: MoscNoteMs, proxNotes: MoscNoteMs[], threshold: number, hard: boolean): string => {\n    const noteCents = panToCents(hzToPan(note.hz));\n    let distance = Math.min(\n        ...proxNotes\n            .map(note => panToCents(hzToPan(note.hz)))\n            .map(cents => Math.abs(noteCents - cents))\n    ) / threshold;\n\n    if(hard) {\n        distance = distance > 1 ? 1000 : distance;\n    }\n\n    return hsl(Math.round(360 - (Math.min(distance, 2) * 80)), 100, Math.round(Math.max(1 - distance * 0.5, 0) * 50 + 10));\n};\n\nexport type InitialRulerState = {\n    lowHz?: number;\n    highHz?: number;\n    rootHz?: number;\n    octaveSize?: number;\n    plots?: MoscNoteMs[][];\n};\n\nexport function useRulerState({lowHz, highHz, ...rest}: InitialRulerState = {}) {\n    return useDendriform<RulerState>(() => {\n\n        let viewPan = hzToPan(220 * 1.5);\n        let viewZoom = 1.5;\n\n        if(lowHz && highHz) {\n            const lowPan = hzToPan(lowHz);\n            const highPan = hzToPan(highHz);\n            viewPan = (lowPan + highPan) * 0.5;\n            viewZoom = highPan - lowPan;\n        }\n\n        return {\n            notes: new Map(),\n            notesActive: new Map(),\n            collect: true,\n            viewPan,\n            viewZoom,\n            colourMode: 'gradient',\n            colourModeThreshold: 15,\n            colourModeSoft: true,\n            ...rest\n        };\n    });\n};\n\ntype Props = {\n    rulerState: Dendriform<RulerState,any>;\n};\n\nexport function PitchRuler(props: Props): React.ReactElement|null {\n    const {rulerState} = props;\n\n    const onClear = useCallback(() => {\n        rulerState.set(draft => {\n            draft.notes.clear();\n        });\n    }, []);\n\n    return <Flex flexDirection=\"column\" style={{height: '100%'}}>\n        <Flex pt={2} px={2} flexWrap=\"wrap\">\n            <Flex flexShrink={0} pb={2}>\n                <Box mr={3}>\n                    {rulerState.render('collect', form => (\n                        <Label>\n                            <Box as=\"span\" mr={2}>collect</Box>\n                            <input type=\"checkbox\" {...useCheckbox(form)} />\n                        </Label>\n                    ))}\n                </Box>\n                <Box mr={3}>\n                    <Button onClick={onClear}>clear</Button>\n                </Box>\n            </Flex>\n            <Flex flexShrink={0} pb={2}>\n                {rulerState.render('colourMode', form => <>\n                    <Box mr={3}>\n                        <Label>\n                            <Box as=\"span\" mr={2}>colour</Box>\n                            <select {...useInput(form)}>\n                                <option value=\"gradient\">Gradient</option>\n                                <option value=\"proxnotes\">Proximity to notes</option>\n                                {rulerState.render('plots', plots => <>\n                                    {(plots.useValue() ?? []).map((plot, i) => (\n                                        <option key={i} value={`proxplot${i}`}>Proximity to plot {i+1}</option>\n                                    ))}\n                                </>)}\n                            </select>\n                        </Label>\n                    </Box>\n                    {form.useValue() !== 'gradient' && <>\n                        <Box mr={3}>\n                            {rulerState.render('colourModeThreshold', form => (\n                                <Label>\n                                    <Box as=\"span\" mr={2}>threshold</Box>\n                                    <input\n                                        type=\"number\"\n                                        value={`${form.useValue()}`}\n                                        onChange={(e) => form.set(Number(e.target.value))}\n                                        min=\"1\"\n                                        max=\"100\"\n                                        step=\"1\"\n                                    />\n                                </Label>\n                            ))}\n                        </Box>\n                        <Box mr={3}>\n                            {rulerState.render('colourModeSoft', form => (\n                                <Label>\n                                    <Box as=\"span\" mr={2}>soft</Box>\n                                    <input type=\"checkbox\" {...useCheckbox(form)} />\n                                </Label>\n                            ))}\n                        </Box>\n                    </>}\n                </>)}\n            </Flex>\n        </Flex>\n        <PitchRulerCanvas {...props} />\n    </Flex>;\n}\n\ntype DragStartState = {\n    startPan: number;\n    startZoom: number;\n    startDrag: number;\n};\n\nfunction PitchRulerCanvas(props: Props): React.ReactElement|null {\n    const [dimensionsRef, {width = 0, height = 0}] = useDimensions();\n\n    const rulerState = props.rulerState.useValue();\n    const {\n        viewPan,\n        viewZoom,\n        rootHz,\n        octaveSize,\n        plots = [],\n        notes,\n        notesActive,\n        colourMode,\n        colourModeThreshold,\n        colourModeSoft\n    } = rulerState;\n\n    const visibleRange: [number,number] = [\n        panToHz(pxToPan(height, viewPan, viewZoom, height)),\n        panToHz(pxToPan(0, viewPan, viewZoom, height))\n    ];\n\n    const total = plots.length + 1;\n    const noteSetWidth = (width - 60) / total;\n\n    //\n    // getters\n    //\n\n    const getY = useCallback((hz: number): number => {\n        return panToPx(hzToPan(hz), viewPan, viewZoom, height);\n    }, [viewPan, viewZoom, height]);\n\n    const getColor = useCallback((note: MoscNoteMs): string => {\n        if(colourMode === 'gradient') {\n            return getGradientColorFromNote(note);\n        }\n\n        let compare: MoscNoteMs[] = [];\n        if(colourMode === 'proxnotes') {\n            compare = Array.from(notes.values());\n        } else if(colourMode.startsWith('proxplot')) {\n            const index = Number(colourMode.replace('proxplot',''));\n            compare = plots[index] ?? [];\n        }\n\n        return getColorFromNoteProximity(\n            note,\n            compare,\n            colourModeThreshold,\n            !colourModeSoft\n        );\n    }, [colourMode, colourModeThreshold, colourModeSoft, notes, plots]);\n\n    //\n    // interactions\n    //\n\n    const dragStartState = useRef<DragStartState|null>(null);\n    const [dragging, setDragging] = useState<boolean>(false);\n\n    const handleMouseDown = useCallback(({evt}) => {\n        evt.preventDefault();\n        dragStartState.current = {\n            startPan: viewPan,\n            startZoom: viewZoom,\n            startDrag: pxToPan(evt.clientY, viewPan, viewZoom, height)\n        };\n        setDragging(true);\n    }, [viewPan, viewZoom, height]);\n\n    const handleMouseMove = useCallback(({evt}) => {\n        evt.preventDefault();\n        const dragState = dragStartState.current;\n        if(dragState) {\n            const nowDrag = pxToPan(evt.clientY, dragState.startPan, dragState.startZoom, height);\n\n            props.rulerState.set(draft => {\n                draft.viewPan = dragState.startPan - nowDrag + dragState.startDrag;\n            });\n        }\n    }, [height]);\n\n    useEffect(() => {\n        const onMouseUp = () => {\n            dragStartState.current = null;\n            setDragging(false);\n        };\n\n        window.addEventListener('mouseup', onMouseUp);\n        return () => window.removeEventListener('mouseup', onMouseUp);\n    }, []);\n\n    const handleWheel = useCallback(({evt}) => {\n        evt.preventDefault();\n        props.rulerState.set(draft => {\n            draft.viewZoom *= evt.deltaY > 0 ? ZOOM_SPEED : evt.deltaY < 0 ? 1/ZOOM_SPEED : 1\n        });\n    }, []);\n\n    const handleTouchStart = useCallback(({evt}) => {\n        evt.preventDefault();\n        // console.log('handleTouchStart', {evt});\n    }, []);\n\n    const handleTouchMove = useCallback(({evt}) => {\n        evt.preventDefault();\n        // console.log('handleTouchMove', {evt});\n    }, []);\n\n    const handleTouchEnd = useCallback(({evt}) => {\n        evt.preventDefault();\n        // console.log('handleTouchEnd', {evt});\n    }, []);\n\n    // TODO zoom toward cursor position\n    // TODO zoom on touch devices\n\n    //\n    // render\n    //\n\n    const style = {\n        height: '100%',\n        width: '100%',\n        backgroundColor: '#080b0e',\n        cursor: dragging ? 'grabbing' : 'grab'\n    };\n\n    return <div ref={dimensionsRef} style={style}>\n        <Stage\n            width={width}\n            height={height}\n            onMouseDown={handleMouseDown}\n            onMouseMove={handleMouseMove}\n            onWheel={handleWheel}\n            onTouchStart={handleTouchStart}\n            onTouchMove={handleTouchMove}\n        >\n            <Layer>\n                {rootHz && octaveSize &&\n                    <CentsGrid\n                        rootHz={rootHz}\n                        octaveSize={octaveSize}\n                        getY={getY}\n                        width={width}\n                        visibleRange={visibleRange}\n                    />\n                }\n                {rootHz && octaveSize &&\n                    <RootGrid\n                        rootHz={rootHz}\n                        octaveSize={octaveSize}\n                        getY={getY}\n                        width={width}\n                        visibleRange={visibleRange}\n                    />\n                }\n                {rulerState.collect &&\n                    <NoteSet\n                        notes={Array.from(notes.values())}\n                        getY={getY}\n                        width={noteSetWidth}\n                        x={0}\n                        visibleRange={visibleRange}\n                        getColor={getColor}\n                    />\n                }\n                {(plots || []).map((plot, index) => {\n                    return <NoteSet\n                        key={index}\n                        notes={plot}\n                        getY={getY}\n                        width={noteSetWidth}\n                        x={noteSetWidth * (index + 1)}\n                        visibleRange={visibleRange}\n                        getColor={getColor}\n                    />\n                })}\n                <NoteSet\n                    notes={Array.from(notesActive.values())}\n                    getY={getY}\n                    color=\"#FFFFFF\"\n                    width={noteSetWidth}\n                    x={0}\n                    visibleRange={visibleRange}\n                />\n            </Layer>\n        </Stage>\n    </div>;\n}\n\n\n\ntype NoteSetProps = {\n    notes: MoscNoteMs[];\n    getY: (hz: number) => number;\n    getColor?: (note: MoscNoteMs) => string;\n    color?: string;\n    width: number;\n    x: number;\n    visibleRange: [number,number];\n};\n\nconst NoteSet = React.memo(function NoteSet(props: NoteSetProps): React.ReactElement {\n    const {\n        width,\n        notes,\n        getColor = getGradientColorFromNote,\n        getY,\n        x,\n        visibleRange\n    } = props;\n\n    const visibleNotes = notes.filter(note => hzInRange(note.hz, visibleRange));\n\n    return <>\n        {visibleNotes.map((note, index) => {\n            const color = props.color ?? getColor(note);\n            return <Group key={index} x={x} y={getY(note.hz)}>\n                <Line\n                    stroke={color}\n                    strokeWidth={1}\n                    points={[0, 0, width, 0]}\n                />\n                <Text\n                    text={note.label}\n                    fill={color}\n                    align=\"center\"\n                    width={width}\n                    y={-13}\n                />\n            </Group>;\n        })}\n    </>;\n});\n\nconst Label = styled.label`\n    user-select: none;\n`;\n\nconst Button = styled.button`\n    border: none;\n    display: block;\n    padding: .25rem .5rem;\n    cursor: pointer;\n    background-color: ${props => props.theme.colors.highlights.unknown};\n    color: ${props => props.theme.colors.background.normal};\n    position: relative;\n    outline: none;\n    opacity: 0.7;\n\n    transition: opacity .2s ease-out;\n\n    &:hover, &:focus, &:active {\n        opacity: 1;\n    }\n`;\n\ntype RootGridProps = {\n    octaveSize: number;\n    rootHz: number;\n    width: number;\n    getY: (hz: number) => number;\n    visibleRange: [number,number];\n};\n\nconst ROOT_GRID_POSITIONS = [7,6,5,4,3,2,1,0,-1,-2,-3];\n\nconst RootGrid = React.memo(function RootGrid(props: RootGridProps): React.ReactElement {\n    const {getY, rootHz, octaveSize, width, visibleRange} = props;\n\n    const lines = ROOT_GRID_POSITIONS\n        .map(i => [i, rootHz * Math.pow(octaveSize,i)])\n        .filter(([,hz]) => hzInRange(hz, visibleRange));\n\n    return <>\n        {lines.map(([i, hz]) => {\n            const y = getY(hz);\n            return <Group key={i} y={y}>\n                <Line\n                    stroke={hsl(208, 32, (8 - Math.abs(i)) * 12)}\n                    strokeWidth={1}\n                    points={[0, 0, width - 60, 0]}\n                    dash={[4,4]}\n                />\n                <Text\n                    text={`${hz}Hz`}\n                    fill={hsl(208, 32, (8 - Math.abs(i)) * 24)}\n                    align=\"left\"\n                    width={55}\n                    x={width - 55}\n                    y={-5}\n                />\n            </Group>;\n        })}\n    </>;\n});\n\nconst CENT_GRID_POSITIONS = [1,0,-1];\n\ntype CentsGridProps = {\n    octaveSize: number;\n    rootHz: number;\n    width: number;\n    getY: (hz: number) => number;\n    visibleRange: [number,number];\n};\n\nconst CentsGrid = React.memo(function CentsGrid(props: CentsGridProps): React.ReactElement {\n    const {getY, rootHz, octaveSize, width, visibleRange} = props;\n\n    const lines: [number,number,number][] = [];\n\n    CENT_GRID_POSITIONS.forEach(octave => {\n        for(let i = 100; i < octaveSize * 600; i+=100) {\n            const hz = rootHz * centsToRatio(i, octave);\n            if(hzInRange(hz, visibleRange)) {\n                lines.push([i, hz, octave]);\n            }\n        }\n    });\n\n    return <>\n        {lines.map(([cents, hz, octave]) => {\n            const y = getY(hz);\n            return <Group key={hz} y={y}>\n                <Line\n                    stroke={hsl(208, 32, (2 - Math.abs(octave)) * 12)}\n                    strokeWidth={1}\n                    points={[0, 0, width - 60, 0]}\n                />\n                <Text\n                    text={`${cents}c`}\n                    fill={hsl(208, 32, (2 - Math.abs(octave)) * 24)}\n                    align=\"left\"\n                    width={55}\n                    x={width - 55}\n                    y={-5}\n                />\n            </Group>;\n        })}\n    </>;\n});\n","import Parser, {All, Any, Optional, Star, Node} from 'rd-parse';\n\nexport type NodeType = {\n    type: string;\n    delimiter: boolean;\n    pos: number;\n    len: number;\n    time?: [number, number];\n};\n\nexport type Meta = {\n    pos: number;\n};\n\nexport type NodeCreator = (args: any) => {[key: string]: any};\n\nfunction node/*<T extends NodeType>*/(type: string, match: RegExp|string, fn: NodeCreator) {\n    return Node(match, (value: unknown, meta: Meta) => {\n        return {\n            type,\n            delimiter: false,\n            ...fn(value),\n            pos: meta.pos\n        };\n    });\n}\n\nconst sumLen = (nodes: NodeType[]): number => nodes.reduce((len: number, node: NodeType) => len + node.len, 0);\n\n//\n// delimiters and whitespace\n//\n\nconst delimiter = ([text]: [string]) => ({\n    delimiter: true,\n    len: text.length\n});\n\nexport type DelimiterType = NodeType & {\n    delimiter: true;\n};\n\nexport const Semicolon = node/*<DelimiterType>*/(\n    'Semicolon',\n    /(^[;]\\s*)/,\n    delimiter\n);\n\nexport const Colon = node/*<DelimiterType>*/(\n    'Colon',\n    /(^[:]\\s*)/,\n    delimiter\n);\n\nexport const BarLine = node/*<DelimiterType>*/(\n    'BarLine',\n    '|',\n    () => ({\n        len: 1,\n        delimiter: true\n    })\n);\n\n/**\n * One or more /\\s/ or comma\n */\nexport const Whitespace = node/*<DelimiterType>*/(\n    'Whitespace',\n    /(^[,\\s]+)/,\n    ([whitespace]) => ({\n        len: whitespace.length,\n        delimiter: true\n    })\n);\n\n//\n// pitches\n//\n\ntype OctaveModifierType = NodeType & {\n    octave: number;\n};\n\nexport const OctaveModifier = node/*<OctaveModifierType>*/(\n    'OctaveModifier',\n    /^(['\"]+|`+)/,\n    ([chars]) => ({\n        octave: (chars.split(\"'\").length - 1) + ((chars.split('\"').length - 1) * 2) - (chars.split('`').length - 1),\n        len: chars.length\n    })\n);\n\nexport type PitchCentsType = NodeType & {\n    cents: number;\n};\n\nexport const PitchCents = node/*<PitchCentsType>*/(\n    'PitchCents',\n    /^(\\d+|\\d+\\.(\\d+)?)c/,\n    ([cents]) => ({\n        cents: Number(cents),\n        len: cents.length + 1\n    })\n);\n\nexport type PitchOctaveDivisionType = NodeType & {\n    numerator: number;\n    denominator: number;\n    octaveSize: number;\n};\n\nexport const PitchOctaveDivision = node/*<PitchOctaveDivisionType>*/(\n    'PitchOctaveDivision',\n    /^([\\d]+)[\\\\/]([\\d]+)o(\\d)?(\\/(\\d))?/,\n    ([numerator, denominator, octaveSize = '', slash = '', octaveDenom = '']) => ({\n        numerator: Number(numerator),\n        denominator: Number(denominator),\n        octaveSize: Number(octaveSize || 2) / Number(octaveDenom || 1),\n        len: numerator.length + denominator.length + octaveSize.length + 2 + slash.length\n    })\n);\n\nexport const PitchOctaveDivision2 = node/*<PitchOctaveDivisionType>*/(\n    'PitchOctaveDivision',\n    /^([\\d]+)[\\\\]([\\d]+)/,\n    ([numerator, denominator]) => ({\n        numerator: Number(numerator),\n        denominator: Number(denominator),\n        octaveSize: 2,\n        len: numerator.length + denominator.length + 1\n    })\n);\n\nexport type PitchRatioType = NodeType & {\n    numerator: number;\n    denominator: number;\n};\n\nexport const PitchRatio = node/*<PitchRatioType>*/(\n    'PitchRatio',\n    /^([\\d]+)\\/([\\d]+)/,\n    ([numerator, denominator]) => ({\n        numerator: Number(numerator),\n        denominator: Number(denominator),\n        len: numerator.length + denominator.length + 1\n    })\n);\n\nexport type PitchDegreeType = NodeType & {\n    degree: number;\n};\n\nexport const PitchDegree = node/*<PitchDegreeType>*/(\n    'PitchDegree',\n    /^([\\d]+)/,\n    ([degree]) => ({\n        degree: Number(degree),\n        len: degree.length\n    })\n);\n\nexport type PitchHzType = NodeType & {\n    hz: number;\n};\n\nexport const PitchHz = node/*<PitchHzType>*/(\n    'PitchHz',\n    /^(\\d+|\\d+\\.(\\d+)?)hz/i,\n    ([hz]: [string]) => ({\n        hz: Number(hz),\n        len: hz.length + 2\n    })\n);\n\nexport type PitchType = NodeType & {\n    value: PitchCentsType|PitchOctaveDivisionType|PitchRatioType|PitchDegreeType|PitchHzType;\n    octave?: OctaveModifierType;\n};\n\nexport const Pitch = node/*<PitchType>*/(\n    'Pitch',\n    All(Optional(OctaveModifier), Any(PitchCents, PitchHz, PitchOctaveDivision, PitchOctaveDivision2, PitchRatio, PitchDegree)),\n    (args) => {\n        if(args.length === 1) {\n            const [value] = args;\n            return {\n                value,\n                len: value.len\n            };\n        }\n        const [octave, value] = args;\n        return {\n            value,\n            octave,\n            len: octave.len + value.len\n        };\n    }\n);\n\nexport type PitchGroupType = Array<PitchType|DelimiterType>;\n\n// Note: this appears as an array of Pitch objects\nexport const PitchGroup = Node(\n    All(Pitch, Star(All(Whitespace, Pitch))),\n    (elements: unknown) => elements\n);\n\n//\n// note\n//\n\nexport type HoldType = NodeType & {\n    length: number;\n};\n\nexport const Hold = node/*<HoldType>*/(\n    'Hold',\n    /^(([|]?-)+)/,\n    ([value]) => ({\n        length: value.replace(/[|]+/g, '').length,\n        len: value.length\n    })\n);\n\nexport type TailType = HoldType;\n\nexport const Tail = Any(Hold);\n\nexport type RestType = NodeType & {\n    length: number;\n};\n\nexport const Rest = node/*<RestType>*/(\n    'Rest',\n    All(/^(\\.)/),\n    ([value]: [unknown[]]) => ({\n        length: value.length,\n        len: value.length\n    })\n);\n\nexport type NoteType = NodeType & {\n    pitch: PitchType;\n    tail?: TailType;\n};\n\nexport const Note = node/*<NoteType>*/(\n    'Note',\n    All(Pitch, Optional(Tail)),\n    ([pitch, tail]: [PitchType, TailType?]) => ({\n        pitch,\n        tail,\n        len: pitch.len + (tail ? tail.len : 0)\n    })\n);\n\n//\n// chords\n//\n\nexport type RatioChordPitchType = NodeType & {\n    pitch: number;\n};\n\nexport const RatioChordPitch = node/*<RatioChordPitchType>*/(\n    'RatioChordPitch',\n    /^([\\d]+)/,\n    ([pitch]: [string]) => ({\n        pitch: Number(pitch),\n        len: pitch.length\n    })\n);\n\nexport type RatioChordPitchGroupType = Array<RatioChordPitchType|DelimiterType>;\n\nexport const RatioChordPitchGroup = Node(\n    All(RatioChordPitch, Colon, Optional(Colon), RatioChordPitch, Star(All(Colon, Optional(Colon),  RatioChordPitch))),\n    (elements: RatioChordPitchGroupType) => elements\n);\n\nexport type ChordType = NodeType & {\n    pitches: Array<RatioChordPitchType|PitchType|DelimiterType>;\n    tail?: TailType;\n};\n\nexport const Chord = node/*<ChordType>*/(\n    'Chord',\n    All('[', Any(RatioChordPitchGroup, PitchGroup), ']', Optional(Tail)),\n    ([pitches, tail]) => ({\n        pitches,\n        tail,\n        len: sumLen(pitches) + (tail ? tail.len : 0) + 2\n    })\n);\n\nexport type RatioChordType = NodeType & {\n    pitches: Array<RatioChordPitchType>;\n    tail?: TailType;\n};\n\nexport const RatioChord = node/*<RatioChordType>*/(\n    'RatioChord',\n    All(RatioChordPitchGroup, Optional(Tail)),\n    ([pitches, tail]) => ({\n        pitches,\n        tail,\n        len: sumLen(pitches) + (tail ? tail.len : 0)\n    })\n);\n\n//\n// scales\n//\n\nexport type EdoScaleType = NodeType & {\n    divisions: number;\n    octaveSize: number;\n};\n\nexport const EdoScale = node/*<EdoScaleType>*/(\n    'EdoScale',\n    /^(\\d+)ed([o\\d])(\\/(\\d))?/i,\n    ([divisions, octaveSize, slash = '', denominator = '']: [string, string, string, string]) => ({\n        divisions: Number(divisions),\n        // TODO this math should not be in the grammar\n        octaveSize: octaveSize === 'o' ? 2 : Number(octaveSize) / Number(denominator || 1),\n        len: divisions.length + octaveSize.length + 2 + slash.length\n    })\n);\n\nexport type ScaleOctaveMarkerType = NodeType;\n\nexport const ScaleOctaveMarker = node/*<ScaleOctaveMarkerType>*/(\n    'ScaleOctaveMarker',\n    \"'\",\n    () => ({\n        len: 1\n    })\n);\n\nexport type PitchGroupScalePrefixType = NodeType & {\n    prefix: string;\n};\n\nexport const PitchGroupScalePrefix = node/*<EdoScaleType>*/(\n    'PitchGroupScalePrefix',\n    /(^[m])(\\s*)/,\n    ([prefix, space]: [string, string?]) => ({\n        prefix,\n        len: prefix.length + (space ? space.length : 0)\n    })\n);\n\nexport type PitchGroupScaleType = NodeType & {\n    pitchGroupScalePrefix?: PitchGroupScalePrefixType;\n    pitches: PitchGroupType;\n    scaleOctaveMarker?: ScaleOctaveMarkerType;\n};\n\nexport const PitchGroupScale = node/*<PitchGroupScaleType>*/(\n    'PitchGroupScale',\n    All(Optional(PitchGroupScalePrefix), PitchGroup, Optional(ScaleOctaveMarker)),\n    (elements: any[]) => {\n\n        const [pitchGroupScalePrefix, pitches, scaleOctaveMarker] = Array.isArray(elements[0])\n            ? [undefined, ...elements]\n            : elements;\n\n        return {\n            pitchGroupScalePrefix,\n            pitches,\n            scaleOctaveMarker,\n            len: (pitchGroupScalePrefix ? pitchGroupScalePrefix.len : 0) + sumLen(pitches) + (scaleOctaveMarker ? scaleOctaveMarker.len : 0)\n        };\n    }\n);\n\nexport type RatioChordScaleType = NodeType & {\n    pitches: Array<RatioChordPitchType|DelimiterType>;\n    scaleOctaveMarker?: ScaleOctaveMarkerType;\n};\n\nexport const RatioChordScale = node/*<RatioChordScaleType>*/(\n    'RatioChordScale',\n    All(RatioChordPitchGroup, Optional(ScaleOctaveMarker)),\n    ([pitches, scaleOctaveMarker]: [RatioChordPitchGroupType, ScaleOctaveMarkerType?]) => ({\n        pitches,\n        scaleOctaveMarker,\n        len: sumLen(pitches) + (scaleOctaveMarker ? scaleOctaveMarker.len : 0)\n    })\n);\n\n//\n// scale setters\n//\n\nexport const Scale = Any(EdoScale, RatioChordScale, PitchGroupScale);\n\nexport type SetScaleType = NodeType & {\n    scale: EdoScaleType|RatioChordScaleType|PitchGroupScaleType;\n};\n\nexport const SetScale = node/*<SetScaleType>*/(\n    'SetScale',\n    All('{', Scale, '}'),\n    ([scale]) => ({\n        scale,\n        len: scale.len + 2\n    })\n);\n\nexport type SetRootType = NodeType & {\n    pitch: PitchType\n};\n\nexport const SetRoot = node/*<SetRootType>*/(\n    'SetRoot',\n    All('{r', Pitch, '}'),\n    ([pitch]) => ({\n        pitch,\n        len: pitch.len + 3\n    })\n);\n\n//\n// setters\n//\n\n// bpm\n\nexport type SetBpmValue = NodeType & {\n    bpm: number;\n};\n\nexport const SetBpmValue = node/*<SetBpmValueType>*/(\n    'SetBpmValue',\n    /^(\\d+(\\.\\d+)?)/,\n    ([bpm]: [string]) => ({\n        bpm: Number(bpm),\n        len: bpm.length\n    })\n);\n\nexport type SetBpmType = NodeType & {\n    bpm: number;\n};\n\nexport type SetBpmValueType = NodeType & {\n    bpm: number;\n};\n\nexport const SetBpm = node/*<SetBpmType>*/(\n    'SetBpm',\n    All(/^(bpm:\\s*)/, SetBpmValue),\n    ([prefix, value]: [string, SetBpmValueType]) => ({\n        bpm: value.bpm,\n        len: prefix.length + value.len\n    })\n);\n\n// bms (beat milliseconds)\n\nexport type SetBmsValue = NodeType & {\n    bms: number;\n};\n\nexport const SetBmsValue = node/*<SetBmsValueType>*/(\n    'SetBmsValue',\n    /^(\\d+(\\.\\d+)?)/,\n    ([bms]: [string]) => ({\n        bms: Number(bms),\n        len: bms.length\n    })\n);\n\nexport type SetBmsType = NodeType & {\n    bms: number;\n};\n\nexport type SetBmsValueType = NodeType & {\n    bms: number;\n};\n\nexport const SetBms = node/*<SetBmsType>*/(\n    'SetBms',\n    All(/^(bms:\\s*)/, SetBmsValue),\n    ([prefix, value]: [string, SetBmsValueType]) => ({\n        bms: value.bms,\n        len: prefix.length + value.len\n    })\n);\n\n\n// subdivision\n\nexport type SetSubdivisionValueType = NodeType & {\n    subdivision: number;\n    denominator: number;\n};\n\n// TODO - could be a generic number matcher\nexport const SetSubdivisionValue = node/*<SetSubdivisionValueType>*/(\n    'SetSubdivisionValue',\n    /^([\\d]+)(\\/(\\d))?/,\n    ([subdivision, slash = '', denominator = '']: [string, string, string]) => ({\n        subdivision: Number(subdivision),\n        denominator: denominator ? Number(denominator) : undefined,\n        len: subdivision.length + slash.length\n    })\n);\n\nexport type SetSubdivisionType = NodeType & {\n    subdivision: number;\n    denominator: number;\n};\n\nexport const SetSubdivision = node/*<SetSubdivisionType>*/(\n    'SetSubdivision',\n    All(/^((div:)?\\s*)/, SetSubdivisionValue),\n    ([prefix,, value]: [string, string, SetSubdivisionValueType]) => ({\n        subdivision: value.subdivision,\n        denominator: value.denominator,\n        len: prefix.length + value.len\n    })\n);\n\n// osc\n\nexport type SetOscValueType = NodeType & {\n    osc: string;\n};\n\nexport const SetOscValue = node/*<SetOscValueType>*/(\n    'SetOscValue',\n    /^([a-z0-9]*)/,\n    ([osc]: [string]) => ({\n        osc,\n        len: osc.length\n    })\n);\n\nexport type SetOscType = NodeType & {\n    osc: string;\n};\n\nexport const SetOsc = node/*<SetOscType>*/(\n    'SetOsc',\n    All(/^(osc:\\s*)/, SetOscValue),\n    ([prefix, value]: [string, SetOscValueType]) => ({\n        osc: value.osc,\n        len: prefix.length + value.len\n    })\n);\n\n// env\n\nexport type SetEnvValueType = NodeType & {\n    a: number;\n    d: number;\n    s: number;\n    r: number;\n};\n\nexport const SetEnvValue = node/*<SetEnvValueType>*/(\n    'SetEnvValue',\n    /^(([0-9])([0-9])([0-9])([0-9]))/,\n    ([all, a, d, s, r]: [string, string, string, string, string]) => ({\n        a: Number(a),\n        d: Number(d),\n        s: Number(s),\n        r: Number(r),\n        len: all.length\n    })\n);\n\nexport type SetEnvType = NodeType & {\n    a: number;\n    d: number;\n    s: number;\n    r: number;\n};\n\nexport const SetEnv = node/*<SetEnvType>*/(\n    'SetEnv',\n    All(/^(env:\\s*)/, SetEnvValue),\n    ([prefix, value]: [string, SetEnvValueType]) => ({\n        a: value.a,\n        d: value.d,\n        s: value.s,\n        r: value.r,\n        len: prefix.length + value.len\n    })\n);\n\n// ruler\n\nexport type SetRulerRangeType = NodeType & {\n    low: PitchType;\n    high: PitchType;\n};\n\nexport const SetRulerRange = node/*<SetRulerRangeType>*/(\n    'SetRulerRange',\n    All(/^(rl:)/, Pitch, ',', Pitch),\n    ([prefix, low, high]: [string, PitchType, PitchType]) => ({\n        low,\n        high,\n        len: prefix.length + 1 + low.len + high.len\n    })\n);\n\nexport type SetRulerPlotType = NodeType;\n\nexport const SetRulerPlot = node/*<SetRulerPlotType>*/(\n    'SetRulerPlot',\n    'plot',\n    () => ({\n        len: 4\n    })\n);\n\nexport type SetRulerType = SetRulerRangeType|SetRulerPlotType;\n\nexport const SetRuler = Any(SetRulerRange, SetRulerPlot);\n\n// Tuning of primes\n// Affects calculation of ratio frequencies\n\nexport type SetPrimesType = NodeType & {\n    primesPitches: PitchGroupType\n};\n\nexport const SetPrimes = node/*<SetPrimesType>*/(\n    'SetPrimes',\n    All(/^(primes:\\s*)/, PitchGroup),\n    ([prefix, primesPitches]: [string, PitchGroupType]) => ({\n        primesPitches,\n        len: prefix.length + sumLen(primesPitches)\n    })\n);\n\n\n// setters\n\nexport type SetterType = SetBpmType|SetBmsType|SetSubdivisionType|SetOscType|SetEnvType|SetRulerType|SetPrimesType;\n\nexport const Setter = Any(SetBpm, SetBms, SetSubdivision, SetOsc, SetEnv, SetRuler, SetPrimes);\n\nexport type SetterGroupType = NodeType & {\n    setters: SetterType[];\n};\n\nexport const SetterGroup = node/*<SetterGroupType>*/(\n    'SetterGroup',\n    All('(', Setter, Star(All(Semicolon, Setter)), ')'),\n    (setters: SetterType[]) => ({\n        setters,\n        len: sumLen(setters) + 2\n    })\n);\n\n//\n// comments\n//\n\nexport type CommentType = NodeType & {\n    comment: string;\n};\n\nexport const Comment = node/*<CommentType>*/(\n    'Comment',\n    /^#([^\\n]*)/,\n    ([comment]) => ({\n        comment,\n        len: comment.length + 1\n    })\n);\n\n//\n// sequence\n//\n\nexport type SequenceItemsType = RatioChordType|NoteType|ChordType|RestType|SetterGroupType|SetScaleType|SetRootType|SetPrimesType|CommentType;\n\nexport type SequenceType = NodeType & {\n    items: SequenceItemsType[];\n};\n\nexport const Sequence = node/*<SequenceType>*/(\n    'Sequence',\n    Star(Any(Comment, RatioChord, Note, Chord, Rest, SetterGroup, SetScale, SetRoot, BarLine, Whitespace)),\n    (items: SequenceItemsType[]) => ({\n        items,\n        len: sumLen(items)\n    })\n);\n\n//\n// params\n//\n\nexport type ParamEmbedType = NodeType;\n\nexport const ParamEmbed = node/*<ParamEmbedType>*/(\n    'ParamEmbed',\n    'embed',\n    () => ({\n        len: 5\n    })\n);\n\nexport type ParamType = ParamEmbedType;\n\nexport const Param = Any(ParamEmbed);\n\nexport type ParamGroupType = NodeType & {\n    params: ParamType[];\n};\n\nexport const ParamGroup = node/*<ParamGroupType>*/(\n    'ParamGroup',\n    All(Param, Star(All(Semicolon, Param)), ':'),\n    (params: ParamType[]) => ({\n        params,\n        len: sumLen(params) + 1\n    })\n);\nexport type XenpaperAST = NodeType & {\n    sequence?: SequenceType;\n    paramGroup?: ParamGroupType;\n};\n\nexport const XenpaperGrammar = node/*<XenpaperAST>*/(\n    'XenpaperGrammar',\n    All(Optional(ParamGroup), Optional(Sequence)),\n    (parts: Array<SequenceType>) => {\n        const paramGroup = parts.find(part => part.type === 'ParamGroup');\n        const sequence = parts.find(part => part.type === 'Sequence');\n        return {\n            sequence,\n            paramGroup,\n            len: sequence ? sequence.len : 0\n        };\n    }\n);\n\nconst parser = Parser(XenpaperGrammar);\n\nexport const XenpaperGrammarParser = (input: string): XenpaperAST => {\n    try {\n        return parser(input);\n    } catch(e: any) {\n        // eslint-disable-next-line no-console\n        console.error('e', e);\n        throw new Error(e.message.replace(/Remainder:.*/s, ''));\n    }\n};\n","import type {XenpaperAST} from './grammar';\n\nexport type HighlightColor = 'delimiter'\n    |'pitch'\n    |'chord'\n    |'scaleGroup'\n    |'scale'\n    |'setterGroup'\n    |'setter'\n    |'comment'\n    |'commentStart'\n    |'unknown'\n    |'error'\n    |'errorMessage';\n\nexport type CharData = {\n    color: HighlightColor;\n    playTime?: [number, number];\n};\n\nconst colorMap = new Map<string,HighlightColor>([\n    ['Semicolon','delimiter'],\n    ['Colon','delimiter'],\n    // ['PitchCents','pitch'],\n    // ['PitchOctaveDivision','pitch'],\n    // ['PitchRatio','pitch'],\n    // ['PitchDegree','pitch'],\n    // ['PitchHz','pitch'],\n    // ['OctaveModifier','pitch'],\n    ['Pitch','pitch'],\n    ['RatioChordPitch','pitch'],\n    ['Chord','chord'],\n    ['Chord.Whitespace','pitch'],\n    // ['RatioChord'],\n    ['Hold','pitch'],\n    ['Rest','delimiter'],\n    ['BarLine','delimiter'],\n    ['Whitespace','delimiter'],\n    ['EdoScale','scale'],\n    ['PitchGroupScale','scale'],\n    ['PitchGroupScale.Pitch','scale'],\n    ['PitchGroupScale.Whitespace','scale'],\n    ['RatioChordScale','scale'],\n    ['RatioChordScale.RatioChordPitch','scale'],\n    ['RatioChordScale.Colon','scale'],\n    ['ScaleOctaveMarker','scale'],\n    ['SetScale','scaleGroup'],\n    ['SetRoot','scaleGroup'],\n    ['SetRoot.Pitch','scale'],\n    ['SetBpm','setter'],\n    ['SetBms','setter'],\n    ['SetSubdivision','setter'],\n    ['SetOsc','setter'],\n    ['SetEnv','setter'],\n    ['SetPrimes', 'setter'],\n    ['SetRulerPlot','setter'],\n    ['SetRulerRange','setter'],\n    ['SetRulerRange.Pitch','setter'],\n    ['SetterGroup','setterGroup'],\n    ['SetterGroup.Semicolon','setterGroup'],\n    ['Comment','comment']\n]);\n\n// need to pass playhead time in\nconst extract = (chars: CharData[], data: any, parent: string, withinTime?: number): void => {\n    if(Array.isArray(data)) {\n        data.forEach(value => extract(chars, value, parent, withinTime));\n        return;\n    }\n    if(data instanceof Object) {\n        const color = colorMap.get(`${parent}.${data.type}`) || colorMap.get(data.type);\n        const time = withinTime ?? data.time;\n\n        if(typeof data.pos === 'number' && typeof data.len === 'number' && color) {\n            for(let i = 0; i < data.len; i++) {\n                chars[data.pos + i] = {\n                    color: (color === 'comment' && i === 0) ? 'commentStart' : color,\n                    playTime: time\n                };\n            }\n        }\n        Object.keys(data).forEach(key => {\n            extract(chars, data[key], data.type, time);\n        });\n        return;\n    }\n};\n\nexport const grammarToChars = ({sequence}: XenpaperAST): CharData[] => {\n    if(!sequence) return [];\n    const {items} = sequence;\n    const chars: CharData[] = [];\n    extract(chars, items, '');\n    return chars;\n};\n","import type {\n    XenpaperAST,\n    SetScaleType,\n    NoteType,\n    ChordType,\n    RatioChordType,\n    TailType,\n    PitchType,\n    PitchRatioType,\n    PitchCentsType,\n    PitchHzType,\n    PitchOctaveDivisionType,\n    PitchDegreeType,\n    PitchGroupScaleType,\n    EdoScaleType,\n    RatioChordScaleType,\n    RatioChordPitchType,\n    HoldType,\n    RestType,\n    SetterGroupType,\n    SetterType,\n    SetSubdivisionType,\n    SetBpmType,\n    SetBmsType,\n    SetRootType,\n    SetOscType,\n    SetEnvType,\n    SetPrimesType,\n    SetRulerRangeType,\n    DelimiterType,\n} from \"./grammar\";\n\nimport type {\n    MoscScore,\n    MoscItem,\n    MoscNote,\n    MoscNoteMs,\n    MoscTempo,\n    MoscParam,\n    MoscEnd,\n} from \"@xenpaper/mosc\";\n\nimport {\n    centsToRatio,\n    octaveDivisionToRatio,\n    timeToMs,\n    ratioToCents,\n} from \"@xenpaper/mosc\";\n\n//\n// utils\n//\n\nconst limit = (name: string, value: number, min: number, max: number): void => {\n    if (value < min || value > max) {\n        throw new Error(\n            `${name} must be between ${min} and ${max}, got ${value}`\n        );\n    }\n};\n\n/**\n * An arbitrarily long list of primes so that prime decomposition of ratios can happen more efficiently.\n * Hope that no one uses anything more than 6691-limit just intonation.\n */\nconst LIST_OF_PRIMES: number[] = [\n    2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89,\n    97, 101, 103, 107, 109, 113, 127, 131, 137, 139, 149, 151, 157, 163, 167, 173, 179, 181, 191,\n    193, 197, 199, 211, 223, 227, 229, 233, 239, 241, 251, 257, 263, 269, 271, 277, 281, 283, 293,\n    307, 311, 313, 317, 331, 337, 347, 349, 353, 359, 367, 373, 379, 383, 389, 397, 401, 409, 419,\n    421, 431, 433, 439, 443, 449, 457, 461, 463, 467, 479, 487, 491, 499, 503, 509, 521, 523, 541,\n    547, 557, 563, 569, 571, 577, 587, 593, 599, 601, 607, 613, 617, 619, 631, 641, 643, 647, 653,\n    659, 661, 673, 677, 683, 691, 701, 709, 719, 727, 733, 739, 743, 751, 757, 761, 769, 773, 787,\n    797, 809, 811, 821, 823, 827, 829, 839, 853, 857, 859, 863, 877, 881, 883, 887, 907, 911, 919,\n    929, 937, 941, 947, 953, 967, 971, 977, 983, 991, 997, 1009, 1013, 1019, 1021, 1031, 1033, 1039, 1049,\n    1051, 1061, 1063, 1069, 1087, 1091, 1093, 1097, 1103, 1109, 1117, 1123, 1129, 1151, 1153, 1163, 1171, 1181, 1187, 1193,\n    1201, 1213, 1217, 1223, 1229, 1231, 1237, 1249, 1259, 1277, 1279, 1283, 1289, 1291, 1297, 1301, 1303, 1307, 1319, 1321,\n    1327, 1361, 1367, 1373, 1381, 1399, 1409, 1423, 1427, 1429, 1433, 1439, 1447, 1451, 1453, 1459, 1471, 1481, 1483, 1487,\n    1489, 1493, 1499, 1511, 1523, 1531, 1543, 1549, 1553, 1559, 1567, 1571, 1579, 1583, 1597, 1601, 1607, 1609, 1613, 1619,\n    1621, 1627, 1637, 1657, 1663, 1667, 1669, 1693, 1697, 1699, 1709, 1721, 1723, 1733, 1741, 1747, 1753, 1759, 1777, 1783,\n    1787, 1789, 1801, 1811, 1823, 1831, 1847, 1861, 1867, 1871, 1873, 1877, 1879, 1889, 1901, 1907, 1913, 1931, 1933, 1949,\n    1951, 1973, 1979, 1987, 1993, 1997, 1999, 2003, 2011, 2017, 2027, 2029, 2039, 2053, 2063, 2069, 2081, 2083, 2087, 2089,\n    2099, 2111, 2113, 2129, 2131, 2137, 2141, 2143, 2153, 2161, 2179, 2203, 2207, 2213, 2221, 2237, 2239, 2243, 2251, 2267,\n    2269, 2273, 2281, 2287, 2293, 2297, 2309, 2311, 2333, 2339, 2341, 2347, 2351, 2357, 2371, 2377, 2381, 2383, 2389, 2393,\n    2399, 2411, 2417, 2423, 2437, 2441, 2447, 2459, 2467, 2473, 2477, 2503, 2521, 2531, 2539, 2543, 2549, 2551, 2557, 2579,\n    2591, 2593, 2609, 2617, 2621, 2633, 2647, 2657, 2659, 2663, 2671, 2677, 2683, 2687, 2689, 2693, 2699, 2707, 2711, 2713,\n    2719, 2729, 2731, 2741, 2749, 2753, 2767, 2777, 2789, 2791, 2797, 2801, 2803, 2819, 2833, 2837, 2843, 2851, 2857, 2861,\n    2879, 2887, 2897, 2903, 2909, 2917, 2927, 2939, 2953, 2957, 2963, 2969, 2971, 2999, 3001, 3011, 3019, 3023, 3037, 3041,\n    3049, 3061, 3067, 3079, 3083, 3089, 3109, 3119, 3121, 3137, 3163, 3167, 3169, 3181, 3187, 3191, 3203, 3209, 3217, 3221,\n    3229, 3251, 3253, 3257, 3259, 3271, 3299, 3301, 3307, 3313, 3319, 3323, 3329, 3331, 3343, 3347, 3359, 3361, 3371, 3373,\n    3389, 3391, 3407, 3413, 3433, 3449, 3457, 3461, 3463, 3467, 3469, 3491, 3499, 3511, 3517, 3527, 3529, 3533, 3539, 3541,\n    3547, 3557, 3559, 3571, 3581, 3583, 3593, 3607, 3613, 3617, 3623, 3631, 3637, 3643, 3659, 3671, 3673, 3677, 3691, 3697,\n    3701, 3709, 3719, 3727, 3733, 3739, 3761, 3767, 3769, 3779, 3793, 3797, 3803, 3821, 3823, 3833, 3847, 3851, 3853, 3863,\n    3877, 3881, 3889, 3907, 3911, 3917, 3919, 3923, 3929, 3931, 3943, 3947, 3967, 3989, 4001, 4003, 4007, 4013, 4019, 4021,\n    4027, 4049, 4051, 4057, 4073, 4079, 4091, 4093, 4099, 4111, 4127, 4129, 4133, 4139, 4153, 4157, 4159, 4177, 4201, 4211,\n    4217, 4219, 4229, 4231, 4241, 4243, 4253, 4259, 4261, 4271, 4273, 4283, 4289, 4297, 4327, 4337, 4339, 4349, 4357, 4363,\n    4373, 4391, 4397, 4409, 4421, 4423, 4441, 4447, 4451, 4457, 4463, 4481, 4483, 4493, 4507, 4513, 4517, 4519, 4523, 4547,\n    4549, 4561, 4567, 4583, 4591, 4597, 4603, 4621, 4637, 4639, 4643, 4649, 4651, 4657, 4663, 4673, 4679, 4691, 4703, 4721,\n    4723, 4729, 4733, 4751, 4759, 4783, 4787, 4789, 4793, 4799, 4801, 4813, 4817, 4831, 4861, 4871, 4877, 4889, 4903, 4909,\n    4919, 4931, 4933, 4937, 4943, 4951, 4957, 4967, 4969, 4973, 4987, 4993, 4999, 5003, 5009, 5011, 5021, 5023, 5039, 5051,\n    5059, 5077, 5081, 5087, 5099, 5101, 5107, 5113, 5119, 5147, 5153, 5167, 5171, 5179, 5189, 5197, 5209, 5227, 5231, 5233,\n    5237, 5261, 5273, 5279, 5281, 5297, 5303, 5309, 5323, 5333, 5347, 5351, 5381, 5387, 5393, 5399, 5407, 5413, 5417, 5419,\n    5431, 5437, 5441, 5443, 5449, 5471, 5477, 5479, 5483, 5501, 5503, 5507, 5519, 5521, 5527, 5531, 5557, 5563, 5569, 5573,\n    5581, 5591, 5623, 5639, 5641, 5647, 5651, 5653, 5657, 5659, 5669, 5683, 5689, 5693, 5701, 5711, 5717, 5737, 5741, 5743,\n    5749, 5779, 5783, 5791, 5801, 5807, 5813, 5821, 5827, 5839, 5843, 5849, 5851, 5857, 5861, 5867, 5869, 5879, 5881, 5897,\n    5903, 5923, 5927, 5939, 5953, 5981, 5987, 6007, 6011, 6029, 6037, 6043, 6047, 6053, 6067, 6073, 6079, 6089, 6091, 6101,\n    6113, 6121, 6131, 6133, 6143, 6151, 6163, 6173, 6197, 6199, 6203, 6211, 6217, 6221, 6229, 6247, 6257, 6263, 6269, 6271,\n    6277, 6287, 6299, 6301, 6311, 6317, 6323, 6329, 6337, 6343, 6353, 6359, 6361, 6367, 6373, 6379, 6389, 6397, 6421, 6427,\n    6449, 6451, 6469, 6473, 6481, 6491, 6521, 6529, 6547, 6551, 6553, 6563, 6569, 6571, 6577, 6581, 6599, 6607, 6619, 6637,\n    6653, 6659, 6661, 6673, 6679, 6689, 6691\n];\n\n/**\n * Prime factorizes `n` to positive/zero integer powers of consecutive primes.\n * @param n The number to factorize\n * @returns [a, b, c, ...] where 2^a * 3^b * 5^c * ... is the factorization of `n`,\n *          or null if the number contains primes that are too large.\n */\nconst primeFactorize = (n: number): number[] | null => {\n    const factors: number[] = [];\n    // note: every = forEach, but breaks when false is returned.\n    LIST_OF_PRIMES.every(p => {\n        let power = 0;\n\n        while (n % p === 0) {\n            power++;\n            n /= p;\n        }\n        factors.push(power);\n        return n > 1; // break if n is 1\n    });\n    if (n > 1) {\n        // null return if number is above 6691 prime limit.\n        return null;\n    }\n    return factors;\n}\n\n/**\n * Converts a (numerator, denominator) tuple to an actual relative pitch ratio float,\n * taking into account the `context.primesTuning`.\n * @param num\n * @param denom\n * @param context\n */\nconst realizeRatio = (num: number, denom: number, context: Context): number => {\n    if (num == 0 || denom == 0) {\n        throw new Error(`Invalid ratio: ${num}/${denom}. Numerator/denominator cannot be 0.`);\n    }\n\n    const num_factors = primeFactorize(num);\n    const denom_factors = primeFactorize(denom);\n\n    let ratio = 1.0;\n\n    if (num_factors == null || denom_factors == null) {\n        console.warn(`WARN xenpaper: ratio ${num}/${denom} is too high prime-limit to factorize, ignoring context.primesTuning`);\n        return num / denom;\n    }\n    num_factors.forEach((power, i) => {\n        if (context.primesTuning.length > i) {\n            ratio *= Math.pow(context.primesTuning[i], power);\n        } else {\n            ratio *= Math.pow(LIST_OF_PRIMES[i], power);\n        }\n    });\n    denom_factors.forEach((power, i) => {\n        if (context.primesTuning.length > i) {\n            ratio /= Math.pow(context.primesTuning[i], power);\n        } else {\n            ratio /= Math.pow(LIST_OF_PRIMES[i], power);\n        }\n    });\n    return ratio;\n}\n\n/**\n * Converts PitchType object to pitch ratio.\n *\n * If an absolute PitchHz is specified, it is taken to be a ratio with\n * respect to the current value of `context.rootHz`\n * @param pitch The PitchType to convert\n * @param context global context object\n * @returns `pitch` as a relative ratio (float)\n */\n\nexport const pitchToRatio = (pitch: PitchType, context: Context): number => {\n    const { scale, octaveSize } = context;\n    limit(\"Equave size\", octaveSize, -20, 20);\n\n    const { type } = pitch.value;\n    const octaveMulti = Math.pow(octaveSize, pitch?.octave?.octave || 0);\n\n    if (type === \"PitchRatio\") {\n        const { numerator, denominator } = pitch.value as PitchRatioType;\n        const ratio = realizeRatio(numerator, denominator, context);\n        limit(\"Pitch ratio\", ratio, 0, 100);\n        return ratio * octaveMulti;\n    }\n\n    if (type === \"PitchCents\") {\n        const { cents } = pitch.value as PitchCentsType;\n        limit(\"Cents\", cents, -12000, 12000);\n        return centsToRatio(cents) * octaveMulti;\n    }\n\n    if (type === \"PitchOctaveDivision\") {\n        const { numerator: steps, denominator: stepsInOctave, octaveSize } =\n            pitch.value as PitchOctaveDivisionType;\n        return (\n            octaveDivisionToRatio(steps, stepsInOctave, octaveSize) *\n            octaveMulti\n        );\n    }\n\n    if (type === \"PitchDegree\") {\n        const { degree } = pitch.value as PitchDegreeType;\n        return pitchDegreeToRatio(degree, scale, octaveSize) * octaveMulti;\n    }\n\n    if (type === \"PitchHz\") {\n        const { hz } = pitch.value as PitchHzType;\n        limit(\"Hz\", hz, 0, 20000);\n        return hz / context.rootHz * octaveMulti;\n    }\n\n    throw new Error(`Unknown pitch type \"${type}\"`);\n};\n\nconst edoToRatios = (edoSize: number, octaveSize: number): number[] => {\n    const ratios: number[] = [];\n    for (let i = 0; i < edoSize; i++) {\n        ratios.push(octaveDivisionToRatio(i, edoSize, octaveSize));\n    }\n    return ratios;\n};\n\nconst pitchDegreeWrap = (degree: number, scale: number[]): [number, number] => {\n    limit(\"Scale degree\", degree, -1000, 1000);\n\n    const steps = scale.length;\n    let octave = 0;\n\n    while (degree >= steps && octave > -20) {\n        degree -= steps;\n        octave++;\n    }\n    while (degree < 0 && octave < 20) {\n        degree += steps;\n        octave--;\n    }\n\n    return [degree, octave];\n};\n\nconst pitchDegreeToRatio = (\n    degree: number,\n    scale: number[],\n    octaveSize: number\n): number => {\n    limit(\"Equave size\", octaveSize, -20, 20);\n\n    if (scale.length === 0) {\n        return 1;\n    }\n\n    const [wrappedDegree, octave] = pitchDegreeWrap(degree, scale);\n    return scale[wrappedDegree] * Math.pow(octaveSize, octave);\n};\n\nconst pitchToHz = (pitch: PitchType, context: Context): number => {\n    if (pitch.value.type === \"PitchHz\") {\n        const octaveMulti = Math.pow(\n            context.octaveSize,\n            pitch?.octave?.octave || 0\n        );\n        const hz = (pitch.value as PitchHzType).hz * octaveMulti;\n        limit(\"Hz\", hz, 0, 20000);\n        return hz;\n    }\n    return pitchToRatio(pitch, context) * context.rootHz;\n};\n\nconst tailToTime = (\n    tail: TailType | undefined,\n    context: Context\n): { time: number; timeEnd: number } => {\n    const time = context.time;\n\n    const duration =\n        tail && tail.type === \"Hold\" ? (tail as HoldType).length + 1 : 1;\n\n    context.time += duration * context.subdivision;\n    const timeEnd = context.time;\n\n    return {\n        time,\n        timeEnd,\n    };\n};\n\n//\n// labels\n//\n\nconst ratioWrap = (ratio: number, octaveSize: number): number => {\n    // This number represents the interval ratio as a linear multiple of n equaves\n    let ratioInEquaves = Math.log2(ratio) / Math.log2(octaveSize);\n    // Ensure that the returned result falls within 1:1 (inclusive) and equave (exclusive)\n    return ratio * Math.pow(octaveSize, -Math.floor(ratioInEquaves));\n};\n\nconst ratioToCentsLabel = (ratio: number, octaveSize: number): string => {\n    return `${ratioToCents(ratioWrap(ratio, octaveSize)).toFixed(1)}c`;\n};\n\nexport const pitchToLabel = (pitch: PitchType, context: Context): string => {\n    const { type } = pitch.value;\n\n    if (type === \"PitchHz\") {\n        const { hz } = pitch.value as PitchHzType;\n        return `${hz}Hz`;\n    }\n\n    if (type === \"PitchCents\") {\n        const { cents } = pitch.value as PitchCentsType;\n        return `${cents}c`;\n    }\n\n    const centsLabel = ratioToCentsLabel(\n        pitchToRatio(pitch, context),\n        context.octaveSize\n    );\n\n    if (type === \"PitchRatio\") {\n        const { numerator, denominator } = pitch.value as PitchRatioType;\n        return `${numerator}/${denominator}  ${centsLabel}`;\n    }\n\n    if (type === \"PitchOctaveDivision\") {\n        const { numerator, denominator } =\n            pitch.value as PitchOctaveDivisionType;\n        return `${numerator}\\\\${denominator}  ${centsLabel}`;\n    }\n\n    if (type === \"PitchDegree\") {\n        const { degree } = pitch.value as PitchDegreeType;\n        const [wrappedDegree] = pitchDegreeWrap(degree, context.scale);\n        return context.scaleLabels[wrappedDegree];\n    }\n\n    throw new Error(`Unknown pitch type \"${type}\"`);\n};\n\nconst edoToLabels = (\n    edoSize: number,\n    ratios: number[],\n    octaveSize: number\n): string[] => {\n    const labels: string[] = [];\n    for (let i = 0; i < edoSize; i++) {\n        const centsLabel = ratioToCentsLabel(ratios[i], octaveSize);\n        labels.push(`${i}\\\\${edoSize}  ${centsLabel}`);\n    }\n    return labels;\n};\n\n//\n// converters\n//\n\nconst ENV_VALUES = [0, 0.003, 0.006, 0.01, 0.033, 0.1, 0.33, 1, 3.3, 10];\n\ntype Context = {\n    rootHz: number;\n    time: number;\n    subdivision: number;\n    scale: number[];\n    scaleLabels: string[];\n    octaveSize: number;\n    /**\n     * The relative tuning of each prime as a ratio of the root 1/1\n     * Only used when calculating freq of PitchRatios.\n     *\n     * e.g. if primesTuning == [2, 3, 5, 7, 11],\n     * the PitchRatio 5/4 will be rendered as per normal.\n     *\n     * However, if primesTuning == [2, 2^(18/31), 2^(41/31)],\n     * the PitchRatio 5/4 will be tuned to that of 31 edo.\n     *\n     * If a prime used in a PitchRatio uses a prime that is above the highest\n     * defined prime in the prime tuning array, it would default to the original prime value.\n     *\n     * e.g.: if primesTuning = [2, 2^(7/12)],\n     * the PitchRatio 5/3 will be tuned like so:\n     * - Down a 12edo perfect fifth and an octave\n     * - Up a justly tuned 5th harmonic (since the prime 5 is not defined)\n     */\n    primesTuning: number[];\n};\n\nconst times: [number, number][] = [];\n\nconst noteToMosc = (note: NoteType, context: Context): MoscNote[] => {\n    const timeProps = tailToTime(note.tail, context);\n\n    // mutate ast node to add time\n    const arr: [number, number] = [timeProps.time, timeProps.timeEnd];\n    times.push(arr);\n    note.time = arr;\n\n    const hz = pitchToHz(note.pitch, context);\n\n    if (typeof(hz) != \"number\" || hz < 0) {\n        throw new Error(`Invalid frequency found: ${hz}`);\n    }\n    const label = pitchToLabel(note.pitch, context);\n\n    return [\n        {\n            type: \"NOTE_TIME\",\n            hz,\n            label,\n            ...timeProps,\n        },\n    ];\n};\n\nconst chordToMosc = (\n    chord: ChordType | RatioChordType,\n    context: Context\n): MoscNote[] => {\n    const { tail, pitches } = chord;\n    const timeProps = tailToTime(tail, context);\n\n    // mutate ast node to add time\n    const arr: [number, number] = [timeProps.time, timeProps.timeEnd];\n    times.push(arr);\n    chord.time = arr;\n\n    const pitchTypes: MoscNote[] = pitches\n        .filter((pitch): pitch is PitchType => pitch.type === \"Pitch\")\n        .map((pitch: any) => {\n            const hz = pitchToHz(pitch as PitchType, context);\n            const label = pitchToLabel(pitch as PitchType, context);\n\n            return {\n                type: \"NOTE_TIME\",\n                hz,\n                label,\n                ...timeProps,\n            };\n        });\n\n    const firstRatioPitch = pitches.find(\n        (pitch: PitchType | RatioChordPitchType | DelimiterType) => {\n            return pitch.type === \"RatioChordPitch\";\n        }\n    ) as RatioChordPitchType | undefined;\n\n    const firstDenominator = (firstRatioPitch as RatioChordPitchType)?.pitch;\n\n    if (firstDenominator <= 0) {\n        throw new Error(`Chords cannot contain a ratio of ${firstDenominator}`);\n    }\n\n    const ratioPitchTypes: MoscNote[] = [];\n    const addRatioPitchType = (numerator: number): void => {\n        ratioPitchTypes.push({\n            type: \"NOTE_TIME\",\n            hz: realizeRatio(numerator, firstDenominator, context) * context.rootHz,\n            label: `${numerator}/${firstDenominator}  ${ratioToCentsLabel(\n                numerator / firstDenominator,\n                context.octaveSize\n            )}`,\n            ...timeProps,\n        });\n    };\n\n    let colons = 0;\n    let lastNumerator = 1;\n    pitches.forEach((pitch: any) => {\n        if (pitch.type === \"RatioChordPitch\") {\n            const numerator = (pitch as RatioChordPitchType).pitch;\n            if (numerator <= 0) {\n                throw new Error(\n                    `Chords cannot contain a ratio of ${numerator}`\n                );\n            }\n\n            if (colons == 2) {\n                while (lastNumerator < numerator - 1) {\n                    lastNumerator++;\n                    addRatioPitchType(lastNumerator);\n                }\n            }\n\n            addRatioPitchType(numerator);\n            lastNumerator = numerator;\n            colons = 0;\n            return;\n        }\n        if (pitch.type === \"Colon\") {\n            colons++;\n        }\n    });\n\n    return pitchTypes.concat(ratioPitchTypes);\n};\n\nconst setScale = (setScale: SetScaleType, context: Context): void => {\n    const { scale } = setScale;\n    const { type } = scale;\n    if (type === \"PitchGroupScale\") {\n        const { pitches, scaleOctaveMarker, pitchGroupScalePrefix } =\n            scale as PitchGroupScaleType;\n\n        let filteredPitches: PitchType[] = pitches.filter(\n            (pitch): pitch is PitchType => !pitch.delimiter\n        ) as PitchType[];\n\n        if (pitchGroupScalePrefix && pitchGroupScalePrefix.prefix === \"m\") {\n            const degreePitches: PitchDegreeType[] = [\n                {\n                    type: \"PitchDegree\",\n                    degree: 0,\n                    delimiter: false,\n                    pos: pitchGroupScalePrefix.pos,\n                    len: 0,\n                },\n            ];\n\n            let degree = 0;\n            filteredPitches.forEach((pitch) => {\n                if (pitch.value.type !== \"PitchDegree\") {\n                    throw new Error(\n                        \"Mode scales {m} should only contain pitch degrees (0, 1, etc), not ratios, hz or any other kind of pitch\"\n                    );\n                }\n                degree += (pitch.value as PitchDegreeType).degree;\n\n                degreePitches.push({\n                    ...pitch.value,\n                    degree,\n                });\n            });\n\n            degreePitches.pop(); // ignore last degree which is assumed to complete the octave\n            filteredPitches = degreePitches.map((value) => ({\n                value,\n            })) as PitchType[];\n        }\n\n        context.scale = filteredPitches.map((pitch) =>\n            pitchToRatio(pitch, context)\n        );\n        context.scaleLabels = filteredPitches.map((pitch) =>\n            pitchToLabel(pitch, context)\n        );\n\n        if (scaleOctaveMarker) {\n            context.octaveSize = context.scale.pop() || 2;\n            context.scaleLabels.pop();\n        }\n\n        return;\n    }\n\n    if (type === \"EdoScale\") {\n        const { divisions, octaveSize } = scale as EdoScaleType;\n        context.scale = edoToRatios(divisions, octaveSize);\n        context.scaleLabels = edoToLabels(divisions, context.scale, octaveSize);\n        context.octaveSize = octaveSize;\n        return;\n    }\n\n    if (type === \"RatioChordScale\") {\n        const { pitches, scaleOctaveMarker } = scale as RatioChordScaleType;\n\n        context.scale = [];\n        context.scaleLabels = [];\n\n        let firstDenominator = -1;\n        let colons = 0;\n        let lastNumerator = 0;\n\n        const addRatio = (numerator: number): void => {\n            const ratio = realizeRatio(numerator, firstDenominator, context);\n            context.scale.push(ratio);\n            const centsLabel = ratioToCentsLabel(ratio, 2);\n            context.scaleLabels.push(\n                `${numerator}/${firstDenominator}  ${centsLabel}`\n            );\n        };\n\n        pitches.forEach((pitch) => {\n            if (pitch.delimiter) {\n                colons++;\n                return;\n            }\n\n            const numerator = pitch.pitch;\n            if (firstDenominator === -1) {\n                firstDenominator = numerator;\n            }\n\n            if (colons === 2) {\n                while (lastNumerator < numerator - 1) {\n                    lastNumerator++;\n                    addRatio(lastNumerator);\n                }\n            }\n\n            addRatio(numerator);\n            lastNumerator = numerator;\n            colons = 0;\n        });\n\n        if (scaleOctaveMarker) {\n            context.octaveSize = context.scale.pop() || 2;\n            context.scaleLabels.pop();\n        }\n\n        return;\n    }\n\n    throw new Error(`Unknown scale type \"${type}\"`);\n};\n\nconst setPrimes = (setPrimes: SetPrimesType, context: Context): void => {\n    const { primesPitches } = setPrimes;\n\n    let filteredPitches: PitchType[] = primesPitches.filter(\n        (pitch): pitch is PitchType => !pitch.delimiter\n    ) as PitchType[];\n\n    context.primesTuning = filteredPitches.map(pitch =>\n        pitchToRatio(pitch, context)\n    );\n}\n\nconst setterToMosc = (setter: SetterType, context: Context): MoscItem[] => {\n    const { type, delimiter } = setter;\n\n    if (delimiter) return [];\n\n    if (type === \"SetBpm\") {\n        const { bpm } = setter as SetBpmType;\n        return [\n            {\n                type: \"TEMPO\",\n                time: context.time,\n                bpm,\n                lerp: false,\n            },\n        ];\n    }\n\n    if (type === \"SetBms\") {\n        const { bms } = setter as SetBmsType;\n        return [\n            {\n                type: \"TEMPO\",\n                time: context.time,\n                bpm: 60000 / bms,\n                lerp: false,\n            },\n        ];\n    }\n\n    if (type === \"SetSubdivision\") {\n        const { subdivision, denominator } = setter as SetSubdivisionType;\n        context.subdivision = (denominator ?? 1) / subdivision;\n        return [];\n    }\n\n    if (type === \"SetOsc\") {\n        const { osc } = setter as SetOscType;\n        return [\n            {\n                type: \"PARAM_TIME\",\n                time: context.time,\n                value: {\n                    type: \"osc\",\n                    osc,\n                },\n            },\n        ];\n    }\n\n    if (type === \"SetEnv\") {\n        const { a, d, s, r } = setter as SetEnvType;\n        return [\n            {\n                type: \"PARAM_TIME\",\n                time: context.time,\n                value: {\n                    type: \"env\",\n                    a: ENV_VALUES[a] || 0,\n                    d: ENV_VALUES[d] || 0,\n                    s: s / 9,\n                    r: ENV_VALUES[r] || 0,\n                },\n            },\n        ];\n    }\n\n    return [];\n};\n\nconst rulerStateCaptureRootHz = (\n    initial: InitialRulerState,\n    context: Context\n): InitialRulerState => {\n    if (initial.rootHz) {\n        return initial;\n    }\n    return {\n        ...initial,\n        rootHz: context.rootHz,\n        octaveSize: context.octaveSize,\n    };\n};\n\nexport type InitialRulerState = {\n    lowHz?: number;\n    highHz?: number;\n    rootHz?: number;\n    octaveSize?: number;\n    plots: MoscNoteMs[][];\n};\n\nconst setterToRulerState = (\n    initial: InitialRulerState,\n    setter: SetterType,\n    context: Context\n): InitialRulerState => {\n    const { type, delimiter } = setter;\n\n    if (delimiter) return initial;\n\n    if (type === \"SetRulerPlot\") {\n        const newPlot = context.scale.map(\n            (ratio, i): MoscNoteMs => ({\n                type: \"NOTE_MS\",\n                ms: context.time,\n                msEnd: context.time,\n                hz: ratio * context.rootHz,\n                label: context.scaleLabels[i],\n            })\n        );\n\n        return {\n            ...initial,\n            plots: [...initial.plots, newPlot],\n        };\n    }\n\n    if (type === \"SetRulerRange\") {\n        if (initial.lowHz) {\n            return initial;\n        }\n\n        const { low, high } = setter as SetRulerRangeType;\n        return {\n            ...initial,\n            lowHz: pitchToHz(low, context),\n            highHz: pitchToHz(high, context),\n        };\n    }\n\n    return initial;\n};\n\nexport type Processed = {\n    score?: MoscScore;\n    initialRulerState?: InitialRulerState;\n};\n\nexport const processGrammar = (grammar: XenpaperAST): Processed => {\n    // console.log('grammar', JSON.stringify(grammar));\n\n    const grammarSequence = grammar.sequence;\n    if (!grammarSequence) {\n        return {};\n    }\n\n    const INITIAL_TEMPO: MoscTempo = {\n        type: \"TEMPO\",\n        time: 0,\n        bpm: 120,\n        lerp: false,\n    };\n\n    const INITIAL_OSC: MoscParam = {\n        type: \"PARAM_TIME\",\n        time: 0,\n        value: {\n            type: \"osc\",\n            osc: \"triangle\",\n        },\n    };\n\n    const INITIAL_ENV: MoscParam = {\n        type: \"PARAM_TIME\",\n        time: 0,\n        value: {\n            type: \"env\",\n            a: ENV_VALUES[2],\n            d: ENV_VALUES[8],\n            s: 0.5,\n            r: ENV_VALUES[6],\n        },\n    };\n\n    const scale = edoToRatios(12, 2);\n\n    const context: Context = {\n        rootHz: 220,\n        time: 0,\n        subdivision: 0.5,\n        scale,\n        scaleLabels: edoToLabels(12, scale, 2),\n        octaveSize: 2,\n        primesTuning: []\n    };\n\n    const moscItems: MoscItem[] = [];\n    let initialRulerState: InitialRulerState = {\n        plots: [],\n    };\n\n    grammarSequence.items.forEach((item): void => {\n        const { type } = item;\n        if (type === \"Comment\" || type === \"BarLine\" || type === \"Whitespace\") {\n            // do nothing\n            return;\n        }\n\n        if (type === \"SetScale\") {\n            setScale(item as SetScaleType, context);\n            return;\n        }\n\n        if (type === \"SetRoot\") {\n            const { pitch } = item as SetRootType;\n            context.rootHz = pitchToHz(pitch, context);\n            return;\n        }\n\n        if (type === \"Note\") {\n            moscItems.push(...noteToMosc(item as NoteType, context));\n            initialRulerState = rulerStateCaptureRootHz(\n                initialRulerState,\n                context\n            );\n            return;\n        }\n\n        if (type === \"Rest\") {\n            const { time } = context;\n            const rest = item as RestType;\n            context.time += rest.length * context.subdivision;\n            // mutate ast node to add time\n            const arr: [number, number] = [time, context.time];\n            times.push(arr);\n            rest.time = arr;\n            return;\n        }\n\n        if (type === \"Chord\") {\n            moscItems.push(...chordToMosc(item as ChordType, context));\n            return;\n        }\n\n        if (type === \"RatioChord\") {\n            moscItems.push(...chordToMosc(item as RatioChordType, context));\n            initialRulerState = rulerStateCaptureRootHz(\n                initialRulerState,\n                context\n            );\n            return;\n        }\n\n        if (type === \"SetterGroup\") {\n            (item as SetterGroupType).setters.forEach((setter) => {\n                moscItems.push(...setterToMosc(setter, context));\n                initialRulerState = setterToRulerState(\n                    initialRulerState,\n                    setter,\n                    context\n                );\n\n                // SetPrimes object is part of SetterGroup\n                if (setter.type === \"SetPrimes\") {\n                    setPrimes(setter as SetPrimesType, context);\n                    return;\n                }\n            });\n            return;\n        }\n\n        throw new Error(`Unknown sequence item \"${type}\"`);\n    });\n\n    initialRulerState = rulerStateCaptureRootHz(initialRulerState, context);\n\n    const sequence = [\n        INITIAL_TEMPO,\n        INITIAL_OSC,\n        INITIAL_ENV,\n        ...moscItems,\n        {\n            type: \"END_TIME\",\n            time: context.time,\n        } as MoscEnd,\n    ];\n\n    // translate times from steps to ms\n    const thisTimeToMs = timeToMs(sequence);\n\n    // omg are we really mutating many time items throughout the AST tree via mutations? golly!\n    times.forEach((time) => {\n        time[0] = thisTimeToMs(time[0]);\n        time[1] = thisTimeToMs(time[1]);\n    });\n\n    const score = {\n        sequence,\n        lengthTime: context.time,\n    };\n\n    return {\n        score,\n        initialRulerState,\n    };\n};\n","import {useState, useCallback, useEffect} from 'react';\n\nexport const hashify = (newHash: string): string => {\n    return encodeURIComponent(newHash)\n        .replace(/_/g, '%_')\n        .replace(/%20/g, '_');\n};\n\nconst reverseString = (str: string): string => {\n    return str\n        .split('')\n        .reverse()\n        .join('');\n};\n\nexport const unhashify = (hash: string): string => {\n    return decodeURIComponent(\n        // browser support for negaitve lookbehinds is patchy\n        // and we want to replace all _ that arent preceded by % with %20\n        // so reverse the string, replace with a negative lookahead (well supported) and reverse again\n        reverseString(\n            reverseString(hash).replace(/_(?!%)/g, reverseString('%20'))\n        ).replace(/%_/g, '_')\n    );\n};\n\ntype UseHashResult = readonly [string, (newHash: string) => void];\n\nexport const useHash = (): UseHashResult => {\n    const [hash, setHash] = useState(() => {\n        let initialHash = unhashify(window.location.hash.substr(1));\n        if(!initialHash && window.localStorage) {\n            initialHash = window.localStorage.getItem('lasttune') ?? '';\n        }\n        return initialHash;\n    });\n\n    const onHashChange = useCallback(() => {\n        setHash(window.location.hash);\n    }, []);\n\n    useEffect(() => {\n        window.addEventListener('hashchange', onHashChange);\n        return () => {\n            window.removeEventListener('hashchange', onHashChange);\n        };\n    }, [onHashChange]);\n\n    const _setHash = useCallback((newHash: string) => {\n        const newHashEncoded = hashify(newHash);\n        if (newHashEncoded !== hash) {\n            // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n            // @ts-ignore\n            window.history.replaceState(undefined, undefined, '#' + newHashEncoded);\n            window.localStorage?.setItem('lasttune', newHash);\n        }\n    }, [hash]);\n\n    return [hash, _setHash] as const;\n};\n","import {useState, useEffect} from 'react';\n\nconst windowLoadPromise = new Promise(resolve => {\n    const handleLoad = () => {\n        window.removeEventListener('load', handleLoad);\n        resolve(null);\n    };\n    window.addEventListener('load', handleLoad);\n});\n\nexport const useWindowLoaded = (): boolean => {\n\n    const [loaded, setLoaded] = useState(false);\n\n    useEffect(() => {\n        (async () => {\n            await windowLoadPromise;\n            await (document as any).fonts.ready;\n            setLoaded(true);\n        })();\n    }, []);\n\n    return loaded;\n};\n","import type {MoscScoreMs, MoscNoteMs, MoscItemMs, MoscParamMs, MoscEndMs} from '@xenpaper/mosc';\nimport {SoundEngine, scoreToMs} from '@xenpaper/mosc';\nimport * as Tone from 'tone';\n\n//\n// utils\n//\n\nfunction flatMap<I,O>(arr: I[], mapper: (item: I) => O[]): O[] {\n    const out: O[] = [];\n    arr.forEach(item => out.push(...mapper(item)));\n    return out;\n}\n\n//\n// consts\n//\n\nconst OSC_VOLUME = -18;\n\nexport const OSC_BASE_TYPES = [\n    'sine',\n    'sawtooth',\n    'square',\n    'triangle'\n];\n\nexport let OSC_PARTIAL_SUFFIXES: string[] = [];\nfor(let i = 1; i < 33; i++) {\n    OSC_PARTIAL_SUFFIXES.push(`${i}`);\n}\n\nexport const OSC_TYPES_EXPANDED = flatMap(OSC_BASE_TYPES, base => [\n    base,\n    `fm${base}`,\n    `am${base}`,\n    `fat${base}`\n]);\n\nexport const OSC_TYPES = flatMap(OSC_TYPES_EXPANDED, type => [\n    type,\n    ...OSC_PARTIAL_SUFFIXES.map(suffix => `${type}${suffix}`)\n]);\n\nexport class SoundEngineTonejs extends SoundEngine {\n\n    _started = false;\n    _endMs = 0;\n    _loopEndMs = 0;\n    _activeNoteEvents = new Set<MoscItemMs>();\n\n    synth = new Tone.PolySynth(Tone.Synth, {\n        oscillator: {\n            type: 'sine',\n            volume: OSC_VOLUME\n        },\n        envelope: {\n            attack: 0.01,\n            sustain: 0.5,\n            decay: 0.25,\n            release: 0.5\n        }\n    }).chain(Tone.Destination);\n\n    playing(): boolean {\n        return Tone.Transport.state === 'started';\n    }\n\n    looping(): boolean {\n        return Tone.Transport.loop;\n    }\n\n    position(): number {\n        return Tone.Transport.seconds * 1000;\n    }\n\n    endPosition(): number {\n        return this._endMs;\n    }\n\n    async start(): Promise<void> {\n        if(!this._started) {\n            await Tone.start();\n            this._started = true;\n\n            const onEnd = () => {\n                this.synth.releaseAll();\n                this._activeNoteEvents.forEach(noteMs => {\n                    this._triggerEvent('note', noteMs, false);\n                });\n                this._activeNoteEvents.clear();\n            };\n\n            Tone.Transport.on('stop', onEnd);\n            Tone.Transport.on('loop', onEnd);\n        }\n    }\n\n    async play(): Promise<void> {\n        await this.start();\n        Tone.Transport.start();\n    }\n\n    async pause(): Promise<void> {\n        await this.start();\n        Tone.Transport.stop();\n    }\n\n    async gotoMs(ms: number): Promise<void> {\n        Tone.Transport.seconds = ms * 0.001;\n    }\n\n    setLoop(loop: boolean, startMs: number = 0, endMs: number = 0): void {\n        this.setLoopActive(loop);\n        this.setLoopStart(startMs);\n        this.setLoopEnd(endMs);\n    }\n\n    setLoopActive(loop: boolean = true): void {\n        Tone.Transport.loop = loop;\n    }\n\n    setLoopStart(ms: number = 0): void {\n        Tone.Transport.loopStart = ms * 0.001;\n    }\n\n    setLoopEnd(ms: number = 0): void {\n        this._loopEndMs = ms;\n        Tone.Transport.loopEnd = (ms === 0 ? this._endMs : ms) * 0.001;\n    }\n\n    async setScore(scoreMs: MoscScoreMs): Promise<void> {\n        this.scoreMs = scoreMs;\n\n        // clear all previous notes from tone transport\n        Tone.Transport.cancel();\n\n        // add all new notes to tone transport\n        this.scoreMs.sequence.forEach((item: MoscItemMs): void => {\n            if(item.type === 'NOTE_MS') {\n                const noteMs = item as MoscNoteMs;\n                Tone.Transport.schedule((time: number) => {\n                    this.synth.triggerAttackRelease(\n                        noteMs.hz,\n                        (noteMs.msEnd * 0.001) - (noteMs.ms * 0.001),\n                        time\n                    );\n                    this._activeNoteEvents.add(noteMs);\n                    this._triggerEvent('note', noteMs, true);\n                }, noteMs.ms * 0.001 + 0.1); // schedule in the future slightly to avoid double note playing at end\n\n                Tone.Transport.schedule((time: number) => {\n                    this._activeNoteEvents.delete(noteMs);\n                    this._triggerEvent('note', noteMs, false);\n                }, noteMs.msEnd * 0.001 + 0.1);\n\n                return;\n            }\n\n            if(item.type === 'PARAM_MS') {\n                const paramMs = item as MoscParamMs;\n                Tone.Transport.schedule(() => {\n                    // this is inaccurate\n                    // as tonejs calls these callbacks several ms ahead of schedule\n                    // and relies on scheduled events to pass the provided time\n                    // to schedule correctly, but param changes cannot accept\n                    // the time argument\n                    if(paramMs.value.type === 'osc' && OSC_TYPES.includes(paramMs.value.osc)) {\n                        this.synth.set({\n                            oscillator: {\n                                type: paramMs.value.osc,\n                                volume: OSC_VOLUME\n                            }\n                        });\n                    }\n                    if(paramMs.value.type === 'env') {\n                        this.synth.set({\n                            envelope: {\n                                attack: paramMs.value.a,\n                                decay: paramMs.value.d,\n                                sustain: paramMs.value.s,\n                                release: paramMs.value.r\n                            }\n                        });\n                    }\n\n                }, paramMs.ms * 0.001);\n\n                return;\n            }\n\n            if(item.type === 'END_MS') {\n                this._endMs = (item as MoscEndMs).ms;\n                if(this._loopEndMs === 0) {\n                    this.setLoopEnd(0);\n                }\n\n                Tone.Transport.schedule(async () => {\n                    if(Tone.Transport.loop) return;\n\n                    Tone.Transport.stop();\n                    this._triggerEvent('end', undefined);\n                }, this._endMs * 0.001);\n\n                return;\n            }\n\n            // @ts-ignore\n            throw new Error(`Unexpected item type ${item.type} encountered`);\n        });\n    }\n}\n","import React, { useState, useCallback, useEffect } from \"react\";\nimport { AppWrapper } from \"./AppWrapper\";\nimport { IconToggle } from \"./component/IconToggle\";\nimport { Codearea } from \"./component/Codearea\";\nimport { ErrorMessage } from \"./component/ErrorMessage\";\nimport { LoaderPane } from \"./component/LoaderPane\";\nimport { Char } from \"./component/Char\";\nimport { Box, Flex } from \"./layout/Layout\";\nimport { Sidebar, SidebarInfo, SidebarShare, Footer } from \"./Sidebars\";\nimport styled from \"styled-components\";\n\nimport { PitchRuler, useRulerState } from \"./PitchRuler\";\nimport type { RulerState } from \"./PitchRuler\";\n\nimport { XenpaperGrammarParser } from \"./data/grammar\";\nimport type { XenpaperAST, SetterGroupType } from \"./data/grammar\";\n\nimport { grammarToChars } from \"./data/grammar-to-chars\";\nimport { processGrammar } from \"./data/process-grammar\";\nimport type { InitialRulerState } from \"./data/process-grammar\";\nimport type { MoscScore } from \"@xenpaper/mosc\";\nimport type { HighlightColor, CharData } from \"./data/grammar-to-chars\";\n\nimport { useHash, hashify } from \"./hooks/useHash\";\nimport { useWindowLoaded } from \"./hooks/useWindowLoaded\";\n\nimport { useDendriform, useInput } from \"dendriform\";\nimport type { Dendriform } from \"dendriform\";\nimport { setAutoFreeze, enableMapSet } from \"immer\";\nsetAutoFreeze(false); // sadly I am relying on mutations within the xenpaper AST because who cares\nenableMapSet();\n\nimport { scoreToMs } from \"@xenpaper/mosc\";\nimport type { SoundEngine } from \"@xenpaper/mosc\";\nimport { SoundEngineTonejs } from \"@xenpaper/sound-engine-tonejs\";\n\nimport { Helmet } from \"react-helmet\";\n\n//\n// sound engine instance\n//\n\nconst soundEngine: SoundEngine = new SoundEngineTonejs();\n\n//\n// xenpaper ast parsing\n//\n\ntype Parsed = {\n    parsed?: XenpaperAST;\n    chars?: CharData[];\n    score?: MoscScore;\n    initialRulerState?: InitialRulerState;\n    error: string;\n};\n\nconst parse = (unparsed: string): Parsed => {\n    try {\n        const parsed = XenpaperGrammarParser(unparsed);\n        const { score, initialRulerState } = processGrammar(parsed);\n        const chars = grammarToChars(parsed);\n\n        if (score) {\n            const scoreMs = scoreToMs(score);\n            soundEngine.setScore(scoreMs);\n        }\n\n        return {\n            parsed,\n            chars,\n            score,\n            initialRulerState,\n            error: \"\",\n        };\n    } catch (e) {\n        console.log(\"!\", e);\n        const matched = e.message.match(/Unexpected token at (\\d+):(\\d+)/);\n\n        const lineNumber: number = matched ? Number(matched[1]) - 1 : -1;\n        const colNumber: number = matched ? Number(matched[2]) - 1 : -1;\n\n        const chars: CharData[] = [];\n        let lineCount = 0;\n        let colCount = 0;\n        let error;\n        let errorAt;\n\n        for (let i = 0; i < unparsed.length + 40; i++) {\n            if (lineCount === lineNumber && colCount === colNumber) {\n                errorAt = i;\n            }\n            if (unparsed[i] === \"\\n\") {\n                lineCount++;\n                colCount = 0;\n            } else {\n                colCount++;\n            }\n        }\n\n        if (typeof errorAt === \"number\") {\n            error =\n                unparsed[errorAt] !== undefined\n                    ? e.message.replace(\n                          \"Unexpected token \",\n                          `Unexpected token \"${unparsed[errorAt]}\" `\n                      )\n                    : e.message;\n\n            chars[errorAt] = {\n                color: \"error\",\n            };\n        } else {\n            error = e.message;\n        }\n\n        return {\n            parsed: undefined,\n            chars,\n            score: undefined,\n            initialRulerState: undefined,\n            error,\n        };\n    }\n};\n\nconst getMsAtLine = (\n    tune: string,\n    chars: CharData[] | undefined,\n    line: number\n): number => {\n    if (line === 0) {\n        return 0;\n    }\n    let ms = 0;\n    let counted = 0;\n    const tuneSplit = tune.split(\"\");\n    for (let i = 0; i < tuneSplit.length; i++) {\n        const chr = tuneSplit[i];\n        const ch = chars?.[i];\n        const [, end] = ch?.playTime ?? [];\n        if (end !== undefined) {\n            ms = end;\n        }\n        if (chr === \"\\n\") {\n            counted++;\n            if (counted === line) {\n                return ms;\n            }\n        }\n    }\n    return 0;\n};\n\n//\n// icons\n//\n\nconst PLAY_PATHS = {\n    paused: [\"M 0 0 L 12 6 L 0 12 Z\"],\n    playing: [\"M 0 0 L 4 0 L 4 12 L 0 12 Z\", \"M 8 0 L 12 0 L 12 12 L 8 12 Z\"],\n    // stopped: ['M 0 0 L 12 0 L 12 12 L 0 12 Z'],\n};\n\n//\n// application component with loader\n//\n\nexport function Xenpaper(): React.ReactElement {\n    const loaded = useWindowLoaded();\n\n    return (\n        <AppWrapper>\n            <LoaderPane height=\"100vh\" loaded={loaded}>\n                <XenpaperApp loaded={loaded} />\n            </LoaderPane>\n        </AppWrapper>\n    );\n}\n\n//\n// application component\n//\n\nexport type SidebarState = \"info\" | \"share\" | \"ruler\" | \"none\";\n\n// type RealtimeState = {\n//     on: boolean;\n//     activeNotes: number[];\n// };\n\nexport type TuneForm = {\n    tune: string;\n    embed: boolean;\n    hash: string;\n    url: string;\n    urlEmbed: string;\n};\n\ntype Props = {\n    loaded: boolean;\n};\n\nexport function XenpaperApp(props: Props): React.ReactElement {\n    const { loaded } = props;\n\n    //\n    // dendriforms with application state\n    //\n\n    const [hash, setHash] = useHash();\n\n    const tuneForm = useDendriform<TuneForm>(\n        () => {\n            let embed = false;\n            let tune = hash;\n            if (tune.startsWith(\"embed:\")) {\n                embed = true;\n                tune = tune.substr(6);\n            }\n            return {\n                tune,\n                embed,\n                hash: \"\",\n                url: \"\",\n                urlEmbed: \"\",\n            };\n        },\n        { history: 300 }\n    );\n\n    tuneForm.useDerive((newValue) => {\n        let hash = newValue.tune;\n        const hashified = hashify(hash);\n\n        if (newValue.embed) {\n            hash = `embed:${hash}`;\n        }\n\n        const url = `https://xenpaper.com/#${hashified}`;\n        const urlEmbed = `https://xenpaper.com/#embed:${hashified}`;\n\n        tuneForm.branch(\"hash\").set(hash);\n        tuneForm.branch(\"url\").set(url);\n        tuneForm.branch(\"urlEmbed\").set(urlEmbed);\n    });\n\n    tuneForm.branch(\"hash\").useChange((hash) => {\n        setHash(hash);\n    });\n\n    const parsedForm = useDendriform<Parsed>(() => parse(tuneForm.value.tune));\n\n    tuneForm.useDerive((value) => {\n        parsedForm.set(parse(value.tune));\n    });\n\n    //\n    // state syncing between sound engine and react\n    //\n\n    const playing = useDendriform<boolean>(false);\n    const selectedLine = useDendriform<number>(0);\n    selectedLine.useChange((line) => {\n        soundEngine.setLoopStart(\n            getMsAtLine(tuneForm.value.tune, parsedForm.value.chars, line)\n        );\n    });\n\n    useEffect(() => {\n        return soundEngine.onEnd(() => {\n            playing.set(false);\n        });\n    }, []);\n\n    const looping = useDendriform<boolean>(false);\n\n    //\n    // ruler state\n    //\n\n    const rulerState = useRulerState(parsedForm.value.initialRulerState);\n\n    useEffect(() => {\n        return soundEngine.onNote((note, on) => {\n            const id = `${note.ms}-${note.hz}`;\n            rulerState.set((draft) => {\n                if (on) {\n                    draft.notesActive.set(id, note);\n                    draft.notes.set(id, note);\n                } else {\n                    draft.notesActive.delete(id);\n                }\n            });\n        });\n    }, []);\n\n    parsedForm.branch(\"initialRulerState\").useChange((initialRulerState) => {\n        rulerState.set((draft) => {\n            draft.rootHz = initialRulerState?.rootHz;\n            draft.octaveSize = initialRulerState?.octaveSize;\n            draft.plots = initialRulerState?.plots;\n            if (draft.colourMode.startsWith(\"proxplot\")) {\n                const index = Number(draft.colourMode.replace(\"proxplot\", \"\"));\n                if (index >= (draft.plots ?? []).length) {\n                    draft.colourMode = \"gradient\";\n                }\n            }\n        });\n    });\n\n    //\n    // sound engine callbacks\n    //\n\n    const handleSetPlayback = useCallback((play: boolean) => {\n        if (parsedForm.value.error) return;\n\n        soundEngine.gotoMs(\n            getMsAtLine(\n                tuneForm.value.tune,\n                parsedForm.value.chars,\n                selectedLine.value\n            )\n        );\n\n        playing.set(play);\n\n        if (play) {\n            soundEngine.play();\n            rulerState.set((draft) => {\n                draft.notes.clear();\n            });\n        } else {\n            soundEngine.pause();\n        }\n    }, []);\n\n    const handleTogglePlayback = useCallback((state: string) => {\n        handleSetPlayback(state === \"paused\");\n    }, []);\n\n    const handleToggleLoop = useCallback(() => {\n        const newValue = !looping.value;\n        looping.set(newValue);\n        soundEngine.setLoopActive(newValue);\n    }, []);\n\n    //\n    // special key combos\n    //\n\n    useEffect(() => {\n        const callback = (event: KeyboardEvent) => {\n            if ((event.ctrlKey || event.metaKey) && event.keyCode === 13) {\n                handleSetPlayback(playing.value);\n            }\n            if ((event.ctrlKey || event.metaKey) && event.keyCode === 90) {\n                event.preventDefault();\n                if (event.shiftKey) {\n                    tuneForm.redo();\n                } else {\n                    tuneForm.undo();\n                }\n            }\n        };\n\n        document.addEventListener(\"keydown\", callback);\n        return () => document.removeEventListener(\"keydown\", callback);\n    }, []);\n\n    //\n    // sidebar state\n    //\n\n    const [sidebarState, setSidebar] = useState<SidebarState>(() => {\n        return parsedForm.value?.initialRulerState?.lowHz ? \"ruler\" : \"info\";\n    });\n\n    const toggleSidebarInfo = useCallback(() => {\n        setSidebar((s) => (s !== \"info\" ? \"info\" : \"none\"));\n    }, []);\n\n    const toggleSidebarShare = useCallback(() => {\n        setSidebar((s) => (s !== \"share\" ? \"share\" : \"none\"));\n    }, []);\n\n    const toggleSidebarRuler = useCallback(() => {\n        setSidebar((s) => (s !== \"ruler\" ? \"ruler\" : \"none\"));\n    }, []);\n\n    const onSetTune = useCallback(async (tune: string): Promise<void> => {\n        tuneForm.branch(\"tune\").set(tune);\n        await soundEngine.gotoMs(0);\n        handleSetPlayback(true);\n    }, []);\n\n    const codepaneContainerProps = {};\n\n    //\n    // elements\n    //\n\n    const playPause = playing.render(\n        (form) => {\n            return (\n                <IconToggle\n                    state={form.useValue() ? \"playing\" : \"paused\"}\n                    paths={PLAY_PATHS}\n                    onClick={handleTogglePlayback}\n                    loaded={loaded}\n                    hoverBackground\n                    large={!tuneForm.branch(\"embed\").useValue()}\n                />\n            );\n        },\n        [loaded]\n    );\n\n    const undoRedo = tuneForm.render((form) => {\n        const { canUndo, canRedo } = form.useHistory();\n        return (\n            <>\n                <SideButton onClick={form.undo} disabled={!canUndo}>\n                    Undo\n                </SideButton>\n                <SideButton onClick={form.redo} disabled={!canRedo}>\n                    Redo\n                </SideButton>\n            </>\n        );\n    });\n\n    const loop = looping.render((looping) => {\n        return (\n            <SideButton onClick={handleToggleLoop} active={looping.useValue()}>\n                Loop\n            </SideButton>\n        );\n    });\n\n    const sidebarToggles = (\n        <>\n            <SideButton onClick={toggleSidebarInfo}>Info</SideButton>\n            <SideButton onClick={toggleSidebarShare}>Share</SideButton>\n            <SideButton onClick={toggleSidebarRuler}>Ruler</SideButton>\n        </>\n    );\n\n    const sidebar = (\n        <>\n            {sidebarState === \"info\" && (\n                <SidebarInfo onSetTune={onSetTune} setSidebar={setSidebar} />\n            )}\n            {sidebarState === \"share\" &&\n                tuneForm.render((form) => {\n                    const url = form.branch(\"url\").useValue();\n                    const urlEmbed = form.branch(\"urlEmbed\").useValue();\n                    return (\n                        <SidebarShare\n                            setSidebar={setSidebar}\n                            url={url}\n                            urlEmbed={urlEmbed}\n                        />\n                    );\n                })}\n            {sidebarState === \"ruler\" && (\n                <Sidebar\n                    setSidebar={setSidebar}\n                    title=\"Pitch ruler\"\n                    desc=\"Click and drag to pan, use mousewheel to zoom.\"\n                    wide\n                >\n                    <PitchRuler rulerState={rulerState} />\n                </Sidebar>\n            )}\n        </>\n    );\n\n    const code = (\n        <CodePanel\n            tuneForm={tuneForm}\n            parsedForm={parsedForm}\n            selectedLine={selectedLine}\n        />\n    );\n\n    const htmlTitle = <SetHtmlTitle tuneForm={tuneForm} />;\n\n    const openOnXenpaper = tuneForm.render(\"url\", (form) => (\n        <EditOnXenpaperButton href={form.useValue()} target=\"_blank\">\n            Edit on Xenpaper\n        </EditOnXenpaperButton>\n    ));\n\n    const embedLayout = tuneForm.branch(\"embed\").useValue();\n\n    if (embedLayout) {\n        return (\n            <EmbedLayout\n                playPause={playPause}\n                loop={loop}\n                code={code}\n                openOnXenpaper={openOnXenpaper}\n                htmlTitle={htmlTitle}\n                codepaneContainerProps={codepaneContainerProps}\n            />\n        );\n    }\n\n    return (\n        <NormalLayout\n            playPause={playPause}\n            undoRedo={undoRedo}\n            loop={loop}\n            code={code}\n            htmlTitle={htmlTitle}\n            sidebarToggles={sidebarToggles}\n            sidebar={sidebar}\n            codepaneContainerProps={codepaneContainerProps}\n        />\n    );\n}\n\n//\n// layouts\n//\n\ntype NormalLayoutProps = {\n    playPause: React.ReactNode;\n    undoRedo: React.ReactNode;\n    loop: React.ReactNode;\n    code: React.ReactNode;\n    htmlTitle: React.ReactNode;\n    sidebarToggles: React.ReactNode;\n    sidebar: React.ReactNode;\n    codepaneContainerProps: { [prop: string]: unknown };\n};\n\nfunction NormalLayout(props: NormalLayoutProps): React.ReactElement {\n    const {\n        playPause,\n        undoRedo,\n        loop,\n        code,\n        htmlTitle,\n        sidebarToggles,\n        sidebar,\n        codepaneContainerProps,\n    } = props;\n\n    return (\n        <Flex height=\"100vh\" flexDirection=\"column\">\n            <Flex\n                display={[\"block\", \"flex\"]}\n                flexGrow=\"1\"\n                flexShrink=\"1\"\n                minHeight=\"0\"\n                position=\"relative\"\n            >\n                {/* toolbar on mobile */}\n                <Toolbar\n                    display={[\"flex\", \"none\"]}\n                    position=\"fixed\"\n                    top={0}\n                    width=\"100%\"\n                >\n                    {playPause}\n                    {undoRedo}\n                    {loop}\n                </Toolbar>\n                {/* toolbar on desktop */}\n                <Toolbar display={[\"none\", \"block\"]} mt={4} px={2} pt=\"12px\">\n                    <Box mb={3}>{playPause}</Box>\n                    {undoRedo}\n                    {loop}\n                    <Hr my={2} />\n                    {sidebarToggles}\n                </Toolbar>\n                {/* codepane */}\n                <Box\n                    flexGrow=\"1\"\n                    flexShrink=\"1\"\n                    pl={[0, 3]}\n                    overflow=\"auto\"\n                    mt={3}\n                    pt={[\"24px\", 3]}\n                    {...codepaneContainerProps}\n                >\n                    {code}\n                </Box>\n                {/* horizontal rule on mobile */}\n                <Hr display={[\"block\", \"none\"]} mt={4} />\n                {/* more tool buttons on mobile */}\n                <Box display={[\"flex\", \"none\"]}>{sidebarToggles}</Box>\n                {/* sidebars */}\n                {sidebar}\n            </Flex>\n            <Footer display={[\"none\", \"none\", \"block\"]} />\n            {htmlTitle}\n        </Flex>\n    );\n}\n\ntype EmbedLayoutProps = {\n    playPause: React.ReactNode;\n    loop: React.ReactNode;\n    code: React.ReactNode;\n    openOnXenpaper: React.ReactNode;\n    htmlTitle: React.ReactNode;\n    codepaneContainerProps: { [prop: string]: unknown };\n};\n\nfunction EmbedLayout(props: EmbedLayoutProps): React.ReactElement {\n    const {\n        playPause,\n        loop,\n        code,\n        htmlTitle,\n        openOnXenpaper,\n        codepaneContainerProps,\n    } = props;\n\n    return (\n        <Flex height=\"100vh\" flexDirection=\"column\">\n            <Flex flexGrow=\"1\" flexShrink=\"1\" minHeight=\"0\" position=\"relative\">\n                <Toolbar display=\"flex\" position=\"fixed\" top={0} width=\"100%\">\n                    {playPause}\n                    {loop}\n                    {openOnXenpaper}\n                </Toolbar>\n                <Box\n                    flexGrow=\"1\"\n                    flexShrink=\"1\"\n                    overflow=\"auto\"\n                    mt={3}\n                    pt=\"24px\"\n                    {...codepaneContainerProps}\n                >\n                    {code}\n                </Box>\n            </Flex>\n            {htmlTitle}\n        </Flex>\n    );\n}\n\n//\n// codepanel\n//\n\ntype CodePanelProps = {\n    tuneForm: Dendriform<TuneForm>;\n    parsedForm: Dendriform<Parsed>;\n    selectedLine: Dendriform<number>;\n};\n\nfunction CodePanel(props: CodePanelProps): React.ReactElement {\n    return props.tuneForm.render((form) => {\n        const embed = form.branch(\"embed\").useValue();\n\n        // get dendriform state values\n        const { chars, error } = props.parsedForm.useValue();\n\n        // use value with a 200ms debounce for perf reasons\n        // this debounce does cause the code value to progress forward\n        // without the calculated syntax highlighting\n        // so colours will be momentarily skew-whiff\n        // but thats better than parsing the xenpaper AST at every keystroke\n        const inputProps = useInput(form.branch(\"tune\"), 200);\n        const tuneChars: string[] = inputProps.value.split(\"\");\n        const charDataArray: (CharData | undefined)[] = tuneChars.map(\n            (chr, index) => chars?.[index]\n        );\n\n        const hasPlayStartButtons = tuneChars.some((ch) => ch === \"\\n\");\n        let playStartLine = 0;\n\n        const charElements: React.ReactNode[] = [];\n\n        const createPlayStart = () => {\n            charElements.push(\n                <PlayStart\n                    key={`playstart${playStartLine}`}\n                    line={playStartLine++}\n                    selectedLine={props.selectedLine}\n                />\n            );\n        };\n\n        if (hasPlayStartButtons) {\n            createPlayStart();\n        }\n        charDataArray.forEach((charData, index) => {\n            const ch = tuneChars[index];\n\n            charElements.push(\n                <Char\n                    key={index}\n                    ch={ch}\n                    charData={charData}\n                    soundEngine={soundEngine}\n                />\n            );\n\n            if (ch === \"\\n\") {\n                createPlayStart();\n            }\n        });\n\n        // stop event propagation here so we can detect clicks outside of this element in isolation\n        const stopPropagation = (e: Event) => e.stopPropagation();\n\n        return (\n            <Box onClick={stopPropagation}>\n                <Codearea\n                    {...inputProps}\n                    charElements={charElements}\n                    freeze={embed}\n                />\n                {error && (\n                    <Box>\n                        <ErrorMessage>Error: {error}</ErrorMessage>\n                    </Box>\n                )}\n            </Box>\n        );\n    });\n}\n\n//\n// html title\n//\n\ntype SetHtmlTitleProps = {\n    tuneForm: Dendriform<TuneForm>;\n};\n\nfunction SetHtmlTitle(props: SetHtmlTitleProps): React.ReactElement {\n    return props.tuneForm.render(\"tune\", (form) => {\n        const tune = form.useValue();\n        // set title based on code in text area\n        const titleLimit = 20;\n        const title =\n            tune.length === 0\n                ? \"Xenpaper\"\n                : tune.length > titleLimit\n                ? `Xenpaper: ${tune.slice(0, titleLimit)}...`\n                : `Xenpaper: ${tune}`;\n\n        return (\n            <Helmet>\n                <title>{title}</title>\n                <meta property=\"og:title\" content={title} />\n            </Helmet>\n        );\n    });\n}\n\n//\n//\n// styled components\n//\n\nconst Toolbar = styled(Box)`\n    background-color: ${(props) => props.theme.colors.background.normal};\n    z-index: 4;\n`;\n\nconst Hr = styled(Box)`\n    border-top: 1px ${(props) => props.theme.colors.background.light} solid;\n`;\n\ntype SideButtonProps = {\n    active?: boolean;\n    multiline?: boolean;\n};\n\nconst SideButton = styled.button<SideButtonProps>`\n    border: none;\n    display: block;\n    padding: ${(props) => (props.multiline ? \".5rem\" : \"1rem .5rem\")};\n    cursor: ${(props) => (props.disabled ? \"default\" : \"pointer\")};\n    background-color: ${(props) =>\n        props.active\n            ? props.theme.colors.text.placeholder\n            : props.theme.colors.background.normal};\n    color: ${(props) =>\n        props.disabled\n            ? props.theme.colors.highlights.unknown\n            : props.active\n            ? props.theme.colors.background.normal\n            : props.theme.colors.highlights.comment};\n    position: relative;\n    outline: none;\n    font-family: ${(props) => props.theme.fonts.mono};\n    font-size: ${(props) => (props.multiline ? \"0.8rem\" : \"0.9rem\")};\n    text-align: center;\n    width: auto;\n    text-transform: uppercase;\n    border-left: 3px solid transparent;\n    ${(props) => props.multiline && `line-height: 1em;`}\n\n    ${(props) =>\n        !props.active\n            ? `&:hover, &:focus, &:active {\n        background-color: ${props.theme.colors.background.light};\n    }`\n            : ``}\n\n    @media all and (min-width: ${(props) => props.theme.widths.sm}) {\n        padding: 0.5rem;\n        font-size: ${(props) => (props.multiline ? \"0.9rem\" : \"1.1rem\")};\n        width: 5rem;\n    }\n`;\n\ntype EditOnXenpaperButtonProps = {\n    multiline?: boolean;\n};\n\nconst EditOnXenpaperButton = styled.a<EditOnXenpaperButtonProps>`\n    border: none;\n    height: 3rem;\n    line-height: 1rem;\n    display: block;\n    padding: ${(props) => (props.multiline ? \".5rem\" : \"1rem .5rem\")};\n    cursor: pointer;\n    background-color: ${(props) => props.theme.colors.background.normal};\n    color: ${(props) => props.theme.colors.highlights.comment};\n    position: relative;\n    outline: none;\n    font-family: ${(props) => props.theme.fonts.mono};\n    font-size: ${(props) => (props.multiline ? \"0.8rem\" : \"0.9rem\")};\n    text-align: center;\n    width: auto;\n    text-transform: uppercase;\n    border-left: 3px solid transparent;\n    ${(props) => props.multiline && `line-height: 1em;`}\n    text-decoration: none;\n\n    &:hover,\n    &:focus,\n    &:active {\n        background-color: ${(props) => props.theme.colors.background.light};\n        text-decoration: none;\n    }\n\n    margin-left: auto;\n\n    @media all and (min-width: ${(props) => props.theme.widths.sm}) {\n        font-size: ${(props) => (props.multiline ? \"0.9rem\" : \"1.1rem\")};\n    }\n`;\n\ntype PlayStartProps = {\n    line: number;\n    selectedLine: Dendriform<number>;\n};\n\nconst PlayStart = styled(({ line, selectedLine, ...props }: PlayStartProps) => {\n    const onClick = () => selectedLine.set(line);\n    return (\n        <span {...props} onClick={onClick}>\n            {\">\"}\n        </span>\n    );\n})`\n    position: absolute;\n    left: 0.8rem;\n    border: none;\n    display: block;\n    cursor: pointer;\n    color: ${(props) => props.theme.colors.text.placeholder};\n    outline: none;\n    opacity: ${(props) =>\n        props.selectedLine.useValue() === props.line ? \"1\" : \".2\"};\n    pointer-events: auto;\n\n    transition: opacity 0.2s ease-out;\n\n    &:hover,\n    &:focus,\n    &:active {\n        opacity: 1;\n    }\n`;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport {Xenpaper} from '@xenpaper/xenpaper-ui';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Xenpaper />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}